name: 'Setup Environment'
description: 'Generates the environment variables for the workflow'
inputs:
  environment-name:
    description: 'Current environment'
    required: true
outputs:
  algolia-app-id-name:
    description: 'Algolia App id SSM name'
    value: ${{ steps.vars.outputs.algolia-app-id-name }}
  algolia-api-key-name:
    description: 'Algolia Api key SSM Name'
    value: ${{ steps.vars.outputs.algolia-api-key-name }}
  algolia-app-name:
    description: 'Algolia App Name'
    value: ${{ steps.vars.outputs.algolia-app-name }}
  algolia-index:
    description: 'Algolia Index'
    value: ${{ steps.vars.outputs.algolia-index }}
  app-release:
    description: 'App Release'
    value: ${{ steps.vars.outputs.app-release }}
  asap-api-url:
    description: 'ASAP API Url'
    value: ${{ steps.vars.outputs.asap-api-url }}
  asap-app-url:
    description: 'ASAP APP Url'
    value: ${{ steps.vars.outputs.asap-app-url }}
  asap-host-name:
    description: 'ASAP Host Name'
    value: ${{ steps.vars.outputs.asap-host-name }}
  auth0-client-id:
    description: 'Auth0 Client ID'
    value: ${{ steps.vars.outputs.auth0-client-id }}
  auth0-domain:
    description: 'Auth0 Domain'
    value: ${{ steps.vars.outputs.auth0-domain }}
  aws-acm-asap-science-certificate-arn:
    description: 'AWS ACM ASAP Science Certificate ARN'
    value: ${{ steps.vars.outputs.aws-acm-asap-science-certificate-arn }}
  aws-acm-certificate-arn:
    description: 'AWS ACM Certificate ARN'
    value: ${{ steps.vars.outputs.aws-acm-certificate-arn }}
  aws-default-region:
    description: 'AWS Default Region'
    value: ${{ steps.vars.outputs.aws-default-region }}
  aws-region:
    description: 'AWS Region'
    value: ${{ steps.vars.outputs.aws-region }}
  bucket-name:
    description: 'Bucket Name'
    value: ${{ steps.vars.outputs.bucket-name }}
  pr-number:
    description: 'PR Number'
    value: ${{ steps.vars.outputs.pr-number }}
  print-sync-logs-on-success:
    description: 'Print sync logs on success'
    value: ${{ steps.vars.outputs.print-sync-logs-on-success }}
  react-app-environment:
    description: 'React App Environment'
    value: ${{ steps.vars.outputs.react-app-environment }}
  react-app-gtm-container-id:
    description: 'React App GTM Container ID'
    value: ${{ steps.vars.outputs.react-app-gtm-container-id }}
  react-app-sentry-dsn:
    description: 'React App Sentry DSN'
    value: ${{ steps.vars.outputs.react-app-sentry-dsn }}
  sentry-dsn-api:
    description: 'Sentry DSN API'
    value: ${{ steps.vars.outputs.sentry-dsn-api }}
  sentry-dsn-calendar:
    description: 'Sentry DSN Calendar'
    value: ${{ steps.vars.outputs.sentry-dsn-calendar }}
  sentry-dsn-user-invite:
    description: 'Sentry DSN User Invite'
    value: ${{ steps.vars.outputs.sentry-dsn-user-invite }}
  ses-region:
    description: 'SES Region'
    value: ${{ steps.vars.outputs.ses-region }}
  sls-stage:
    description: 'SLS Stage'
    value: ${{ steps.vars.outputs.sls-stage }}
  squidex-app-name:
    description: 'Squidex App Name'
    value: ${{ steps.vars.outputs.squidex-app-name }}
  squidex-base-url:
    description: 'Squidex Base Url'
    value: ${{ steps.vars.outputs.squidex-base-url }}
  squidex-client-id:
    description: 'Squidex Client ID'
    value: ${{ steps.vars.outputs.squidex-client-id }}
runs:
  using: 'composite'
  steps:
    - name: Setup
      id: vars
      shell: bash
      run: |

        source .github/environment/All.env
        source .github/environment/$ENVIRONMENT_NAME.env

        echo "::set-output name=algolia-api-key-name::$ALGOLIA_API_KEY_NAME"
        echo "::set-output name=algolia-app-id-name::$ALGOLIA_APP_ID_NAME"
        echo "::set-output name=algolia-app-name::$ALGOLIA_APP_NAME"
        echo "::set-output name=asap-host-name::$ASAP_HOSTNAME"
        echo "::set-output name=auth0-client-id::$AUTH0_CLIENT_ID"
        echo "::set-output name=auth0-domain::$AUTH0_DOMAIN"
        echo "::set-output name=aws-acm-asap-science-certificate-arn::$AWS_ACM_ASAP_SCIENCE_CERTIFICATE_ARN"
        echo "::set-output name=aws-acm-certificate-arn::$AWS_ACM_CERTIFICATE_ARN"
        echo "::set-output name=aws-default-region::$AWS_DEFAULT_REGION"
        echo "::set-output name=aws-region::$AWS_REGION"
        echo "::set-output name=print-sync-logs-on-success::$PRINT_SYNC_LOGS_ON_SUCCESS"
        echo "::set-output name=react-app-environment::$REACT_APP_ENVIRONMENT"
        echo "::set-output name=sentry-dsn-api::$SENTRY_DSN_API"
        echo "::set-output name=sentry-dsn-calendar::$SENTRY_DSN_CALENDAR"
        echo "::set-output name=sentry-dsn-user-invite::$SENTRY_DSN_USER_INVITE"
        echo "::set-output name=squidex-base-url::$SQUIDEX_BASE_URL"
        echo "::set-output name=squidex-client-id::$SQUIDEX_CLIENT_ID"

        if [ "$ENVIRONMENT_NAME" = "Branch" ]; then

          PR_NUMBER=${{ github.event.number || github.event.inputs.prNumber || 1466 }}

          echo "::set-output name=algolia-index::asap-hub_CI-$PR_NUMBER"
          echo "::set-output name=app-release::${{ github.run_id }}-dev"
          echo "::set-output name=asap-api-url::https://api-$PR_NUMBER.$ASAP_HOSTNAME"
          echo "::set-output name=asap-app-url::https://$PR_NUMBER.$ASAP_HOSTNAME"
          echo "::set-output name=bucket-name::$BUCKET_NAME"
          echo "::set-output name=pr-number::$PR_NUMBER"
          echo "::set-output name=sls-stage::$PR_NUMBER"
          echo "::set-output name=squidex-app-name::$PR_NUMBER"
        elif [ "$ENVIRONMENT_NAME" = 'Development' ]; then
          echo "::set-output name=app-release::${{ github.run_id }}-dev"
        elif [ "$ENVIRONMENT_NAME" = 'Production' ]; then
          echo "::set-output name=app-release::${{ github.run_id }}-prod"
          echo "::set-output name=react-app-gtm-container-id::$REACT_APP_GTM_CONTAINER_ID"
        else
          echo "Unknown environment: $ENVIRONMENT_NAME"
          exit 1
        fi
        if [ "$ENVIRONMENT_NAME" = 'Development' ] || [ "$ENVIRONMENT_NAME" = 'Production' ]; then
          echo "::set-output name=algolia-index::$ALGOLIA_INDEX"
          echo "::set-output name=asap-api-url::$ASAP_API_URL"
          echo "::set-output name=asap-app-url::$ASAP_APP_URL"
          echo "::set-output name=react-app-sentry-dsn::REACT_APP_SENTRY_DSN"
          echo "::set-output name=ses-region::$SES_REGION"
          echo "::set-output name=sls-stage::$SLS_STAGE"
          echo "::set-output name=squidex-app-name::$SQUIDEX_APP_NAME"
        fi
      env:
        ENVIRONMENT_NAME: ${{ inputs.environment-name }}
