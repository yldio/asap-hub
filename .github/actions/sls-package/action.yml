name: sls package action
description: Reusable sls package

inputs:
  active-campaign-account:
    description: 'Active Campaign Account'
    required: true
  active-campaign-token:
    description: 'Active Campaign Token'
    required: true
  algolia-index:
    description: 'Algolia index name'
    required: true
  app:
    description: 'Server application name'
    required: true
  auth0-audience:
    description: 'Auth0 Audience'
    required: true
  auth0-client-id:
    description: 'Auth0 Client ID'
    required: true
  auth0-shared-secret:
    description: 'Auth0 Shared Secret'
    required: true
  aws-access-key-id:
    description: 'AWS Access Key ID'
    required: true
  aws-acm-certificate-arn:
    description: 'Arn for AWS ACM Certificate'
    required: true
  aws-region:
    description: 'AWS Region'
    required: true
  aws-secret-access-key:
    description: 'AWS Secret Access Key'
    required: true
  contentful-access-token:
    description: 'Contentful Access Token'
    required: true
  contentful-env:
    description: 'Contentful Environment'
    required: true
  contentful-management-access-token:
    description: 'Contentful Management Access Token'
    required: true
  contentful-preview-access-token:
    description: 'Contentful Preview Access Token'
    required: true
  contentful-space-id:
    description: 'Contentful Space ID'
    required: true
  contentful-webhook-authentication-token:
    description: 'Contentful Webhook Authentication Token'
    required: true
  environment-name:
    description: 'The environment name'
    required: true
  hostname:
    description: 'Hostname'
    required: true
  sentry-dsn-api:
    description: 'Sentry DSN for the API'
    required: true
  sentry-dsn-handlers:
    description: 'Sentry DSN for handlers other than the API'
    required: true
  ses-region:
    description: 'AWS SES Region'
    required: true
  slack-webhook:
    description: 'Slack webhook URL'
    required: false
  sls-stage:
    description: 'Serverless Stage'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Setup
      id: setup
      uses: ./.github/actions/setup-environment
      with:
        environment-name: ${{ inputs.environment-name }}
    - name: Cache build output
      uses: ./.github/actions/cache-unplugged
      with:
        environment-name: ${{ inputs.environment-name }}
    - name: Cache build definitions
      uses: ./.github/actions/cache-build
      with:
        cache-prefix: ${{ steps.setup.outputs.cache-prefix-definitions }}
        environment-name: ${{ inputs.environment-name }}
    - name: Cache transpile output
      uses: ./.github/actions/cache-build
      with:
        cache-prefix: ${{ steps.setup.outputs.cache-prefix-transpile }}
        environment-name: ${{ inputs.environment-name }}
    - name: Generate package
      shell: bash
      run: |
        yarn workspace @asap-hub/${{ inputs.app }} run pnpify serverless package --package $PWD/${{ inputs.app }}-sls-package
      env:
        ACTIVE_CAMPAIGN_ACCOUNT: ${{ inputs.active-campaign-account }}
        ACTIVE_CAMPAIGN_TOKEN: ${{ inputs.active-campaign-token }}
        ALGOLIA_INDEX: ${{ inputs.algolia-index }}
        AUTH0_AUDIENCE: ${{ inputs.auth0-audience }}
        AUTH0_CLIENT_ID: ${{ inputs.auth0-client-id }}
        AUTH0_SHARED_SECRET: ${{ inputs.auth0-shared-secret }}
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_ACM_CERTIFICATE_ARN: ${{ inputs.aws-acm-certificate-arn }}
        AWS_REGION: ${{ inputs.aws-region }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}
        CONTENTFUL_ACCESS_TOKEN: ${{ inputs.contentful-access-token }}
        CONTENTFUL_ENV: ${{ inputs.contentful-env }}
        CONTENTFUL_MANAGEMENT_ACCESS_TOKEN: ${{ inputs.contentful-management-access-token }}
        CONTENTFUL_PREVIEW_ACCESS_TOKEN: ${{ inputs.contentful-preview-access-token }}
        CONTENTFUL_SPACE_ID: ${{ inputs.contentful-space-id }}
        CONTENTFUL_WEBHOOK_AUTHENTICATION_TOKEN: ${{ inputs.contentful-webhook-authentication-token }}
        CURRENT_REVISION: ${{ github.sha }}
        HOSTNAME: ${{ inputs.hostname }}
        NODE_ENV: 'production'
        NODE_OPTIONS: '--max-old-space-size=8192'
        SENTRY_DSN_API: ${{ inputs.sentry-dsn-api }}
        SENTRY_DSN_PUBLIC_API: ${{ inputs.sentry-dsn-public-api }}
        SENTRY_DSN_HANDLERS: ${{ inputs.sentry-dsn-handlers }}
        SES_REGION: ${{ inputs.ses-region }}
        SLACK_WEBHOOK: ${{ inputs.slack-webhook }}
        SLS_STAGE: ${{ inputs.sls-stage }}
        S3_SYNC_ENABLED: 'false'
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.app }}-sls-package-${{ inputs.environment-name }}
        path: '${{ inputs.app }}-sls-package'
        retention-days: 1
