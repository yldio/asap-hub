name: Squidex Backup
description: Creates a Squidex Backup

inputs:
  aws-access-key-id:
    description: 'AWS Access Key ID'
    required: true
  aws-secret-access-key:
    description: 'AWS Secret Access Key'
    required: true
  bucket-name:
    description: 's3 bucket name for backup'
    required: true
  squidex-app-name:
    description: 'Squidex App Name'
    required: true
  squidex-ci-client-id:
    description: 'Squidex Client ID'
    required: true
  squidex-ci-client-secret:
    description: 'Squidex Client Secret'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Add the configuration
      shell: bash
      run: sq config add $SQUIDEX_APP $SQUIDEX_CLIENT_ID $SQUIDEX_CLIENT_SECRET
      env:
        SQUIDEX_APP: ${{ inputs.squidex-app-name }}
        SQUIDEX_CLIENT_ID: ${{ inputs.squidex-ci-client-id }}
        SQUIDEX_CLIENT_SECRET: ${{ inputs.squidex-ci-client-secret }}
    - name: Run sync out
      shell: bash
      run: sq sync out ./backup
    - name: Tar the files
      shell: bash
      run: |
        FILE_NAME=$(date +%s| cut -b1-13)-squidex-backup.tar.gz && \
        tar -czf $FILE_NAME backup/ && \
        echo "FILE_NAME=$FILE_NAME" >> $GITHUB_ENV
    - name: upload to S3
      shell: bash
      run: aws s3api put-object --bucket $BUCKET_NAME --key $FILE_NAME --body $FILE_NAME --storage-class STANDARD_IA
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}
        BUCKET_NAME: ${{ inputs.bucket-name }}
