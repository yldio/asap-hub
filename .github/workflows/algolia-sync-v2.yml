name: Sync Algolia with squidex V2 - Generic workflow

on:
  workflow_call:
    inputs:
      entity:
        type: string
        required: true
        description: Choose which entity to sync
      ALGOLIA_INDEX:
        type: string
        required: true
      SQUIDEX_APP_NAME:
        type: string
        required: true
      SSM_ALGOLIA_APP_ID_NAME:
        type: string
        required: true
      SSM_ALGOLIA_API_KEY_NAME:
        type: string
        required: true
    secrets:
      SQUIDEX_CLIENT_ID:
        required: true
      SQUIDEX_CLIENT_SECRET:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      SLACK_WEBHOOK:
        required: false

jobs:
  sync:
    runs-on: ubuntu-18.04
    env:
      SQUIDEX_CLIENT_ID: ${{ secrets.SQUIDEX_CLIENT_ID }}
      SQUIDEX_CLIENT_SECRET: ${{ secrets.SQUIDEX_CLIENT_SECRET }}
      SQUIDEX_APP_NAME: ${{ inputs.SQUIDEX_APP_NAME }}
      SQUIDEX_BASE_URL: https://cloud.squidex.io
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: 'us-east-1'
      ALGOLIA_INDEX: ${{ inputs.ALGOLIA_INDEX }}
      ALGOLIA_INDEX_TEMP: ${{ inputs.ALGOLIA_INDEX }}_temp'
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Build
        run: yarn exec "yarn workspaces foreach -vptR --from '{@asap-hub/asap-cli,@asap-hub/asap-server}' run build:babel"
      - name: Setup Environment Variables
        run: |
          echo "ALGOLIA_APP_ID=$(aws ssm get-parameter --name '${{ inputs.SSM_ALGOLIA_APP_ID_NAME }}' --query Parameter.Value --output text)" >> $GITHUB_ENV
          echo "ALGOLIA_API_KEY=$(aws ssm get-parameter --name '${{ inputs.SSM_ALGOLIA_API_KEY_NAME }}' --query Parameter.Value --output text)" >> $GITHUB_ENV
          echo "::add-mask::$(aws ssm get-parameter --name '${{ inputs.SSM_ALGOLIA_API_KEY_NAME }}' --query Parameter.Value --output text)"
      - name: Copy index without data to a temporary index (ALL)
        if: ${{ inputs.entity == 'all'}}
        run: yarn workspace @asap-hub/algolia run algolia transferindexconfig -a $ALGOLIA_APP_ID -k $ALGOLIA_API_KEY -n $ALGOLIA_INDEX -d $ALGOLIA_APP_ID -y $ALGOLIA_API_KEY -i $ALGOLIA_INDEX_TEMP
      - name: Copy index with data to a temporary index (ENTITY)
        if: ${{ inputs.entity != 'all'}}
        run: yarn workspace @asap-hub/algolia run algolia transferindex -a $ALGOLIA_APP_ID -k $ALGOLIA_API_KEY -n $ALGOLIA_INDEX -d $ALGOLIA_APP_ID -y $ALGOLIA_API_KEY -i $ALGOLIA_INDEX_TEMP
      - name: Remove the entity data (ENTITY)
        if: ${{ inputs.entity != 'all'}}
        env:
          ENTITY_TYPE: ${{ (inputs.entity == 'users' && 'user') || (inputs.entity == 'research-outputs' && 'research-output') || (inputs.entity == 'external-authors' && 'external-author') }}
        run: yarn algolia:remove-records -a $ALGOLIA_APP_ID -k $ALGOLIA_API_KEY -n $ALGOLIA_INDEX_TEMP -e $ENTITY_TYPE
      - name: Import Research Outputs (ROs | ALL)
        if: ${{ inputs.entity == 'research-outputs' || inputs.entity == 'all'}}
        env:
          ENTITY: 'research-outputs'
          ENTITY_TYPE: 'research-output'
        run: |
          yarn export:entity $ENTITY -f $ENTITY.json
          yarn workspace @asap-hub/algolia run algolia import -s "../../${ENTITY}.json" -a $ALGOLIA_APP_ID -k $ALGOLIA_API_KEY -n $ALGOLIA_INDEX_TEMP -t ./scripts/algolia-transformation.js
      - name: Import Users (USERs | ALL)
        if: ${{ inputs.entity == 'users' || inputs.entity == 'all'}}
        env:
          ENTITY: 'users'
          ENTITY_TYPE: 'user'
        run: |
          yarn export:entity $ENTITY -f $ENTITY.json
          yarn workspace @asap-hub/algolia run algolia import -s "../../${ENTITY}.json" -a $ALGOLIA_APP_ID -k $ALGOLIA_API_KEY -n $ALGOLIA_INDEX_TEMP -t ./scripts/algolia-transformation.js
      - name: Import External Authors (EXTERNAL_AUTHORS | ALL)
        if: ${{ inputs.entity == 'external-authors' || inputs.entity == 'all'}}
        env:
          ENTITY: 'external-authors'
          ENTITY_TYPE: 'external-author'
        run: |
          yarn export:entity $ENTITY -f $ENTITY.json
          yarn workspace @asap-hub/algolia run algolia import -s "../../${ENTITY}.json" -a $ALGOLIA_APP_ID -k $ALGOLIA_API_KEY -n $ALGOLIA_INDEX_TEMP -t ./scripts/algolia-transformation.js
      - name: Override index with the temp one
        run: yarn algolia:move-index -a $ALGOLIA_APP_ID -k $ALGOLIA_API_KEY -n $ALGOLIA_INDEX_TEMP -i $ALGOLIA_INDEX
      - uses: ./.github/actions/slack/
        if: ${{ failure() && env.SLACK_WEBHOOK }}
        with:
          message: Algolia Prod Sync
          webhook: ${{ env.SLACK_WEBHOOK }}
          status: failure
