name: Create database backup DEV
on: push
jobs:
  make_backup:
    runs-on: ubuntu-latest
    env:
      SQUIDEX_VERSION: '7.4'
      SQUIDEX_APP: 'asap-hub-dev'
      SQUIDEX_CLIENT_ID: ${{ secrets.SQUIDEX_CLIENT_ID_DEV }}
      SQUIDEX_CLIENT_SECRET: ${{ secrets.SQUIDEX_CLIENT_SECRET_DEV }}
    steps:
      - name: Cache Squidex CLI
        id: cache-squidex-cli
        uses: actions/cache@v2
        with:
          path: sq
          key: ${{ env.SQUIDEX_VERSION }}-squidex-cli
      - name: Get the CLI
        if: steps.cache-squidex-cli.outputs.cache-hit != 'true'
        run: wget https://github.com/Squidex/squidex-samples/releases/download/cli-v${{ env.SQUIDEX_VERSION }}/ubuntu-x64.zip
      - name: Unzip the CLI
        if: steps.cache-squidex-cli.outputs.cache-hit != 'true'
        run: unzip ubuntu-x64.zip -d sq/
      - name: Add the configuration
        if: steps.cache-squidex-cli.outputs.cache-hit != 'true'
        run: ./sq/sq config add $SQUIDEX_APP $SQUIDEX_CLIENT_ID $SQUIDEX_CLIENT_SECRET
      - name: Run sync
        run: ./sq/sq sync out ./backup -t schemas
      - name: Tar the files
        run: tar -czf $(date +%s| cut -b1-13)-squidex-dev-backup.tar.gz backup/
