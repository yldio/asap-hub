name: Build Docker Images

on:
  push:
    branches:
      - 'build-docker-images'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build and push squidex
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: asap-hub/squidex-utils
          IMAGE_TAG: ${{ github.sha }}
        run: |
          BASE_IMAGE_NAME=$ECR_REGISTRY/$ECR_REPOSITORY
          docker build -t $BASE_IMAGE_NAME:$IMAGE_TAG . -f ci/Dockerfile --target base
          docker tag $BASE_IMAGE_NAME:$IMAGE_TAG $BASE_IMAGE_NAME:latest
          docker push --all-tags $BASE_IMAGE_NAME
      - name: Build and push integration
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: asap-hub/node-python-sq
          IMAGE_TAG: ${{ github.sha }}
        run: |
          BASE_IMAGE_NAME=$ECR_REGISTRY/$ECR_REPOSITORY
          docker build -t $BASE_IMAGE_NAME:$IMAGE_TAG . -f ci/Dockerfile --target integration
          docker tag $BASE_IMAGE_NAME:$IMAGE_TAG $BASE_IMAGE_NAME:latest
          docker push --all-tags $BASE_IMAGE_NAME
