name: Build Docker Images

on:
  push:
    branches:
      - 'master'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION_ECR }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build squidex
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_NAME: asap-hub/squidex-utils
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $IMAGE_NAME . -f ci/Dockerfile --target base
          ECR_IMAGE_NAME=$ECR_REGISTRY/$IMAGE_NAME
          GHCR_IMAGE_NAME=ghcr.io/yldio/$IMAGE_NAME
          docker tag $IMAGE_NAME $ECR_IMAGE_NAME:$IMAGE_TAG
          docker tag $IMAGE_NAME $GHCR_IMAGE_NAME:$IMAGE_TAG
          docker tag $IMAGE_NAME $ECR_IMAGE_NAME:latest
          docker tag $IMAGE_NAME $GHCR_IMAGE_NAME:latest

          echo "ECR_IMAGE_NAME=$ECR_IMAGE_NAME" >> $GITHUB_ENV
          echo "GHCR_IMAGE_NAME=$GHCR_IMAGE_NAME" >> $GITHUB_ENV
      - name: push squidex
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          docker push --all-tags ${{ env.GHCR_IMAGE_NAME }}
          docker push --all-tags ${{ env.ECR_IMAGE_NAME }}

      - name: Build integration
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_NAME: asap-hub/node-python-sq
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $IMAGE_NAME . -f ci/Dockerfile --target integration
          ECR_IMAGE_NAME=$ECR_REGISTRY/$IMAGE_NAME
          GHCR_IMAGE_NAME=ghcr.io/yldio/$IMAGE_NAME
          docker tag $IMAGE_NAME $ECR_IMAGE_NAME:$IMAGE_TAG
          docker tag $IMAGE_NAME $GHCR_IMAGE_NAME:$IMAGE_TAG
          docker tag $IMAGE_NAME $ECR_IMAGE_NAME:latest
          docker tag $IMAGE_NAME $GHCR_IMAGE_NAME:latest
          echo "ECR_IMAGE_NAME=$ECR_IMAGE_NAME" >> $GITHUB_ENV
          echo "GHCR_IMAGE_NAME=$GHCR_IMAGE_NAME" >> $GITHUB_ENV
      - name: push integration
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          docker push --all-tags ${{ env.ECR_IMAGE_NAME }}
          docker push --all-tags ${{ env.GHCR_IMAGE_NAME }}
