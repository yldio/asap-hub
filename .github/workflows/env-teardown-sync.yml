name: Remove environment scheduled
on:
  pull_request:
    types: [assigned, unassigned]
jobs:
  setup:
    runs-on: ubuntu-18.04
    container:
      image: registry.gitlab.com/yldio/asap-hub/node-python-sq:latest
    env:
      SQUIDEX_CLIENT_ID: ${{ secrets.SQUIDEX_CLIENT_ID_TEST }}
      SQUIDEX_CLIENT_SECRET: ${{ secrets.SQUIDEX_CLIENT_SECRET_TEST }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Gets Squidex Environments
        id: get_envs
        run: |
          cd ci/integration/actions/find-envs
          npm ci
          cd -
          node ci/integration/actions/find-envs
      - name: The Outputs
        run: |
          echo "The outputs were ${{ steps.get_envs.outputs.availableApps }}"
      - uses: actions/github-script@v5
        with:
          script: |
            const availableApps = ${{ steps.get_envs.outputs.availableApps }};
            const openPrsRequest = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });
            const openPrs = openPrsRequest.data.map(({number}) => number.toString() );
            availableApps
              .filter((prNumber) => !openPrs.includes(prNumber))
              .forEach(
                console.log
              )
