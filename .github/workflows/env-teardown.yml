name: Remove environment
on:
  pull_request:
    types: [closed]
  workflow_dispatch:
    inputs:
      prNumber:
        required: true
        type: string
        description: Choose which PR number to destroy
jobs:
  setup:
    runs-on: ubuntu-latest
    env:
      PR_NUMBER: ${{ github.event.number || github.event.inputs.prNumber }}
    outputs:
      pr_number: ${{ steps.build_step.outputs.pr_number }}
      image: ${{ steps.image_name.outputs.image }}
    steps:
      - name: Build
        id: build_step
        run: |
          echo "::set-output name=pr_number::$PR_NUMBER"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Output Image Name
        id: image_name
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: asap-hub/squidex-utils
          IMAGE_TAG: 'latest'
        run: |
          BASE_IMAGE_NAME=$ECR_REGISTRY/$ECR_REPOSITORY
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
  sls_teardown:
    needs: setup
    runs-on: ubuntu-18.04
    # container:
    #   image: '249832953260.dkr.ecr.ap-southeast-2.amazonaws.com/asap-hub/squidex-utils'
    #   credentials:
    #     username: AWS
    #     # Here is the password retrieved as a secret that is set by the `login` job
    #     password: ${{ secrets.ECR_PASSWORD }}
    env:
      SLS_STAGE: ${{ needs.setup.outputs.pr_number }}
      NODE_ENV: 'production'
      ASAP_HOSTNAME: 'hub.asap.science'
      ASAP_API_URL: 'https://api-${{ needs.setup.outputs.pr_number }}.hub.asap.science'
      ASAP_APP_URL: 'https://${{ needs.setup.outputs.pr_number }}.hub.asap.science'
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ACM_CERTIFICATE_ARN: ${{ secrets.AWS_ACM_CERTIFICATE_ARN }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      SQUIDEX_APP_NAME: ${{ needs.setup.outputs.pr_number }}
      SQUIDEX_CLIENT_ID: ${{ secrets.SQUIDEX_CLIENT_ID_TEST }}
      SQUIDEX_CLIENT_SECRET: ${{ secrets.SQUIDEX_CLIENT_SECRET_TEST }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Rebuild dependencies
        with:
          image:  '249832953260.dkr.ecr.ap-southeast-2.amazonaws.com/asap-hub/squidex-utils'
          username: ${{ 'test' }}
          password: ${{ 'test' }}
        run: yarn rebuild
      # - name: Remove CF Stack
      #   if: ${{ env.SLS_STAGE != 'production' && env.SLS_STAGE != 'dev' }}
      #   run: yarn sls remove --verbose
      #   continue-on-error: true
      # - name: Delete PR Squidex App
      #   run: python ci/integration/scripts/delete-app.py

  # delete_algolia_indice:
  #   needs: setup
  #   runs-on: ubuntu-18.04
  #   env:
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #     AWS_DEFAULT_REGION: 'us-east-1'
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Fetch the Algolia keys
  #       run: |
  #         echo "ALGOLIA_APP_ID=$(aws ssm get-parameter --name 'algolia-app-id-dev' --query Parameter.Value --output text)" >> $GITHUB_ENV
  #         echo "ALGOLIA_API_KEY=$(aws ssm get-parameter --name 'algolia-api-key-ci-dev' --query Parameter.Value --output text)" >> $GITHUB_ENV
  #     - name: Delete the index
  #       run: |
  #         cd apps/asap-server
  #         export ALGOLIA_INDEX=asap-hub_research_outputs_CI-${{ needs.setup.outputs.pr_number }}
  #         yarn workspace @asap-hub/asap-server run algolia deleteindicespattern -a $ALGOLIA_APP_ID -k $ALGOLIA_API_KEY -r "^$ALGOLIA_INDEX$" -x false
  # notify_failure:
  #   runs-on: ubuntu-18.04
  #   needs: [sls_teardown, delete_algolia_indice]
  #   if: failure()
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - uses: ./.github/actions/slack/
  #       with:
  #         message: Environment teardown
  #         webhook: ${{ secrets.SLACK_WEBHOOK }}
