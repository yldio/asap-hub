name: Remove environment
permissions: read-all
on:
  pull_request_target:
    types: [closed]
  workflow_dispatch:
    inputs:
      pr-number:
        required: true
        type: string
        description: Choose which PR number to destroy
jobs:
  sls:
    if: ${{ github.event.inputs.pr-number || github.event.pull_request.head.repo.full_name == 'yldio/asap-hub' }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:5b32d6f578fa819b09d2833c0e9a3bbc8f4eec61
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    environment: Branch
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: Branch
      - name: Check PR Number
        if: ${{ github.event.inputs.pr-number }}
        uses: ./.github/actions/is-number
        with:
          number: ${{ github.event.inputs.pr-number }}
      - name: Rebuild dependencies
        run: yarn rebuild
      - name: Remove GitLab CF Stack
        env:
          ASAP_API_URL: ${{ steps.setup.outputs.asap-api-url }}
          ASAP_APP_URL: ${{ steps.setup.outputs.asap-app-url }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_ACM_CERTIFICATE_ARN: ${{ steps.setup.outputs.aws-acm-certificate-arn }}
          AWS_REGION: ${{ steps.setup.outputs.aws-region }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          CURRENT_REVISION: ${{ github.sha }}
          LIGHTSTEP_TOKEN: ${{ secrets.LIGHTSTEP_TOKEN }}
          NODE_ENV: 'production'
          SENTRY_DSN_API: ${{ steps.setup.outputs.sentry-dsn-api }}
          SENTRY_DSN_CALENDAR: ${{ steps.setup.outputs.sentry-dsn-calendar }}
          SENTRY_DSN_USER_INVITE: ${{ steps.setup.outputs.sentry-dsn-user-invite }}
          SLS_STAGE: ${{ steps.setup.outputs.sls-stage }}-gitlab
          SQUIDEX_APP_NAME: ${{ steps.setup.outputs.squidex-app-name }}
          SQUIDEX_BASE_URL: ${{ steps.setup.outputs.squidex-base-url }}
          SQUIDEX_CLIENT_ID: ${{ steps.setup.outputs.squidex-client-id }}
          SQUIDEX_CLIENT_SECRET: ${{ secrets.SQUIDEX_CLIENT_SECRET }}
          SQUIDEX_SHARED_SECRET: ${{ secrets.SQUIDEX_SHARED_SECRET }}
        if: ${{ env.SLS_STAGE != 'production' && env.SLS_STAGE != 'dev' }}
        run: yarn sls remove --verbose
        continue-on-error: true
      - name: Delete PR Squidex App created by gitlab
        env:
          SQUIDEX_APP_NAME: ${{ steps.setup.outputs.squidex-app-name }}-gitlab
          SQUIDEX_BASE_URL: ${{ steps.setup.outputs.squidex-base-url }}
          SQUIDEX_CLIENT_ID: ${{ steps.setup.outputs.squidex-client-id }}
          SQUIDEX_CLIENT_SECRET: ${{ secrets.SQUIDEX_CLIENT_SECRET }}
        run: python .github/scripts/squidex/delete-app.py

  notify_failure:
    runs-on: ubuntu-latest
    needs: [sls]
    if: ${{ failure() && (github.event.inputs.pr-number || github.event.pull_request.head.repo.full_name == 'yldio/asap-hub') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: ./.github/actions/slack/
        with:
          message: Environment teardown
          webhook: ${{ secrets.SLACK_WEBHOOK }}
          status: failure
