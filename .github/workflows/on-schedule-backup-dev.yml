name: DEV - Database backups
on:
  schedule:
    - cron: '0 7 * * MON-FRI' # At 07:00 UTC on every day-of-week from Monday through Friday.
  workflow_dispatch:
jobs:
  crn-contentful:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:be0ebbcbd0ff209d56070f09590c5d9622e8a6dc
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    environment: Development
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: Development
      - name: Backup
        uses: ./.github/actions/contentful-backup
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          bucket-name: ${{ steps.setup.outputs.crn-contentful-backup-bucket-name }}
          contentful-space-id: ${{ steps.setup.outputs.contentful-space-id }}
          contentful-environment: ${{ steps.setup.outputs.contentful-environment }}
          contentful-token: ${{ secrets.CONTENTFUL_MANAGEMENT_TOKEN }}

  crn-squidex:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:be0ebbcbd0ff209d56070f09590c5d9622e8a6dc
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    environment: Development
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: Development
      - name: Backup
        uses: ./.github/actions/squidex-backup
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          bucket-name: ${{ steps.setup.outputs.crn-squidex-backup-bucket-name }}
          squidex-app-name: ${{ steps.setup.outputs.crn-squidex-app-name }}
          squidex-ci-client-id: ${{ steps.setup.outputs.crn-squidex-ci-client-id}}
          squidex-ci-client-secret: ${{ secrets.CRN_SQUIDEX_CI_CLIENT_SECRET }}

  gp2-squidex:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:be0ebbcbd0ff209d56070f09590c5d9622e8a6dc
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    environment: Development
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: Development
      - name: Backup
        uses: ./.github/actions/squidex-backup
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          bucket-name: ${{ steps.setup.outputs.gp2-squidex-backup-bucket-name }}
          squidex-app-name: ${{ steps.setup.outputs.gp2-squidex-app-name }}
          squidex-ci-client-id: ${{ steps.setup.outputs.gp2-squidex-ci-client-id}}
          squidex-ci-client-secret: ${{ secrets.GP2_SQUIDEX_CI_CLIENT_SECRET }}
