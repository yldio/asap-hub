name: PROD - Create Squidex Backup
on:
  schedule:
    - cron: '0 7,19 * * *' # Twice a day: 7am and 7pm UTC
  workflow_dispatch:
jobs:
  setup:
    uses: ./.github/workflows/setup.yml
  make_backup:
    needs: setup
    runs-on: ubuntu-18.04
    container:
      image: ${{ needs.setup.outputs.squidex-image-name }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    env:
      SQUIDEX_APP: 'asap-hub'
      BUCKET_NAME: 'asap-hub-production-data-backup'
      SQUIDEX_CLIENT_ID: ${{ secrets.SQUIDEX_CLIENT_ID_PROD }}
      SQUIDEX_CLIENT_SECRET: ${{ secrets.SQUIDEX_CLIENT_SECRET_PROD }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Add the configuration
        run: sq config add $SQUIDEX_APP $SQUIDEX_CLIENT_ID $SQUIDEX_CLIENT_SECRET
      - name: Run sync
        run: sq sync out ./backup
      - name: Tar the files
        run: |
          FILE_NAME=$(date +%s| cut -b1-13)-squidex-dev-backup.tar.gz && \
          tar -czf $FILE_NAME backup/ && \
          echo "FILE_NAME=$FILE_NAME" >> $GITHUB_ENV
      - name: upload to S3
        run: aws s3api put-object --bucket $BUCKET_NAME --key $FILE_NAME --body $FILE_NAME --storage-class STANDARD_IA
      - uses: ./.github/actions/slack/
        if: failure()
        with:
          message: Squidex Prod Backup
          webhook: ${{ secrets.SLACK_WEBHOOK }}
          status: failure
