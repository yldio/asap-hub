name: Reusable build analysis

on:
  workflow_call:
    inputs:
      environment-name:
        description: 'The environment name'
        required: true
        type: string
    secrets:
      BUNDLEWATCH_GITHUB_TOKEN:
        description: 'Bundlewatch Github Token'
        required: true

jobs:
  bundlewatch:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:c7abd599602b8abfddcdbda1e4f8a770cc4b2146
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    env:
      BUNDLEWATCH_GITHUB_TOKEN: ${{ secrets.BUNDLEWATCH_GITHUB_TOKEN }}
      CI_BRANCH: ${{ github.head_ref }}
      CI_COMMIT_SHA: ${{ github.sha }}
      CI_REPO: ${{ github.repository }}
      CI_REPO_OWNER: ${{ github.repository_owner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Cache build output
        uses: ./.github/actions/cache-build
        with:
          cache-prefix: ${{ steps.setup.outputs.cache-prefix-frontend }}
          environment-name: ${{ inputs.environment-name }}
      - name: Bundle watch
        run: |
          CI_REPO_NAME=$(echo $GITHUB_REPOSITORY | awk -F / '{print $2}')
          yarn bundlewatch

  build-output:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:c7abd599602b8abfddcdbda1e4f8a770cc4b2146
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Cache build output
        uses: ./.github/actions/cache-build
        with:
          cache-prefix: ${{ steps.setup.outputs.cache-prefix-frontend }}
          environment-name: ${{ inputs.environment-name }}
      - name: Test output
        run: |
          yarn run test:build-output
