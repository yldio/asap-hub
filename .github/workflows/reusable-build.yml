name: Reusable build

on:
  workflow_call:
    inputs:
      environment-name:
        description: 'The environment name'
        required: true
        type: string
      crn-contentful-env:
        description: 'CRN Contentful environment name'
        type: string
        required: true
    secrets:
      AWS_ACCESS_KEY_ID:
        description: 'AWS Access Key ID'
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: 'AWS Secret Access Key'
        required: true
      LIGHTSTEP_TOKEN:
        description: 'Lightstep Token'
        required: true
      CRN_SQUIDEX_API_CLIENT_SECRET:
        description: 'CRN Squidex Client Secret'
        required: true
      CRN_SQUIDEX_SHARED_SECRET:
        description: 'CRN Squidex Shared Secret'
        required: true
      GP2_SQUIDEX_API_CLIENT_SECRET:
        description: 'GP2 Squidex Client Secret'
        required: true
      GP2_SQUIDEX_SHARED_SECRET:
        description: 'GP2 Squidex Shared Secret'
        required: true
      GP2_AUTH0_SHARED_SECRET:
        description: 'GP2 Auth0 Shared Secret'
        required: false

jobs:
  transpile:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:be0ebbcbd0ff209d56070f09590c5d9622e8a6dc
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Build
        run: |
          yarn build:babel
        env:
          REACT_APP_ENVIRONMENT: ${{ steps.setup.outputs.react-app-environment }}
      - name: Cache transpile output
        uses: ./.github/actions/cache-build
        with:
          cache-prefix: ${{ steps.setup.outputs.cache-prefix-transpile }}
          environment-name: ${{ inputs.environment-name }}

  rebuild:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:be0ebbcbd0ff209d56070f09590c5d9622e8a6dc
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Re-Build
        uses: ./.github/actions/build-rebuild
      - name: Cache build output
        uses: ./.github/actions/cache-unplugged
        with:
          environment-name: ${{ inputs.environment-name }}

  definitions:
    needs: [rebuild]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:be0ebbcbd0ff209d56070f09590c5d9622e8a6dc
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Cache build output
        uses: ./.github/actions/cache-unplugged
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Build
        run: |
          yarn build:typecheck
      - name: Cache build typecheck output
        uses: ./.github/actions/cache-build
        with:
          cache-prefix: ${{ steps.setup.outputs.cache-prefix-definitions }}
          environment-name: ${{ inputs.environment-name }}

  frontend:
    needs: [definitions, transpile]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:be0ebbcbd0ff209d56070f09590c5d9622e8a6dc
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Get Algolia Keys
        id: algolia-keys
        uses: ./.github/actions/algolia-keys
        with:
          algolia-app-id-name: ${{ steps.setup.outputs.algolia-app-id-name }}
          algolia-api-key-name: ${{ steps.setup.outputs.algolia-api-key-name }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-default-region: ${{ steps.setup.outputs.aws-default-region }}
      - name: Cache transpile output
        uses: ./.github/actions/cache-build
        with:
          cache-prefix: ${{ steps.setup.outputs.cache-prefix-transpile }}
          environment-name: ${{ inputs.environment-name }}
      - name: Cache build typecheck output
        uses: ./.github/actions/cache-build
        with:
          cache-prefix: ${{ steps.setup.outputs.cache-prefix-definitions }}
          environment-name: ${{ inputs.environment-name }}
      - run: |
          yarn check:packages
      - name: Build
        env:
          CRN_AUTH_FRONTEND_BASE_URL: '${{ steps.setup.outputs.crn-auth-url}}'
          GP2_AUTH_FRONTEND_BASE_URL: '${{ steps.setup.outputs.gp2-auth-url}}'
          REACT_APP_ALGOLIA_APP_ID: ${{ steps.algolia-keys.outputs.algolia-app-id }}
          REACT_APP_ALGOLIA_INDEX: ${{ steps.setup.outputs.algolia-index }}
          REACT_APP_API_BASE_URL: ${{ steps.setup.outputs.crn-api-url }}
          REACT_APP_GP2_API_BASE_URL: ${{ steps.setup.outputs.gp2-api-url }}
          REACT_APP_ENVIRONMENT: ${{ steps.setup.outputs.react-app-environment }}
          REACT_APP_GTM_CONTAINER_ID: ${{ steps.setup.outputs.react-app-gtm-container-id }}
          REACT_APP_RELEASE: ${{ steps.setup.outputs.app-release }}
          REACT_APP_SENTRY_DSN: ${{ steps.setup.outputs.react-app-sentry-dsn }}
          REACT_APP_CRN_AUTH0_AUDIENCE: ${{ steps.setup.outputs.crn-auth0-audience }}
          REACT_APP_CRN_AUTH0_CLIENT_ID: ${{ steps.setup.outputs.crn-auth0-client-id }}
          REACT_APP_CRN_AUTH0_DOMAIN: ${{ steps.setup.outputs.crn-auth0-domain }}
          REACT_APP_GP2_AUTH0_AUDIENCE: ${{ steps.setup.outputs.gp2-auth0-audience }}
          REACT_APP_GP2_AUTH0_CLIENT_ID: ${{ steps.setup.outputs.gp2-auth0-client-id }}
          REACT_APP_GP2_AUTH0_DOMAIN: ${{ steps.setup.outputs.gp2-auth0-domain }}
        run: |
          yarn build:frontend
      - name: Cache build output
        uses: ./.github/actions/cache-build
        with:
          cache-prefix: ${{ steps.setup.outputs.cache-prefix-frontend }}
          environment-name: ${{ inputs.environment-name }}
      - name: CRN Auth frontend artifact
        uses: actions/upload-artifact@v3
        with:
          name: crn-auth-frontend-${{ inputs.environment-name }}
          path: apps/crn-auth-frontend/build
          retention-days: 5
      - name: GP2 Auth frontend artifact
        uses: actions/upload-artifact@v3
        with:
          name: gp2-auth-frontend-${{ inputs.environment-name }}
          path: apps/gp2-auth-frontend/build
          retention-days: 5
  typecheck:
    needs: [definitions]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:be0ebbcbd0ff209d56070f09590c5d9622e8a6dc
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Cache build typecheck output
        uses: ./.github/actions/cache-build
        with:
          cache-prefix: ${{ steps.setup.outputs.cache-prefix-definitions }}
          environment-name: ${{ inputs.environment-name }}
      - name: TypeCheck
        run: |
          yarn typecheck

  crn-sls-package:
    needs: [definitions, transpile, rebuild]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:be0ebbcbd0ff209d56070f09590c5d9622e8a6dc
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    environment: ${{ inputs.environment-name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Package sls for crn
        uses: ./.github/actions/sls-package
        with:
          app: crn-server
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          crn-contentful-env: ${{ inputs.crn-contentful-env }}
          crn-contentful-access-token: ${{ secrets.CRN_CONTENTFUL_ACCESS_TOKEN }}
          crn-squidex-api-client-secret: ${{ secrets.CRN_SQUIDEX_API_CLIENT_SECRET }}
          crn-squidex-shared-secret: ${{ secrets.CRN_SQUIDEX_SHARED_SECRET }}
          environment-name: ${{ inputs.environment-name }}
          lightstep-token: ${{ secrets.LIGHTSTEP_TOKEN }}

  gp2-sls-package:
    needs: [definitions, transpile, rebuild]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:be0ebbcbd0ff209d56070f09590c5d9622e8a6dc
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    environment: ${{ inputs.environment-name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Package sls for gp2
        uses: ./.github/actions/sls-package
        with:
          app: gp2-server
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          crn-contentful-access-token: ${{ secrets.CRN_CONTENTFUL_ACCESS_TOKEN }}
          environment-name: ${{ inputs.environment-name }}
          gp2-auth0-shared-secret: ${{ secrets.GP2_AUTH0_SHARED_SECRET }}
          gp2-squidex-api-client-secret: ${{ secrets.GP2_SQUIDEX_API_CLIENT_SECRET }}
          gp2-squidex-shared-secret: ${{ secrets.GP2_SQUIDEX_SHARED_SECRET }}
          lightstep-token: ${{ secrets.LIGHTSTEP_TOKEN }}
