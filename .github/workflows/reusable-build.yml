name: Reusable build

on:
  workflow_call:
    inputs:
      environment-name:
        description: 'The environment name'
        required: true
        type: string
      crn-contentful-env:
        description: 'CRN Contentful environment name'
        type: string
        required: true
      gp2-contentful-env:
        description: 'GP2 Contentful environment name'
        type: string
        required: true
    secrets:
      ACTIVE_CAMPAIGN_TOKEN:
        description: 'Active Campaign Token'
        required: true
      AWS_ACCESS_KEY_ID:
        description: 'AWS Access Key ID'
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: 'AWS Secret Access Key'
        required: true
      CONTENTFUL_MANAGEMENT_TOKEN:
        description: 'Contentful Management Token'
        required: true
      CRN_AUTH0_SHARED_SECRET:
        description: 'CRN Auth0 Shared Secret'
        required: false
      CRN_CONTENTFUL_ACCESS_TOKEN:
        description: 'CRN Contentful Access Token'
        required: true
      CRN_CONTENTFUL_PREVIEW_ACCESS_TOKEN:
        description: 'CRN Contentful Preview Access Token'
        required: true
      CRN_CONTENTFUL_WEBHOOK_AUTHENTICATION_TOKEN:
        description: 'CRN Contentful Webhook Authentication Token'
        required: true
      CRN_OPENAI_API_KEY:
        description: 'CRN OpenAI API Key'
        required: true
      GP2_CONTENTFUL_ACCESS_TOKEN:
        description: 'GP2 Contentful Access Token'
        required: true
      GP2_CONTENTFUL_PREVIEW_ACCESS_TOKEN:
        description: 'GP2 Contentful Preview Access Token'
        required: true
      GP2_CONTENTFUL_WEBHOOK_AUTHENTICATION_TOKEN:
        description: 'GP2 Contentful Webhook Authentication Token'
        required: true
      GP2_AUTH0_SHARED_SECRET:
        description: 'GP2 Auth0 Shared Secret'
        required: false
      GP2_OPENAI_API_KEY:
        description: 'GP2 OpenAI API Key'
        required: true
      POSTMARK_SERVER_TOKEN:
        description: 'Postmark Server Token'
        required: true
      SLACK_WEBHOOK:
        description: 'Slack webhook URL'
        required: false

jobs:
  rebuild:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:86a189edc900d4e1afdcf3935c697292f69d409b
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Re-Build
        uses: ./.github/actions/build-rebuild
      - name: Cache build output
        uses: ./.github/actions/cache-unplugged
        with:
          environment-name: ${{ inputs.environment-name }}

  transpile:
    needs: [rebuild]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:86a189edc900d4e1afdcf3935c697292f69d409b
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Cache turbo build setup
        uses: actions/cache@v3
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-transpile-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-transpile
      - name: Cache build output
        uses: ./.github/actions/cache-unplugged
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Build
        run: |
          yarn build:babel --cache-dir=.turbo --only
        env:
          VITE_APP_ENVIRONMENT: ${{ steps.setup.outputs.react-app-environment }}
      - name: Cache transpile output
        uses: ./.github/actions/cache-build
        with:
          cache-prefix: ${{ steps.setup.outputs.cache-prefix-transpile }}
          environment-name: ${{ inputs.environment-name }}

  definitions:
    needs: [rebuild]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:86a189edc900d4e1afdcf3935c697292f69d409b
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Cache turbo build setup
        uses: actions/cache@v3
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-definitions-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-definitions
      - name: Restore
        uses: ./.github/actions/cache-unplugged
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Build
        run: |
          yarn build:typecheck --cache-dir=.turbo --only
      - name: Cache build typecheck output
        uses: ./.github/actions/cache-build
        with:
          cache-prefix: ${{ steps.setup.outputs.cache-prefix-definitions }}
          environment-name: ${{ inputs.environment-name }}

  frontend:
    needs: [definitions, transpile]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:86a189edc900d4e1afdcf3935c697292f69d409b
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Get CRN Algolia Keys
        id: crn-algolia-keys
        uses: ./.github/actions/algolia-keys
        with:
          algolia-app-id-name: ${{ steps.setup.outputs.crn-algolia-app-id-name }}
          algolia-api-key-name: ${{ steps.setup.outputs.crn-algolia-api-key-name }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-default-region: ${{ steps.setup.outputs.aws-default-region }}
      - name: Get GP2 Algolia Keys
        id: gp2-algolia-keys
        uses: ./.github/actions/algolia-keys
        with:
          algolia-app-id-name: ${{ steps.setup.outputs.gp2-algolia-app-id-name }}
          algolia-api-key-name: ${{ steps.setup.outputs.gp2-algolia-api-key-name }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-default-region: ${{ steps.setup.outputs.aws-default-region }}
      - name: Cache turbo build setup
        uses: actions/cache@v3
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-frontend-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-frontend
      - name: Restore .unplugged from cache
        uses: ./.github/actions/cache-unplugged
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Restore transpile output
        uses: ./.github/actions/cache-build
        with:
          cache-prefix: ${{ steps.setup.outputs.cache-prefix-transpile }}
          environment-name: ${{ inputs.environment-name }}
      - name: Restore build typecheck output
        uses: ./.github/actions/cache-build
        with:
          cache-prefix: ${{ steps.setup.outputs.cache-prefix-definitions }}
          environment-name: ${{ inputs.environment-name }}
      - run: |
          yarn check:packages
      - name: Build
        env:
          CRN_AUTH_FRONTEND_BASE_URL: '${{ steps.setup.outputs.crn-auth-url}}'
          GP2_AUTH_FRONTEND_BASE_URL: '${{ steps.setup.outputs.gp2-auth-url}}'
          VITE_APP_API_BASE_URL: ${{ steps.setup.outputs.crn-api-url }}
          VITE_APP_CRN_GTM_CONTAINER_ID: ${{ steps.setup.outputs.react-app-crn-gtm-container-id }}
          VITE_APP_ENVIRONMENT: ${{ steps.setup.outputs.react-app-environment }}
          VITE_APP_GP2_ALGOLIA_APP_ID: ${{ steps.gp2-algolia-keys.outputs.algolia-app-id }}
          VITE_APP_GP2_ALGOLIA_INDEX: ${{ steps.setup.outputs.gp2-algolia-index }}
          VITE_APP_GP2_API_BASE_URL: ${{ steps.setup.outputs.gp2-api-url }}
          VITE_APP_GP2_AUTH0_AUDIENCE: ${{ steps.setup.outputs.gp2-auth0-audience }}
          VITE_APP_GP2_AUTH0_CLIENT_ID: ${{ steps.setup.outputs.gp2-auth0-client-id }}
          VITE_APP_GP2_AUTH0_DOMAIN: ${{ steps.setup.outputs.gp2-auth0-domain }}
          VITE_APP_GP2_GTM_CONTAINER_ID: ${{ steps.setup.outputs.react-app-gp2-gtm-container-id }}
          VITE_APP_GP2_SENTRY_DSN: ${{ steps.setup.outputs.react-app-gp2-sentry-dsn }}
          VITE_APP_RELEASE: ${{ steps.setup.outputs.app-release }}
          VITE_APP_CRN_ALGOLIA_APP_ID: ${{ steps.crn-algolia-keys.outputs.algolia-app-id }}
          VITE_APP_CRN_ALGOLIA_INDEX: ${{ steps.setup.outputs.crn-algolia-index }}
          VITE_APP_CRN_ANALYTICS_ALGOLIA_INDEX: ${{ steps.setup.outputs.crn-analytics-algolia-index }}
          VITE_APP_CRN_AUTH0_AUDIENCE: ${{ steps.setup.outputs.crn-auth0-audience }}
          VITE_APP_CRN_AUTH0_CLIENT_ID: ${{ steps.setup.outputs.crn-auth0-client-id }}
          VITE_APP_CRN_AUTH0_DOMAIN: ${{ steps.setup.outputs.crn-auth0-domain }}
          VITE_APP_CRN_SENTRY_DSN: ${{ steps.setup.outputs.react-app-crn-sentry-dsn }}
        run: |
          yarn build:frontend --cache-dir=.turbo
      - name: Cache build output
        uses: ./.github/actions/cache-build
        with:
          cache-prefix: ${{ steps.setup.outputs.cache-prefix-frontend }}
          environment-name: ${{ inputs.environment-name }}
      - name: CRN Auth frontend artifact
        uses: actions/upload-artifact@v4
        with:
          name: crn-auth-frontend-${{ inputs.environment-name }}
          path: apps/crn-auth-frontend/dist
          retention-days: 5
      - name: GP2 Auth frontend artifact
        uses: actions/upload-artifact@v4
        with:
          name: gp2-auth-frontend-${{ inputs.environment-name }}
          path: apps/gp2-auth-frontend/dist
          retention-days: 5
  typecheck:
    needs: [rebuild, definitions]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:86a189edc900d4e1afdcf3935c697292f69d409b
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Cache turbo build setup
        uses: actions/cache@v3
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-typecheck-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-typecheck
      - name: Restore .unplugged from cache
        uses: ./.github/actions/cache-unplugged
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Restore build:typecheck output from cache
        uses: ./.github/actions/cache-build
        with:
          cache-prefix: ${{ steps.setup.outputs.cache-prefix-definitions }}
          environment-name: ${{ inputs.environment-name }}
      - name: TypeCheck
        run: |
          yarn typecheck --cache-dir=.turbo --only

  crn-sls-package:
    needs: [definitions, transpile, rebuild]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:86a189edc900d4e1afdcf3935c697292f69d409b
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    environment: ${{ inputs.environment-name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Package sls for crn
        uses: ./.github/actions/sls-package
        with:
          active-campaign-account: ${{ steps.setup.outputs.active-campaign-account }}
          active-campaign-token: ${{ secrets.ACTIVE_CAMPAIGN_TOKEN}}
          algolia-index: ${{ steps.setup.outputs.crn-algolia-index }}
          app: crn-server
          auth0-audience: ${{ steps.setup.outputs.crn-auth0-audience }}
          auth0-client-id: ${{ steps.setup.outputs.crn-auth0-client-id }}
          auth0-shared-secret: ${{ secrets.CRN_AUTH0_SHARED_SECRET }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-acm-certificate-arn: ${{ steps.setup.outputs.crn-aws-acm-certificate-arn }}
          aws-region: ${{ steps.setup.outputs.aws-region }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          contentful-access-token: ${{ secrets.CRN_CONTENTFUL_ACCESS_TOKEN }}
          contentful-env: ${{ inputs.crn-contentful-env }}
          contentful-management-access-token: ${{ secrets.CONTENTFUL_MANAGEMENT_TOKEN }}
          contentful-preview-access-token: ${{ secrets.CRN_CONTENTFUL_PREVIEW_ACCESS_TOKEN }}
          contentful-space-id: ${{ steps.setup.outputs.crn-contentful-space-id }}
          contentful-webhook-authentication-token: ${{ secrets.CRN_CONTENTFUL_WEBHOOK_AUTHENTICATION_TOKEN }}
          environment-name: ${{ inputs.environment-name }}
          hostname: ${{ steps.setup.outputs.crn-hostname }}
          openai-api-key: ${{ secrets.CRN_OPENAI_API_KEY }}
          postmark-server-token: ${{ secrets.POSTMARK_SERVER_TOKEN }}
          sentry-dsn-api: ${{ steps.setup.outputs.crn-sentry-dsn-api }}
          sentry-dsn-public-api: ${{ steps.setup.outputs.crn-sentry-dsn-public-api }}
          sentry-dsn-handlers: ${{ steps.setup.outputs.crn-sentry-dsn-handlers }}
          ses-region: ${{ steps.setup.outputs.crn-ses-region }}
          slack-webhook: ${{ secrets.SLACK_WEBHOOK }}
          sls-stage: ${{ steps.setup.outputs.sls-stage}}
  gp2-sls-package:
    needs: [definitions, transpile, rebuild]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:86a189edc900d4e1afdcf3935c697292f69d409b
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    environment: ${{ inputs.environment-name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Package sls for gp2
        uses: ./.github/actions/sls-package
        with:
          active-campaign-account: ${{ steps.setup.outputs.active-campaign-account }}
          active-campaign-token: ${{ secrets.ACTIVE_CAMPAIGN_TOKEN}}
          algolia-index: ${{ steps.setup.outputs.gp2-algolia-index }}
          app: gp2-server
          auth0-audience: ${{ steps.setup.outputs.gp2-auth0-audience }}
          auth0-client-id: ${{ steps.setup.outputs.gp2-auth0-client-id }}
          auth0-shared-secret: ${{ secrets.GP2_AUTH0_SHARED_SECRET }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-acm-certificate-arn: ${{ steps.setup.outputs.gp2-aws-acm-certificate-arn }}
          aws-region: ${{ steps.setup.outputs.aws-region }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          contentful-access-token: ${{ secrets.GP2_CONTENTFUL_ACCESS_TOKEN }}
          contentful-env: ${{ inputs.gp2-contentful-env }}
          contentful-management-access-token: ${{ secrets.CONTENTFUL_MANAGEMENT_TOKEN }}
          contentful-preview-access-token: ${{ secrets.GP2_CONTENTFUL_PREVIEW_ACCESS_TOKEN }}
          contentful-space-id: ${{ steps.setup.outputs.gp2-contentful-space-id }}
          contentful-webhook-authentication-token: ${{ secrets.GP2_CONTENTFUL_WEBHOOK_AUTHENTICATION_TOKEN }}
          environment-name: ${{ inputs.environment-name }}
          hostname: ${{ steps.setup.outputs.gp2-hostname }}
          openai-api-key: ${{ secrets.GP2_OPENAI_API_KEY }}
          sentry-dsn-api: ${{ steps.setup.outputs.gp2-sentry-dsn-api }}
          sentry-dsn-public-api: ${{ steps.setup.outputs.gp2-sentry-dsn-public-api }}
          sentry-dsn-handlers: ${{ steps.setup.outputs.gp2-sentry-dsn-handlers }}
          ses-region: ${{ steps.setup.outputs.gp2-ses-region }}
          slack-webhook: ${{ secrets.SLACK_WEBHOOK }}
          sls-stage: ${{ steps.setup.outputs.sls-stage}}
