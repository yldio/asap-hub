name: Reusable prepare

on:
  workflow_call:
    inputs:
      environment-name:
        description: 'The environment name'
        required: true
        type: string
      crn-contentful-env:
        description: 'CRN Contentful environment name'
        type: string
      crn-contentful-on-branch-env:
        description: 'Is CRN Contentful branch environment required'
        required: true
        type: string
      crn-algolia-on-branch-env:
        description: 'Is CRN Algolia branch environment required'
        required: true
        type: string
      crn-contentful-env-exists:
        description: 'Does CRN contentful environment already exist'
        required: true
        type: string
      gp2-contentful-env:
        description: 'GP2 Contentful environment name'
        type: string
      gp2-on-branch-env:
        description: 'Is GP2 Contentful branch environment required'
        required: true
        type: string
      gp2-contentful-env-exists:
        description: 'Does GP2 contentful environment already exist'
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        description: 'AWS Access Key ID'
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: 'AWS Secret Access Key'
        required: true
      CONTENTFUL_MANAGEMENT_TOKEN:
        description: 'Contentful Management Token'
        required: true
      CRN_CONTENTFUL_ACCESS_TOKEN:
        description: 'CRN Contentful Access Token'
        required: true
      GP2_CONTENTFUL_ACCESS_TOKEN:
        description: 'GP2 Contentful Access Token'
        required: true

jobs:
  crn-contentful:
    if: ${{ inputs.environment-name=='Branch' && inputs.crn-contentful-on-branch-env == 'true' && inputs.crn-contentful-env-exists == 'false'}}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment-name }}
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:86a189edc900d4e1afdcf3935c697292f69d409b
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Create Contentful App
        uses: ./.github/actions/contentful-create-environment
        with:
          contentful-space-id: ${{ steps.setup.outputs.crn-contentful-space-id }}
          contentful-management-token: ${{ secrets.CONTENTFUL_MANAGEMENT_TOKEN }}
          contentful-environment: ${{ steps.setup.outputs.contentful-environment }}
          contentful-access-token: ${{ secrets.CRN_CONTENTFUL_ACCESS_TOKEN }}
          max-contentful-envs: ${{ steps.setup.outputs.crn-max-contentful-envs }}
          contentful-environment-id: ${{ inputs.crn-contentful-env }}

  gp2-contentful:
    if: ${{ inputs.environment-name=='Branch' && inputs.gp2-on-branch-env == 'true' && inputs.gp2-contentful-env-exists == 'false'}}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment-name }}
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:86a189edc900d4e1afdcf3935c697292f69d409b
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Create Contentful App
        uses: ./.github/actions/contentful-create-environment
        with:
          contentful-space-id: ${{ steps.setup.outputs.gp2-contentful-space-id }}
          contentful-management-token: ${{ secrets.CONTENTFUL_MANAGEMENT_TOKEN }}
          contentful-environment: ${{ steps.setup.outputs.contentful-environment }}
          contentful-access-token: ${{ secrets.GP2_CONTENTFUL_ACCESS_TOKEN }}
          max-contentful-envs: ${{ steps.setup.outputs.gp2-max-contentful-envs }}
          contentful-environment-id: ${{ inputs.gp2-contentful-env }}

  crn-algolia-index:
    runs-on: ubuntu-latest
    environment: Branch
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:86a189edc900d4e1afdcf3935c697292f69d409b
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Algolia CLI
        uses: algolia/setup-algolia-cli@master
        with:
          version: 1.2.1
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Setup Dev Environment
        id: setup-dev
        uses: ./.github/actions/setup-environment
        with:
          environment-name: Development
      - name: Get Algolia Keys
        id: algolia-keys
        if: ${{ inputs.environment-name=='Branch' }}
        uses: ./.github/actions/algolia-keys
        with:
          algolia-app-id-name: ${{ steps.setup.outputs.crn-algolia-app-id-name }}
          algolia-api-key-name: ${{ steps.setup.outputs.crn-algolia-api-key-name }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-default-region: ${{ steps.setup.outputs.aws-default-region }}
      - name: Test Index exists
        if: ${{ inputs.environment-name=='Branch' }}
        id: index-exists
        shell: bash
        run: |
          OUTPUT=$(algolia settings get $ENTITY_ALGOLIA_INDEX 2>&1) || true
          if [[ "$OUTPUT" == *"Index does not exist"*  ]]; then
            echo "entity-index-exists=false" >> $GITHUB_OUTPUT
            echo "Entity index does not exist"
          else
            echo "entity-index-exists=true" >> $GITHUB_OUTPUT
            echo "Entity index exists"
          fi
          ANALYTICS_OUTPUT=$(algolia settings get $ANALYTICS_ALGOLIA_INDEX 2>&1) || true
          if [[ "$ANALYTICS_OUTPUT" == *"Index does not exist"*  ]]; then
            echo "analytics-index-exists=false" >> $GITHUB_OUTPUT
            echo "Index does not exist"
          else
            echo "analytics-index-exists=true" >> $GITHUB_OUTPUT
            echo "Index exists"
          fi
        env:
          ALGOLIA_APPLICATION_ID: ${{ steps.algolia-keys.outputs.algolia-app-id }}
          ALGOLIA_ADMIN_API_KEY: ${{ steps.algolia-keys.outputs.algolia-api-key }}
          ENTITY_ALGOLIA_INDEX: ${{ steps.setup.outputs.crn-algolia-index }}
          ANALYTICS_ALGOLIA_INDEX: ${{ steps.setup.outputs.crn-analytics-algolia-index }}
      - name: Copy entity index from Dev
        if: ${{ inputs.environment-name=='Branch' && steps.index-exists.outputs.entity-index-exists == 'false' && inputs.crn-algolia-on-branch-env == 'true' }}
        shell: bash
        run: |
          algolia indices copy -y -w $ENTITY_ALGOLIA_INDEX_DEV $ENTITY_ALGOLIA_INDEX
          algolia indices copy -y -w $ENTITY_ALGOLIA_INDEX_DEV-reverse-timestamp $ENTITY_ALGOLIA_INDEX-reverse-timestamp
        env:
          ALGOLIA_APPLICATION_ID: ${{ steps.algolia-keys.outputs.algolia-app-id }}
          ALGOLIA_ADMIN_API_KEY: ${{ steps.algolia-keys.outputs.algolia-api-key }}
          ENTITY_ALGOLIA_INDEX_DEV: ${{ steps.setup-dev.outputs.crn-algolia-index }}
          ENTITY_ALGOLIA_INDEX: ${{ steps.setup.outputs.crn-algolia-index }}
      - name: Copy analytics index from Dev
        if: ${{ inputs.environment-name=='Branch' && steps.index-exists.outputs.analytics-index-exists == 'false' && inputs.crn-algolia-on-branch-env == 'true' }}
        shell: bash
        run: |
          algolia indices copy -y -w $ANALYTICS_ALGOLIA_INDEX_DEV $ANALYTICS_ALGOLIA_INDEX
        env:
          ALGOLIA_APPLICATION_ID: ${{ steps.algolia-keys.outputs.algolia-app-id }}
          ALGOLIA_ADMIN_API_KEY: ${{ steps.algolia-keys.outputs.algolia-api-key }}
          ANALYTICS_ALGOLIA_INDEX_DEV: ${{ steps.setup-dev.outputs.crn-analytics-algolia-index }}
          ANALYTICS_ALGOLIA_INDEX: ${{ steps.setup.outputs.crn-analytics-algolia-index }}

  gp2-algolia-index:
    runs-on: ubuntu-latest
    environment: Branch
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:86a189edc900d4e1afdcf3935c697292f69d409b
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Algolia CLI
        uses: algolia/setup-algolia-cli@master
        with:
          version: 1.2.1
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Setup Dev Environment
        id: setup-dev
        uses: ./.github/actions/setup-environment
        with:
          environment-name: Development
      - name: Get Algolia Keys
        id: algolia-keys
        if: ${{ inputs.environment-name=='Branch' }}
        uses: ./.github/actions/algolia-keys
        with:
          algolia-app-id-name: ${{ steps.setup.outputs.gp2-algolia-app-id-name }}
          algolia-api-key-name: ${{ steps.setup.outputs.gp2-algolia-api-key-name }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-default-region: ${{ steps.setup.outputs.aws-default-region }}
      - name: Test Index exists
        if: ${{ inputs.environment-name=='Branch' }}
        id: index-exists
        shell: bash
        run: |
          OUTPUT=$(algolia settings get $ALGOLIA_INDEX 2>&1) || true
          if [[ "$OUTPUT" == *"Index does not exist"*  ]]; then
            echo "index-exists=false" >> $GITHUB_OUTPUT
            echo "Index does not exist"
          else
            echo "index-exists=true" >> $GITHUB_OUTPUT
            echo "Index exists"
          fi
        env:
          ALGOLIA_APPLICATION_ID: ${{ steps.algolia-keys.outputs.algolia-app-id }}
          ALGOLIA_ADMIN_API_KEY: ${{ steps.algolia-keys.outputs.algolia-api-key }}
          ALGOLIA_INDEX: ${{ steps.setup.outputs.gp2-algolia-index }}
      - name: Copy index from Dev
        if: ${{ inputs.environment-name=='Branch' && steps.index-exists.outputs.index-exists == 'false' && inputs.gp2-on-branch-env == 'true' }}
        shell: bash
        run: |
          algolia indices copy -y -w $ALGOLIA_INDEX_DEV $ALGOLIA_INDEX
          algolia indices copy -y -w $ALGOLIA_INDEX_DEV-reverse-timestamp $ALGOLIA_INDEX-reverse-timestamp
        env:
          ALGOLIA_APPLICATION_ID: ${{ steps.algolia-keys.outputs.algolia-app-id }}
          ALGOLIA_ADMIN_API_KEY: ${{ steps.algolia-keys.outputs.algolia-api-key }}
          ALGOLIA_INDEX_DEV: ${{ steps.setup-dev.outputs.gp2-algolia-index }}
          ALGOLIA_INDEX: ${{ steps.setup.outputs.gp2-algolia-index }}
