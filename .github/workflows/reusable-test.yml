name: Reusable test

on:
  workflow_call:
    inputs:
      environment-name:
        description: 'The environment name'
        required: true
        type: string
      sinceMaster:
        description: 'Whether to run tests since master'
        required: false
        type: boolean
        default: false
    secrets:
      CODECOV_TOKEN:
        description: 'Codecov Token'
        required: true
      CRN_SQUIDEX_CI_CLIENT_SECRET:
        description: 'CRN Squidex Client Secret'
        required: true
jobs:
  check:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:be0ebbcbd0ff209d56070f09590c5d9622e8a6dc
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        script: [constraints, 'lint:format', 'check:packages']
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check
        run: |
          yarn ${{ matrix.script }}

  unit:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:be0ebbcbd0ff209d56070f09590c5d9622e8a6dc
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache Jest cache
        uses: actions/cache@v3
        with:
          path: |
            .jest-cache/
          key: jest-cache-${{ github.sha }}
          restore-keys: |
            jest-cache-
      - name: Get number of CPU cores
        id: cpu-cores
        uses: SimenB/github-actions-cpu-cores@v1
      - name: Fetch master branch
        if: ${{ inputs.sinceMaster == true }}
        run: |
          chown -R root /__w/asap-hub/asap-hub
          git fetch --no-tags --depth=1 origin master
          git checkout -b master origin/master
          git checkout -
      - name: Run tests from diff with master
        if: ${{ inputs.sinceMaster == true }}
        run: yarn test --coverage --maxWorkers ${{ steps.cpu-cores.outputs.count }} --ci --changedSince=master
      - name: Run all tests
        if: ${{ inputs.sinceMaster == false }}
        run: yarn test --coverage --maxWorkers ${{ steps.cpu-cores.outputs.count }} --ci
      - uses: codecov/codecov-action@v3
        if: ${{ inputs.sinceMaster == false }}
        with:
          fail_ci_if_error: true
          directory: coverage
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  integration:
    if: ${{ inputs.environment-name=='Branch' }}
    # limiting to one instance at a time as running these in parallel can cause
    # issues with Squidex
    concurrency:
      group: crn-test-integration
    permissions:
      packages: read
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment-name }}
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:be0ebbcbd0ff209d56070f09590c5d9622e8a6dc
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Setup app
        shell: bash
        run: |
          python .github/scripts/squidex/create-app.py
          yarn test:integration
        env:
          APP: crn
          SQUIDEX_APP_NAME: ${{ steps.setup.outputs.crn-squidex-app-name }}-${{ github.run_id }}
          SQUIDEX_CLIENT_ID: ${{ steps.setup.outputs.crn-squidex-ci-client-id }}
          SQUIDEX_CLIENT_SECRET: ${{ secrets.CRN_SQUIDEX_CI_CLIENT_SECRET }}
          SQUIDEX_BASE_URL: ${{ steps.setup.outputs.squidex-base-url }}
      - name: Delete app
        shell: bash
        if: always()
        run: python .github/scripts/squidex/delete-app.py
        env:
          SQUIDEX_APP_NAME: ${{ steps.setup.outputs.crn-squidex-app-name }}-${{ github.run_id }}
          SQUIDEX_CLIENT_ID: ${{ steps.setup.outputs.crn-squidex-ci-client-id }}
          SQUIDEX_CLIENT_SECRET: ${{ secrets.CRN_SQUIDEX_CI_CLIENT_SECRET }}
          SQUIDEX_BASE_URL: ${{ steps.setup.outputs.squidex-base-url }}

  browser:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:focal
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Re-Build
        uses: ./.github/actions/build-rebuild
      - name: Install Playwright
        run: |
          yarn workspace @asap-hub/react-components run playwright install
      - name: Test browser
        run: |
          yarn run test:browser

  renovate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Validate
        uses: rinchsan/renovate-config-validator@v0.0.11
        with:
          pattern: '.github/renovate.json'
