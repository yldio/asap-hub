name: Reusable test

on:
  workflow_call:
    inputs:
      environment-name:
        description: 'The environment name'
        required: true
        type: string
    secrets:
      CODECOV_TOKEN:
        description: 'Codecov Token'
        required: true
      CRN_SQUIDEX_CI_CLIENT_SECRET:
        description: 'CRN Squidex Client Secret'
        required: true
jobs:
  check:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:0f5eee65db0ad426fd10ff52113aeeb0ab5d1ec1
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        script: [constraints, 'lint:format', 'check:packages']
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check
        run: |
          yarn ${{ matrix.script }}

  unit:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:0f5eee65db0ad426fd10ff52113aeeb0ab5d1ec1
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache Jest cache
        uses: actions/cache@v3
        with:
          path: |
            .jest-cache/
          key: jest-cache
      - name: Test
        run: |
          # yarn test --coverage --maxWorkers=2
      # - uses: codecov/codecov-action@v3
      #   with:
      #     fail_ci_if_error: true
      #     directory: coverage
      #     verbose: true

  integration:
    if: ${{ inputs.environment-name=='Branch' }}
    # limiting to one instance at a time as running these in parallel can cause
    # issues with Squidex
    concurrency:
      group: crn-test-integration
    permissions:
      packages: read
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment-name }}
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:0f5eee65db0ad426fd10ff52113aeeb0ab5d1ec1
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Setup app
        shell: bash
        run: |
          python .github/scripts/squidex/create-app.py
          yarn test:integration
        env:
          APP: crn
          SQUIDEX_APP_NAME: ${{ steps.setup.outputs.crn-squidex-app-name }}-${{ github.run_id }}
          SQUIDEX_CLIENT_ID: ${{ steps.setup.outputs.crn-squidex-ci-client-id }}
          SQUIDEX_CLIENT_SECRET: ${{ secrets.CRN_SQUIDEX_CI_CLIENT_SECRET }}
          SQUIDEX_BASE_URL: ${{ steps.setup.outputs.squidex-base-url }}
      - name: Delete app
        shell: bash
        if: always()
        run: python .github/scripts/squidex/delete-app.py
        env:
          SQUIDEX_APP_NAME: ${{ steps.setup.outputs.crn-squidex-app-name }}-${{ github.run_id }}
          SQUIDEX_CLIENT_ID: ${{ steps.setup.outputs.crn-squidex-ci-client-id }}
          SQUIDEX_CLIENT_SECRET: ${{ secrets.CRN_SQUIDEX_CI_CLIENT_SECRET }}
          SQUIDEX_BASE_URL: ${{ steps.setup.outputs.squidex-base-url }}

  browser:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:focal
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Re-Build
        uses: ./.github/actions/build-rebuild
      - name: Install Playwright
        run: |
          yarn workspace @asap-hub/react-components run playwright install
      - name: Test browser
        run: |
          yarn run test:browser

  renovate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Validate
        uses: rinchsan/renovate-config-validator@v0.0.11
        with:
          pattern: '.github/renovate.json'
