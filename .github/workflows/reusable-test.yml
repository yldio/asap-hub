name: Reusable test

on:
  workflow_call:
    inputs:
      environment-name:
        description: 'The environment name'
        required: true
        type: string
    secrets:
      CODECOV_TOKEN:
        description: Codecov Token
        required: true
      CONTENTFUL_MANAGEMENT_TOKEN:
        description: Contentful Management Access Token
        required: true
      CRN_CONTENTFUL_ACCESS_TOKEN:
        description: Contentful Access Token
        required: true
      CRN_CONTENTFUL_PREVIEW_ACCESS_TOKEN:
        description: Contentful Preview Access Token
        required: true
jobs:
  check:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:86a189edc900d4e1afdcf3935c697292f69d409b
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        script: [constraints, 'lint:format', 'check:packages']
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Re-Build
        uses: ./.github/actions/build-rebuild
      - name: Cache build typecheck output
        uses: ./.github/actions/cache-unplugged
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Check
        run: |
          yarn ${{ matrix.script }}
  extensions:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:86a189edc900d4e1afdcf3935c697292f69d409b
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run contentful app extension tests
        run: yarn workspaces foreach --include "*/contentful-app-*" -v run test:no-watch
  setup-turbo:
    runs-on: ubuntu-latest
    environment: Branch
    outputs:
      matrix: ${{ steps.setup.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Re-Build
        uses: ./.github/actions/build-rebuild
      - name: Setup turborepo test pipeline
        id: setup
        run: |
          MATRIX=$(yarn node ./.github/scripts/manage-workflows/create-test-matrix.js)
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
  unit:
    needs: setup-turbo
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup-turbo.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Re-Build
        uses: ./.github/actions/build-rebuild
      - name: Cache .turbo and jest cache
        uses: actions/cache@v3
        with:
          path: |
            .turbo
            .jest-cache
          key: ${{ runner.os }}-turbo-and-jest-cache-${{ matrix.package }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-and-jest-cache-${{ matrix.package }}-
      - name: Get number of CPU cores
        id: cpu-cores
        uses: SimenB/github-actions-cpu-cores@v1
      - name: Test ${{ matrix.package }}
        run: yarn turbo test:coverage --filter="${{ matrix.package }}" --cache-dir=.turbo -- --maxWorkers=${{ steps.cpu-cores.outputs.count }} --ci
      - name: move coverage
        shell: bash
        run: |
          PACKAGE_NAME="$(echo ${{ matrix.package }} | cut -c 11-)"
          ## get package directory
          mkdir -p coverage
          yarn workspace ${{ matrix.package }} exec mv coverage/coverage-final.json ../../coverage/$PACKAGE_NAME.json
      - name: Sanitize package name
        id: sanitize
        run: echo "MATRIX_PACKAGE_NAME=${{ matrix.package }}" | sed 's/\//-/g' >> $GITHUB_ENV
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-artifacts-${{ env.MATRIX_PACKAGE_NAME }}
          path: coverage/
  report-coverage:
    runs-on: ubuntu-latest
    needs: [unit]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v4
        with:
          path: coverage
          pattern: coverage-artifacts-*
          merge-multiple: true
      - name: Merge Code Coverage
        run: npx nyc merge coverage/ merged-output/merged-coverage.json
      - uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          directory: merged-output
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Re-Build
        uses: ./.github/actions/build-rebuild
      - name: Cache build typecheck output
        uses: ./.github/actions/cache-unplugged
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Build type definitions
        shell: bash
        run: yarn build:typecheck
      - name: lint
        run: yarn lint

  copy-paste-check:
    runs-on: ubuntu-latest
    # Run only on PRs
    if: ${{ inputs.environment-name == 'Branch' }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Run copy-paste detection
        run: git diff --name-only --diff-filter=d origin/master origin/${GITHUB_HEAD_REF} | xargs yarn jscpd

  integration-test:
    concurrency: integration-test
    permissions:
      packages: read
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment-name }}
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:86a189edc900d4e1afdcf3935c697292f69d409b
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Create Contentful environment
        shell: bash
        run: |
          yarn workspace @asap-hub/contentful space:create-environment --timeout 600000
          yarn contentful:migration:run:crn
        env:
          CONTENTFUL_SPACE_ID: ${{ steps.setup.outputs.crn-contentful-space-id }}
          CONTENTFUL_MANAGEMENT_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_MANAGEMENT_TOKEN }}
          CONTENTFUL_ENV_ID: integration-${{ github.run_id }}
          CONTENTFUL_SOURCE_ENV: Empty
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CRN_CONTENTFUL_ACCESS_TOKEN }}
      - name: Run integration tests
        timeout-minutes: 20
        run: yarn test:integration --coverage --forceExit
        env:
          CONTENTFUL_SPACE_ID: ${{ steps.setup.outputs.crn-contentful-space-id }}
          CONTENTFUL_MANAGEMENT_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_MANAGEMENT_TOKEN }}
          CONTENTFUL_ENV_ID: integration-${{ github.run_id }}
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CRN_CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_PREVIEW_ACCESS_TOKEN: ${{ secrets.CRN_CONTENTFUL_PREVIEW_ACCESS_TOKEN }}
      - name: Delete app
        shell: bash
        if: always()
        run: |
          yarn workspace @asap-hub/contentful space:remove-environment
        env:
          CONTENTFUL_SPACE_ID: ${{ steps.setup.outputs.crn-contentful-space-id }}
          CONTENTFUL_MANAGEMENT_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_MANAGEMENT_TOKEN }}
          CONTENTFUL_ENV_ID: integration-${{ github.run_id }}
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CRN_CONTENTFUL_ACCESS_TOKEN }}

  renovate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Validate
        uses: rinchsan/renovate-config-validator@v0.0.12
        with:
          pattern: '.github/renovate.json'
