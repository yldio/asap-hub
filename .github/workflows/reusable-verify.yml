name: Reusable verify

on:
  workflow_call:
    inputs:
      environment-name:
        description: 'The environment name'
        required: true
        type: string
    secrets:
      CRN_SQUIDEX_CI_CLIENT_SECRET:
        description: 'CRN Squidex Client Secret'
        required: true
      FRONTEND_SENTRY_RELEASE_AUTH_TOKEN:
        description: 'Sentry Auth token'
        required: false
      GP2_SQUIDEX_CI_CLIENT_SECRET:
        description: 'GP2 Squidex Client Secret'
        required: true

jobs:
  sls:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:7b77d99657ab3718ed548ba366ffbcbb15315fd8
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Test
        run: |
          yarn test:e2e
        env:
          CRN_API_URL: ${{ steps.setup.outputs.crn-api-url }}

  test-e2e:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:focal
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Cache build output
        uses: ./.github/actions/cache-unplugged
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Install Playwright
        if: ${{ inputs.environment-name=='Branch' }}
        run: |
          yarn workspace @asap-hub/e2e-tests run playwright install
      - name: Test
        if: ${{ inputs.environment-name=='Branch' }}
        run: |
          yarn workspace @asap-hub/e2e-tests run playwright test
        env:
          CRN_APP_URL: ${{ steps.setup.outputs.crn-app-url }}

  crn-schema:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment-name }}
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:7b77d99657ab3718ed548ba366ffbcbb15315fd8
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Verify CRN
        uses: ./.github/actions/squidex-verify
        with:
          environment-name: ${{ inputs.environment-name }}
          app: crn
          squidex-app-name: ${{ steps.setup.outputs.crn-squidex-app-name }}
          squidex-base-url: ${{ steps.setup.outputs.squidex-base-url }}
          squidex-ci-client-id: ${{ steps.setup.outputs.crn-squidex-ci-client-id }}
          squidex-ci-client-secret: ${{ secrets.CRN_SQUIDEX_CI_CLIENT_SECRET }}

  gp2-schema:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment-name }}
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:7b77d99657ab3718ed548ba366ffbcbb15315fd8
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Verify GP2
        uses: ./.github/actions/squidex-verify
        with:
          environment-name: ${{ inputs.environment-name }}
          app: gp2
          squidex-app-name: ${{ steps.setup.outputs.gp2-squidex-app-name }}
          squidex-base-url: ${{ steps.setup.outputs.squidex-base-url }}
          squidex-ci-client-id: ${{ steps.setup.outputs.gp2-squidex-ci-client-id }}
          squidex-ci-client-secret: ${{ secrets.GP2_SQUIDEX_CI_CLIENT_SECRET }}

  register-release:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment-name }}
    container:
      image: ghcr.io/yldio/asap-hub/node-python-sq:7b77d99657ab3718ed548ba366ffbcbb15315fd8
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Cache rebuild output
        uses: ./.github/actions/cache-unplugged
        with:
          environment-name: ${{ inputs.environment-name }}
      - name: Register Sentry
        if: ${{ inputs.environment-name=='Development' || inputs.environment-name=='Production' }}
        run: |
          yarn run release:frontend
        env:
          FRONTEND_SENTRY_RELEASE_AUTH_TOKEN: ${{ secrets.FRONTEND_SENTRY_RELEASE_AUTH_TOKEN }}
          REACT_APP_RELEASE: ${{ steps.setup.outputs.app-release }}
