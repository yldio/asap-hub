# https://gitlab.com/yldio/asap-hub/-/ci/lint
include:
  - 'ci/.gitlab-ci.ses.yml'
  - 'ci/.gitlab-ci.squidex.yml'
  - 'ci/.gitlab-ci.integration.yml'

.tmpl:master: &tmpl_master
  rules: &tmpl_master_rules
    - if: $CI_COMMIT_BRANCH == 'master'
  variables: &tmpl_master_variables
    SLS_STAGE: production

.tmpl:branch: &tmpl_branch
  rules:
    - if: $CI_EXTERNAL_PULL_REQUEST_IID
  variables: &tmpl_branch_variables
    SLS_STAGE: $CI_EXTERNAL_PULL_REQUEST_IID

.tmpl:deploy: &tmpl_deploy
  script:
    - yarn sls deploy --verbose
  variables: &tmpl_deploy_variables
    NODE_ENV: production
  dependencies:
    - build:ts
    - build:native

image: node:14.15-alpine

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_EXTERNAL_PULL_REQUEST_IID

variables:
  ASAP_HOSTNAME: hub.asap.science
  PLAYWRIGHT_BROWSERS_PATH: 0

stages:
  - build
  - test
  - prepare-dev
  - deploy-dev
  - verify-dev
  - prepare-prod
  - deploy-prod
  - verify-prod

###############
# stage build #
###############j

build:ts:
  artifacts:
    expire_in: 2 weeks
    paths:
      - 'packages/*/build*'
      - 'apps/*/build*'
  script:
    - source ci/env-setup.sh
    - export REACT_APP_API_BASE_URL=$ASAP_API_URL
    - yarn run build

    - export CI_REPO_OWNER="$CI_PROJECT_NAMESPACE"
    - export CI_REPO_NAME="$CI_PROJECT_NAME"
    - export CI_BRANCH="$CI_COMMIT_BRANCH"
    - yarn bundlewatch
  needs:
    - []
  stage: build

build:native:
  artifacts:
    expire_in: 2 weeks
    paths:
      - '.yarn/unplugged'
  script:
    - yarn rebuild
  needs:
    - []
  stage: build

##############
# stage test #
##############j

.tmpl:test: &tmpl_test
  script:
    - echo "no script property found"
  needs: []
  stage: test

check:packages:
  <<: *tmpl_test
  script:
    - yarn install --immutable --immutable-cache

check:constraints:
  <<: *tmpl_test
  script:
    - yarn constraints

check:format:
  <<: *tmpl_test
  script:
    - yarn run lint:format

test:unit:
  <<: *tmpl_test
  artifacts:
    expire_in: 5 day
    paths:
      - coverage
  script:
    - yarn run test --coverage
    - yarn codecov

test:browser:
  <<: *tmpl_test
  image: mcr.microsoft.com/playwright:bionic
  script:
    - yarn run test:browser
  needs:
    - build:native

test:build-output:
  <<: *tmpl_test
  script:
    - yarn run test:build-output
  needs:
    - build:ts

####################
# stage deploy-dev #
####################

deploy:sls:branch:
  <<: *tmpl_branch
  <<: *tmpl_deploy
  before_script:
    - source ci/env-setup.sh
  environment:
    name: review/$CI_EXTERNAL_PULL_REQUEST_IID
    url: https://$CI_EXTERNAL_PULL_REQUEST_IID.$ASAP_HOSTNAME
    auto_stop_in: 3 days
  variables:
    <<: *tmpl_branch_variables
    <<: *tmpl_deploy_variables
  stage: deploy-dev
  needs:
    - build:ts
    - build:native

deploy:sls:development:
  <<: *tmpl_master
  <<: *tmpl_deploy
  environment:
    name: dev
    url: $ASAP_APP_URL
  variables:
    <<: *tmpl_master_variables
    <<: *tmpl_deploy_variables
    SLS_STAGE: 'dev'
  stage: deploy-dev
  needs:
    - build:ts
    - build:native
    - sync:squidex:dev

####################
# stage verify-dev #
####################

verify:branch:
  <<: *tmpl_branch
  stage: verify-dev
  variables:
    API_URL: https://api-$CI_EXTERNAL_PULL_REQUEST_IID.$ASAP_HOSTNAME
  needs:
    - build:ts
    - build:native
    - deploy:sls:branch
  script:
    - ASAP_API_URL=$API_URL yarn test:e2e

verify:development:
  <<: *tmpl_master
  stage: verify-dev
  environment:
    name: dev
    url: $ASAP_APP_URL
  needs:
    - build:ts
    - build:native
    - deploy:sls:development
  script:
    - yarn test:e2e

#####################
# stage deploy-prod #
#####################

deploy:sls:production:
  <<: *tmpl_master
  <<: *tmpl_deploy
  artifacts:
    paths:
      - 'apps/auth-frontend/build'
  before_script:
    - export AUTH_FRONTEND_BASE_URL=$ASAP_APP_URL/.auth/
    - export REACT_APP_API_BASE_URL=$ASAP_API_URL
    - yarn run build # create production build
  environment:
    name: production
    url: $ASAP_APP_URL
  variables:
    <<: *tmpl_master_variables
    <<: *tmpl_deploy_variables
  stage: deploy-prod
  needs:
    - build:ts
    - build:native
    - test:unit
    - test:browser
    - test:build-output
    - sync:squidex:production
    - verify:development

#####################
# stage verify-prod #
#####################

verify:production:
  <<: *tmpl_master
  stage: verify-prod
  environment:
    name: production
    url: $ASAP_APP_URL
  needs:
    - build:ts
    - build:native
    - deploy:sls:production
  script:
    - yarn test:e2e
