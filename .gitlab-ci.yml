# https://gitlab.com/yldio/asap-hub/-/ci/lint
include:
  - 'ci/.gitlab-ci.ses.yml'
  - 'ci/.gitlab-ci.squidex.yml'

.tmpl:master: &tmpl_master
  rules: &tmpl_master_rules
    - if: $CI_COMMIT_BRANCH == 'master'
  variables: &tmpl_master_variables
    SLS_STAGE: production

.tmpl:branch: &tmpl_branch
  rules:
    - if: $CI_EXTERNAL_PULL_REQUEST_IID
  variables: &tmpl_branch_variables
    SLS_STAGE: $CI_EXTERNAL_PULL_REQUEST_IID

.tmpl:deploy: &tmpl_deploy
  script:
    - yarn sls deploy --verbose
  stage: deploy
  variables: &tmpl_deploy_variables
    NODE_ENV: production
  dependencies:
    - build:ts
    - build:native

.tmpl:branch_remove: &tmpl_branch_remove
  rules:
    - if: $CI_EXTERNAL_PULL_REQUEST_IID
      when: manual
      allow_failure: true
  variables: &tmpl_branch_remove_variables
    <<: *tmpl_branch_variables
    GIT_CHECKOUT: 0

image: node:12.18

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_EXTERNAL_PULL_REQUEST_IID

variables:
  ASAP_HOSTNAME: hub.asap.science

stages:
  - build
  - test
  - prepare
  - deploy

# stage build

build:ts:
  artifacts:
    expire_in: 2 weeks
    paths:
      - 'packages/*/build'
      - 'apps/*/build'
  script:
    - source ci/env-setup.sh
    - export REACT_APP_API_BASE_URL=$ASAP_API_URL
    - yarn run build
  needs:
    - []
  stage: build

build:native:
  artifacts:
    expire_in: 2 weeks
    paths:
      - '.yarn/unplugged'
  script:
    - yarn rebuild
  needs:
    - []
  stage: build

# stage test

.tmpl:test: &tmpl_test
  script:
    - echo "no script property found"
  needs: []
  stage: test

test:packages:
  <<: *tmpl_test
  script:
    - yarn install --immutable --immutable-cache

test:constraints:
  <<: *tmpl_test
  script:
    - yarn constraints

test:format:
  <<: *tmpl_test
  script:
    - yarn run lint:format

test:unit:
  <<: *tmpl_test
  artifacts:
    expire_in: 5 day
    paths:
      - coverage
  cache:
    paths:
      - '.jest-cache'
  script:
    - export SQUIDEX_APP_NAME=$SQUIDEX_TEST_APP_NAME
    - export SQUIDEX_CLIENT_ID=$SQUIDEX_TEST_CLIENT_ID
    - export SQUIDEX_CLIENT_SECRET=$SQUIDEX_TEST_CLIENT_SECRET
    - yarn run test:unit --coverage
  after_script:
    - yarn dlx codecov@3.7.2
  needs:
    - build:ts
  variables:
    <<: *tmpl_branch_variables

test:integration:
  <<: *tmpl_test
  cache:
    paths:
      - '.jest-cache'
  script:
    - export SQUIDEX_APP_NAME=$SQUIDEX_TEST_APP_NAME
    - export SQUIDEX_CLIENT_ID=$SQUIDEX_TEST_CLIENT_ID
    - export SQUIDEX_CLIENT_SECRET=$SQUIDEX_TEST_CLIENT_SECRET
    - yarn run test:integration
  needs:
    - build:ts
  variables:
    <<: *tmpl_branch_variables

deploy:sls:branch:
  <<: *tmpl_branch
  <<: *tmpl_deploy
  before_script:
    - source ci/env-setup.sh
  environment:
    name: review/$CI_EXTERNAL_PULL_REQUEST_IID
    url: https://$CI_EXTERNAL_PULL_REQUEST_IID.$ASAP_HOSTNAME
    on_stop: deploy:sls:branch_remove
    auto_stop_in: 3 days
  variables:
    <<: *tmpl_branch_variables
    <<: *tmpl_deploy_variables
  needs:
    - build:ts
    - build:native

deploy:sls:branch_remove:
  <<: *tmpl_branch
  <<: *tmpl_branch_remove
  environment:
    name: review/$CI_EXTERNAL_PULL_REQUEST_IID
    action: stop
  script:
    - git checkout $CI_COMMIT_SHA # the branch may not exist
    - yarn sls remove --verbose
  needs:
    - build:native
  stage: deploy

deploy:sls:development:
  <<: *tmpl_master
  <<: *tmpl_deploy
  environment:
    name: dev
    url: $ASAP_APP_URL
  variables:
    <<: *tmpl_master_variables
    <<: *tmpl_deploy_variables
    SLS_STAGE: 'dev'
  needs:
    - build:ts
    - build:native

deploy:sls:production:
  <<: *tmpl_master
  <<: *tmpl_deploy
  artifacts:
    paths:
      - 'apps/auth-frontend/build'
  before_script:
    - export AUTH_FRONTEND_BASE_URL=$ASAP_APP_URL/.auth/
    - export REACT_APP_API_BASE_URL=$ASAP_API_URL
    - yarn run build # create production build
  environment:
    name: production
    url: $ASAP_APP_URL
  variables:
    <<: *tmpl_master_variables
    <<: *tmpl_deploy_variables
  needs:
    - build:ts
    - build:native
    - test:unit
    - test:integration
    - sync:squidex:production
