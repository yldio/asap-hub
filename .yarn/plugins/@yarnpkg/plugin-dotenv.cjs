/* eslint-disable */
module.exports = {
name: "@yarnpkg/plugin-dotenv",
factory: function (require) {
var plugin;plugin=(()=>{var e={86:(e,n,t)=>{"use strict";t.r(n),t.d(n,{hooks:()=>o});var r=t(347);const o={async setupScriptEnvironment(e,n){const t=(0,r.v)();Object.assign(n,t.parsed)}}},347:(e,n,t)=>{const r=t(747),o=t(622);function s(e){console.log("[dotenv][DEBUG] "+e)}const c=/^\s*([\w.-]+)\s*=\s*(.*)?\s*$/,i=/\\n/g,l=/\n|\r|\r\n/;function u(e,n){const t=Boolean(n&&n.debug),r={};return e.toString().split(l).forEach((function(e,n){const o=e.match(c);if(null!=o){const e=o[1];let n=o[2]||"";const t=n.length-1,s='"'===n[0]&&'"'===n[t];"'"===n[0]&&"'"===n[t]||s?(n=n.substring(1,t),s&&(n=n.replace(i,"\n"))):n=n.trim(),r[e]=n}else t&&s(`did not match key and value when parsing line ${n+1}: ${e}`)})),r}e.exports.v=function(e){let n=o.resolve(process.cwd(),".env"),t="utf8",c=!1;e&&(null!=e.path&&(n=e.path),null!=e.encoding&&(t=e.encoding),null!=e.debug&&(c=!0));try{const e=u(r.readFileSync(n,{encoding:t}),{debug:c});return Object.keys(e).forEach((function(n){Object.prototype.hasOwnProperty.call(process.env,n)?c&&s(`"${n}" is already defined in \`process.env\` and will not be overwritten`):process.env[n]=e[n]})),{parsed:e}}catch(e){return{error:e}}}},747:e=>{"use strict";e.exports=require("fs")},622:e=>{"use strict";e.exports=require("path")}},n={};function t(r){if(n[r])return n[r].exports;var o=n[r]={exports:{}};return e[r](o,o.exports,t),o.exports}return t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t(86)})();
return plugin;
}
};