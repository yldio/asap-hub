import { LabsResponse } from '@asap-hub/model';
import { SquidexGraphqlClient } from '@asap-hub/squidex';
import { FetchLabsQuery } from '../autogenerated-gql/graphql';
import { FETCH_LABS } from '../queries/labs.queries';

export default class Labs implements LabsController {
  squidexGraphQlClient: SquidexGraphqlClient;

  constructor(squidexGraphqlClient: SquidexGraphqlClient) {
    this.squidexGraphQlClient = squidexGraphqlClient;
  }
  async fetch(): Promise<LabsResponse> {
    const { queryLabsContents } = await this.squidexGraphQlClient.request<
      FetchLabsQuery,
      unknown
    >(FETCH_LABS);
    if (!queryLabsContents) {
      return [];
    }
    return queryLabsContents.map(({ id, flatData }) => ({
      id,
      name: flatData.name || '',
    }));
  }
}

export interface LabsController {
  fetch: () => Promise<LabsResponse>;
}
