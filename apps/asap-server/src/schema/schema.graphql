schema {
  query: AppQueries
  mutation: AppMutations
}

"""The app mutations."""
type AppMutations {
  """Change a Calendars content."""
  changeCalendarsContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """The status for the content."""
    status: String!
  ): Calendars!
  """Change a Dashboard content."""
  changeDashboardContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """The status for the content."""
    status: String!
  ): Dashboard!
  """Change a Discover ASAP content."""
  changeDiscoverContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """The status for the content."""
    status: String!
  ): Discover!
  """Change a Events content."""
  changeEventsContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """The status for the content."""
    status: String!
  ): Events!
  """Change a External authors content."""
  changeExternalAuthorsContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """The status for the content."""
    status: String!
  ): ExternalAuthors!
  """Change a Groups content."""
  changeGroupsContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """The status for the content."""
    status: String!
  ): Groups!
  """Change a Labs content."""
  changeLabsContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """The status for the content."""
    status: String!
  ): Labs!
  """Change a Migrations content."""
  changeMigrationsContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """The status for the content."""
    status: String!
  ): Migrations!
  """Change a News content."""
  changeNewsAndEventsContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """The status for the content."""
    status: String!
  ): NewsAndEvents!
  """Change a Pages content."""
  changePagesContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """The status for the content."""
    status: String!
  ): Pages!
  """Change a Research Outputs content."""
  changeResearchOutputsContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """The status for the content."""
    status: String!
  ): ResearchOutputs!
  """Change a Teams content."""
  changeTeamsContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """The status for the content."""
    status: String!
  ): Teams!
  """Change a Users content."""
  changeUsersContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """The status for the content."""
    status: String!
  ): Users!
  """Creates an Calendars content."""
  createCalendarsContent(
    """The data for the content."""
    data: CalendarsDataInputDto!
    """The optional custom content ID."""
    id: String
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Calendars!
  """Creates an Dashboard content."""
  createDashboardContent(
    """The data for the content."""
    data: DashboardDataInputDto!
    """The optional custom content ID."""
    id: String
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Dashboard!
  """Creates an Discover ASAP content."""
  createDiscoverContent(
    """The data for the content."""
    data: DiscoverDataInputDto!
    """The optional custom content ID."""
    id: String
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Discover!
  """Creates an Events content."""
  createEventsContent(
    """The data for the content."""
    data: EventsDataInputDto!
    """The optional custom content ID."""
    id: String
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Events!
  """Creates an External authors content."""
  createExternalAuthorsContent(
    """The data for the content."""
    data: ExternalAuthorsDataInputDto!
    """The optional custom content ID."""
    id: String
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): ExternalAuthors!
  """Creates an Groups content."""
  createGroupsContent(
    """The data for the content."""
    data: GroupsDataInputDto!
    """The optional custom content ID."""
    id: String
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Groups!
  """Creates an Labs content."""
  createLabsContent(
    """The data for the content."""
    data: LabsDataInputDto!
    """The optional custom content ID."""
    id: String
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Labs!
  """Creates an Migrations content."""
  createMigrationsContent(
    """The data for the content."""
    data: MigrationsDataInputDto!
    """The optional custom content ID."""
    id: String
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Migrations!
  """Creates an News content."""
  createNewsAndEventsContent(
    """The data for the content."""
    data: NewsAndEventsDataInputDto!
    """The optional custom content ID."""
    id: String
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): NewsAndEvents!
  """Creates an Pages content."""
  createPagesContent(
    """The data for the content."""
    data: PagesDataInputDto!
    """The optional custom content ID."""
    id: String
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Pages!
  """Creates an Research Outputs content."""
  createResearchOutputsContent(
    """The data for the content."""
    data: ResearchOutputsDataInputDto!
    """The optional custom content ID."""
    id: String
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): ResearchOutputs!
  """Creates an Teams content."""
  createTeamsContent(
    """The data for the content."""
    data: TeamsDataInputDto!
    """The optional custom content ID."""
    id: String
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Teams!
  """Creates an Users content."""
  createUsersContent(
    """The data for the content."""
    data: UsersDataInputDto!
    """The optional custom content ID."""
    id: String
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Users!
  """Delete an Calendars content."""
  deleteCalendarsContent(
    """The expected version."""
    expectedVersion: Int = -2
    """The id of the content (usually GUID)."""
    id: String!
  ): EntitySavedResultDto!
  """Delete an Dashboard content."""
  deleteDashboardContent(
    """The expected version."""
    expectedVersion: Int = -2
    """The id of the content (usually GUID)."""
    id: String!
  ): EntitySavedResultDto!
  """Delete an Discover ASAP content."""
  deleteDiscoverContent(
    """The expected version."""
    expectedVersion: Int = -2
    """The id of the content (usually GUID)."""
    id: String!
  ): EntitySavedResultDto!
  """Delete an Events content."""
  deleteEventsContent(
    """The expected version."""
    expectedVersion: Int = -2
    """The id of the content (usually GUID)."""
    id: String!
  ): EntitySavedResultDto!
  """Delete an External authors content."""
  deleteExternalAuthorsContent(
    """The expected version."""
    expectedVersion: Int = -2
    """The id of the content (usually GUID)."""
    id: String!
  ): EntitySavedResultDto!
  """Delete an Groups content."""
  deleteGroupsContent(
    """The expected version."""
    expectedVersion: Int = -2
    """The id of the content (usually GUID)."""
    id: String!
  ): EntitySavedResultDto!
  """Delete an Labs content."""
  deleteLabsContent(
    """The expected version."""
    expectedVersion: Int = -2
    """The id of the content (usually GUID)."""
    id: String!
  ): EntitySavedResultDto!
  """Delete an Migrations content."""
  deleteMigrationsContent(
    """The expected version."""
    expectedVersion: Int = -2
    """The id of the content (usually GUID)."""
    id: String!
  ): EntitySavedResultDto!
  """Delete an News content."""
  deleteNewsAndEventsContent(
    """The expected version."""
    expectedVersion: Int = -2
    """The id of the content (usually GUID)."""
    id: String!
  ): EntitySavedResultDto!
  """Delete an Pages content."""
  deletePagesContent(
    """The expected version."""
    expectedVersion: Int = -2
    """The id of the content (usually GUID)."""
    id: String!
  ): EntitySavedResultDto!
  """Delete an Research Outputs content."""
  deleteResearchOutputsContent(
    """The expected version."""
    expectedVersion: Int = -2
    """The id of the content (usually GUID)."""
    id: String!
  ): EntitySavedResultDto!
  """Delete an Teams content."""
  deleteTeamsContent(
    """The expected version."""
    expectedVersion: Int = -2
    """The id of the content (usually GUID)."""
    id: String!
  ): EntitySavedResultDto!
  """Delete an Users content."""
  deleteUsersContent(
    """The expected version."""
    expectedVersion: Int = -2
    """The id of the content (usually GUID)."""
    id: String!
  ): EntitySavedResultDto!
  """Patch an Calendars content by id."""
  patchCalendarsContent(
    """The data for the content."""
    data: CalendarsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String
  ): Calendars!
  """Patch an Dashboard content by id."""
  patchDashboardContent(
    """The data for the content."""
    data: DashboardDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String
  ): Dashboard!
  """Patch an Discover ASAP content by id."""
  patchDiscoverContent(
    """The data for the content."""
    data: DiscoverDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String
  ): Discover!
  """Patch an Events content by id."""
  patchEventsContent(
    """The data for the content."""
    data: EventsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String
  ): Events!
  """Patch an External authors content by id."""
  patchExternalAuthorsContent(
    """The data for the content."""
    data: ExternalAuthorsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String
  ): ExternalAuthors!
  """Patch an Groups content by id."""
  patchGroupsContent(
    """The data for the content."""
    data: GroupsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String
  ): Groups!
  """Patch an Labs content by id."""
  patchLabsContent(
    """The data for the content."""
    data: LabsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String
  ): Labs!
  """Patch an Migrations content by id."""
  patchMigrationsContent(
    """The data for the content."""
    data: MigrationsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String
  ): Migrations!
  """Patch an News content by id."""
  patchNewsAndEventsContent(
    """The data for the content."""
    data: NewsAndEventsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String
  ): NewsAndEvents!
  """Patch an Pages content by id."""
  patchPagesContent(
    """The data for the content."""
    data: PagesDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String
  ): Pages!
  """Patch an Research Outputs content by id."""
  patchResearchOutputsContent(
    """The data for the content."""
    data: ResearchOutputsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String
  ): ResearchOutputs!
  """Patch an Teams content by id."""
  patchTeamsContent(
    """The data for the content."""
    data: TeamsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String
  ): Teams!
  """Patch an Users content by id."""
  patchUsersContent(
    """The data for the content."""
    data: UsersDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String
  ): Users!
  """Publish a Calendars content."""
  publishCalendarsContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """The status for the content."""
    status: String!
  ): Calendars! @deprecated(reason: "Use 'changeCalendarsContent' instead")
  """Publish a Dashboard content."""
  publishDashboardContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """The status for the content."""
    status: String!
  ): Dashboard! @deprecated(reason: "Use 'changeDashboardContent' instead")
  """Publish a Discover ASAP content."""
  publishDiscoverContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """The status for the content."""
    status: String!
  ): Discover! @deprecated(reason: "Use 'changeDiscoverContent' instead")
  """Publish a Events content."""
  publishEventsContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """The status for the content."""
    status: String!
  ): Events! @deprecated(reason: "Use 'changeEventsContent' instead")
  """Publish a External authors content."""
  publishExternalAuthorsContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """The status for the content."""
    status: String!
  ): ExternalAuthors! @deprecated(reason: "Use 'changeExternalAuthorsContent' instead")
  """Publish a Groups content."""
  publishGroupsContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """The status for the content."""
    status: String!
  ): Groups! @deprecated(reason: "Use 'changeGroupsContent' instead")
  """Publish a Labs content."""
  publishLabsContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """The status for the content."""
    status: String!
  ): Labs! @deprecated(reason: "Use 'changeLabsContent' instead")
  """Publish a Migrations content."""
  publishMigrationsContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """The status for the content."""
    status: String!
  ): Migrations! @deprecated(reason: "Use 'changeMigrationsContent' instead")
  """Publish a News content."""
  publishNewsAndEventsContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """The status for the content."""
    status: String!
  ): NewsAndEvents! @deprecated(reason: "Use 'changeNewsAndEventsContent' instead")
  """Publish a Pages content."""
  publishPagesContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """The status for the content."""
    status: String!
  ): Pages! @deprecated(reason: "Use 'changePagesContent' instead")
  """Publish a Research Outputs content."""
  publishResearchOutputsContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """The status for the content."""
    status: String!
  ): ResearchOutputs! @deprecated(reason: "Use 'changeResearchOutputsContent' instead")
  """Publish a Teams content."""
  publishTeamsContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """The status for the content."""
    status: String!
  ): Teams! @deprecated(reason: "Use 'changeTeamsContent' instead")
  """Publish a Users content."""
  publishUsersContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """The status for the content."""
    status: String!
  ): Users! @deprecated(reason: "Use 'changeUsersContent' instead")
  """Update an Calendars content by id."""
  updateCalendarsContent(
    """The data for the content."""
    data: CalendarsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String
  ): Calendars!
  """Update an Dashboard content by id."""
  updateDashboardContent(
    """The data for the content."""
    data: DashboardDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String
  ): Dashboard!
  """Update an Discover ASAP content by id."""
  updateDiscoverContent(
    """The data for the content."""
    data: DiscoverDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String
  ): Discover!
  """Update an Events content by id."""
  updateEventsContent(
    """The data for the content."""
    data: EventsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String
  ): Events!
  """Update an External authors content by id."""
  updateExternalAuthorsContent(
    """The data for the content."""
    data: ExternalAuthorsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String
  ): ExternalAuthors!
  """Update an Groups content by id."""
  updateGroupsContent(
    """The data for the content."""
    data: GroupsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String
  ): Groups!
  """Update an Labs content by id."""
  updateLabsContent(
    """The data for the content."""
    data: LabsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String
  ): Labs!
  """Update an Migrations content by id."""
  updateMigrationsContent(
    """The data for the content."""
    data: MigrationsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String
  ): Migrations!
  """Update an News content by id."""
  updateNewsAndEventsContent(
    """The data for the content."""
    data: NewsAndEventsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String
  ): NewsAndEvents!
  """Update an Pages content by id."""
  updatePagesContent(
    """The data for the content."""
    data: PagesDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String
  ): Pages!
  """Update an Research Outputs content by id."""
  updateResearchOutputsContent(
    """The data for the content."""
    data: ResearchOutputsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String
  ): ResearchOutputs!
  """Update an Teams content by id."""
  updateTeamsContent(
    """The data for the content."""
    data: TeamsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String
  ): Teams!
  """Update an Users content by id."""
  updateUsersContent(
    """The data for the content."""
    data: UsersDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String
  ): Users!
  """Upsert an Calendars content by id."""
  upsertCalendarsContent(
    """The data for the content."""
    data: CalendarsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Calendars!
  """Upsert an Dashboard content by id."""
  upsertDashboardContent(
    """The data for the content."""
    data: DashboardDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Dashboard!
  """Upsert an Discover ASAP content by id."""
  upsertDiscoverContent(
    """The data for the content."""
    data: DiscoverDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Discover!
  """Upsert an Events content by id."""
  upsertEventsContent(
    """The data for the content."""
    data: EventsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Events!
  """Upsert an External authors content by id."""
  upsertExternalAuthorsContent(
    """The data for the content."""
    data: ExternalAuthorsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): ExternalAuthors!
  """Upsert an Groups content by id."""
  upsertGroupsContent(
    """The data for the content."""
    data: GroupsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Groups!
  """Upsert an Labs content by id."""
  upsertLabsContent(
    """The data for the content."""
    data: LabsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Labs!
  """Upsert an Migrations content by id."""
  upsertMigrationsContent(
    """The data for the content."""
    data: MigrationsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Migrations!
  """Upsert an News content by id."""
  upsertNewsAndEventsContent(
    """The data for the content."""
    data: NewsAndEventsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): NewsAndEvents!
  """Upsert an Pages content by id."""
  upsertPagesContent(
    """The data for the content."""
    data: PagesDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Pages!
  """Upsert an Research Outputs content by id."""
  upsertResearchOutputsContent(
    """The data for the content."""
    data: ResearchOutputsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): ResearchOutputs!
  """Upsert an Teams content by id."""
  upsertTeamsContent(
    """The data for the content."""
    data: TeamsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Teams!
  """Upsert an Users content by id."""
  upsertUsersContent(
    """The data for the content."""
    data: UsersDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object."""
    id: String!
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Users!
}

"""The app queries."""
type AppQueries {
  """Find an asset by id."""
  findAsset(
    """The id of the asset (usually GUID)."""
    id: String!
  ): Asset
  """Find an Calendars content by id."""
  findCalendarsContent(
    """The ID of the object."""
    id: String!
    """The optional version of the content to retrieve an older instance (not cached)."""
    version: Int
  ): Calendars
  """Find an Dashboard content by id."""
  findDashboardContent(
    """The ID of the object."""
    id: String!
    """The optional version of the content to retrieve an older instance (not cached)."""
    version: Int
  ): Dashboard
  """Find an Discover ASAP content by id."""
  findDiscoverContent(
    """The ID of the object."""
    id: String!
    """The optional version of the content to retrieve an older instance (not cached)."""
    version: Int
  ): Discover
  """Find an Events content by id."""
  findEventsContent(
    """The ID of the object."""
    id: String!
    """The optional version of the content to retrieve an older instance (not cached)."""
    version: Int
  ): Events
  """Find an External authors content by id."""
  findExternalAuthorsContent(
    """The ID of the object."""
    id: String!
    """The optional version of the content to retrieve an older instance (not cached)."""
    version: Int
  ): ExternalAuthors
  """Find an Groups content by id."""
  findGroupsContent(
    """The ID of the object."""
    id: String!
    """The optional version of the content to retrieve an older instance (not cached)."""
    version: Int
  ): Groups
  """Find an Labs content by id."""
  findLabsContent(
    """The ID of the object."""
    id: String!
    """The optional version of the content to retrieve an older instance (not cached)."""
    version: Int
  ): Labs
  """Find an Migrations content by id."""
  findMigrationsContent(
    """The ID of the object."""
    id: String!
    """The optional version of the content to retrieve an older instance (not cached)."""
    version: Int
  ): Migrations
  """Find an News content by id."""
  findNewsAndEventsContent(
    """The ID of the object."""
    id: String!
    """The optional version of the content to retrieve an older instance (not cached)."""
    version: Int
  ): NewsAndEvents
  """Find an Pages content by id."""
  findPagesContent(
    """The ID of the object."""
    id: String!
    """The optional version of the content to retrieve an older instance (not cached)."""
    version: Int
  ): Pages
  """Find an Research Outputs content by id."""
  findResearchOutputsContent(
    """The ID of the object."""
    id: String!
    """The optional version of the content to retrieve an older instance (not cached)."""
    version: Int
  ): ResearchOutputs
  """Find an Teams content by id."""
  findTeamsContent(
    """The ID of the object."""
    id: String!
    """The optional version of the content to retrieve an older instance (not cached)."""
    version: Int
  ): Teams
  """Find an Users content by id."""
  findUsersContent(
    """The ID of the object."""
    id: String!
    """The optional version of the content to retrieve an older instance (not cached)."""
    version: Int
  ): Users
  """Get assets."""
  queryAssets(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional number of assets to skip."""
    skip: Int = 0
    """Optional number of assets to take."""
    top: Int
  ): [Asset!]
  """Get assets and total count."""
  queryAssetsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional number of assets to skip."""
    skip: Int = 0
    """Optional number of assets to take."""
    top: Int
  ): AssetResultDto
  """Query Calendars content items."""
  queryCalendarsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Calendars!]
  """Query Calendars content items with total count."""
  queryCalendarsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): CalendarsResultDto
  """Query Dashboard content items."""
  queryDashboardContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Dashboard!]
  """Query Dashboard content items with total count."""
  queryDashboardContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): DashboardResultDto
  """Query Discover ASAP content items."""
  queryDiscoverContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Discover!]
  """Query Discover ASAP content items with total count."""
  queryDiscoverContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): DiscoverResultDto
  """Query Events content items."""
  queryEventsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Events!]
  """Query Events content items with total count."""
  queryEventsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): EventsResultDto
  """Query External authors content items."""
  queryExternalAuthorsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [ExternalAuthors!]
  """Query External authors content items with total count."""
  queryExternalAuthorsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): ExternalAuthorsResultDto
  """Query Groups content items."""
  queryGroupsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Groups!]
  """Query Groups content items with total count."""
  queryGroupsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): GroupsResultDto
  """Query Labs content items."""
  queryLabsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Labs!]
  """Query Labs content items with total count."""
  queryLabsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): LabsResultDto
  """Query Migrations content items."""
  queryMigrationsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Migrations!]
  """Query Migrations content items with total count."""
  queryMigrationsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): MigrationsResultDto
  """Query News content items."""
  queryNewsAndEventsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [NewsAndEvents!]
  """Query News content items with total count."""
  queryNewsAndEventsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): NewsAndEventsResultDto
  """Query Pages content items."""
  queryPagesContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Pages!]
  """Query Pages content items with total count."""
  queryPagesContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): PagesResultDto
  """Query Research Outputs content items."""
  queryResearchOutputsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [ResearchOutputs!]
  """Query Research Outputs content items with total count."""
  queryResearchOutputsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): ResearchOutputsResultDto
  """Query Teams content items."""
  queryTeamsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Teams!]
  """Query Teams content items with total count."""
  queryTeamsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): TeamsResultDto
  """Query Users content items."""
  queryUsersContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Users!]
  """Query Users content items with total count."""
  queryUsersContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): UsersResultDto
}

"""An asset"""
type Asset {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The user who created the object."""
  createdByUser: User!
  """The hash of the file. Can be null for old files."""
  fileHash: String!
  """The file name of the asset."""
  fileName: String!
  """The size of the file in bytes."""
  fileSize: Int!
  """The file type (file extension) of the asset."""
  fileType: String!
  """The version of the file."""
  fileVersion: Int!
  """The ID of the object."""
  id: String!
  """Determines if the uploaded file is an image."""
  isImage: Boolean! @deprecated(reason: "Use 'type' field instead.")
  """True, when the asset is not public."""
  isProtected: Boolean!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The user who updated the object the last time."""
  lastModifiedByUser: User!
  """The asset metadata."""
  metadata(
    """The path to the json value."""
    path: String
  ): JsonScalar
  """The type of the image."""
  metadataText: String!
  """The mime type."""
  mimeType: String!
  """The height of the image in pixels if the asset is an image."""
  pixelHeight: Int @deprecated(reason: "Use 'metadata' field instead.")
  """The width of the image in pixels if the asset is an image."""
  pixelWidth: Int @deprecated(reason: "Use 'metadata' field instead.")
  """The file name as slug."""
  slug: String!
  """The asset tags."""
  tags: [String!]!
  """The thumbnail URL to the asset."""
  thumbnailUrl: String
  """The type of the image."""
  type: AssetType!
  """The URL to the asset."""
  url: String!
  """The version of the object (usually GUID)."""
  version: Int!
}

"""List of assets and total count of assets."""
type AssetResultDto {
  """The assets."""
  items: [Asset!]!
  """The total count of assets."""
  total: Int!
}

enum AssetType {
  AUDIO
  IMAGE
  UNKNOWN
  VIDEO
}

"""The structure of a Calendars content type."""
type Calendars implements Content {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The user who created the object."""
  createdByUser: User!
  """The data of the content."""
  data: CalendarsDataDto!
  """The flat data of the content."""
  flatData: CalendarsFlatDataDto!
  """The ID of the object."""
  id: String!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The user who updated the object the last time."""
  lastModifiedByUser: User!
  """The new status of the content."""
  newStatus: String
  """The status color of the content."""
  newStatusColor: String
  """Query Events content items."""
  referencingEventsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Events!]
  """Query Events content items with total count."""
  referencingEventsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): EventsResultDto
  """Query Groups content items."""
  referencingGroupsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Groups!]
  """Query Groups content items with total count."""
  referencingGroupsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): GroupsResultDto
  """The status of the content."""
  status: String!
  """The status color of the content."""
  statusColor: String!
  """The URL to the content."""
  url: String!
  """The version of the object (usually GUID)."""
  version: Int!
}

"""The structure of the Color field of the Calendars content type."""
type CalendarsDataColorDto {
  iv: String
}

"""The structure of the Color field of the Calendars content input type."""
input CalendarsDataColorInputDto {
  iv: String
}

"""The structure of the Calendars data type."""
type CalendarsDataDto {
  color: CalendarsDataColorDto
  expirationDate: CalendarsDataExpirationDateDto
  googleCalendarId: CalendarsDataGoogleCalendarIdDto
  name: CalendarsDataNameDto
  resourceId: CalendarsDataResourceIdDto
  syncToken: CalendarsDataSyncTokenDto
}

"""The structure of the Google subscription expiration date field of the Calendars content type."""
type CalendarsDataExpirationDateDto {
  iv: Float
}

"""The structure of the Google subscription expiration date field of the Calendars content input type."""
input CalendarsDataExpirationDateInputDto {
  iv: Float
}

"""The structure of the Google Calendar ID field of the Calendars content type."""
type CalendarsDataGoogleCalendarIdDto {
  """Make sure this GCal is Public BEFORE adding it. Syncing will NOT work otherwise."""
  iv: String
}

"""The structure of the Google Calendar ID field of the Calendars content input type."""
input CalendarsDataGoogleCalendarIdInputDto {
  """Make sure this GCal is Public BEFORE adding it. Syncing will NOT work otherwise."""
  iv: String
}

"""The structure of the Calendars data input type."""
input CalendarsDataInputDto {
  color: CalendarsDataColorInputDto
  expirationDate: CalendarsDataExpirationDateInputDto
  googleCalendarId: CalendarsDataGoogleCalendarIdInputDto
  name: CalendarsDataNameInputDto
  resourceId: CalendarsDataResourceIdInputDto
  syncToken: CalendarsDataSyncTokenInputDto
}

"""The structure of the Name field of the Calendars content type."""
type CalendarsDataNameDto {
  iv: String
}

"""The structure of the Name field of the Calendars content input type."""
input CalendarsDataNameInputDto {
  iv: String
}

"""The structure of the Google resource ID field of the Calendars content type."""
type CalendarsDataResourceIdDto {
  iv: String
}

"""The structure of the Google resource ID field of the Calendars content input type."""
input CalendarsDataResourceIdInputDto {
  iv: String
}

"""The structure of the Google Last Sync Token field of the Calendars content type."""
type CalendarsDataSyncTokenDto {
  iv: String
}

"""The structure of the Google Last Sync Token field of the Calendars content input type."""
input CalendarsDataSyncTokenInputDto {
  iv: String
}

"""The structure of the flat Calendars data type."""
type CalendarsFlatDataDto {
  color: String
  expirationDate: Float
  """Make sure this GCal is Public BEFORE adding it. Syncing will NOT work otherwise."""
  googleCalendarId: String
  name: String
  resourceId: String
  syncToken: String
}

"""List of Calendars items and total count."""
type CalendarsResultDto {
  """The contents."""
  items: [Calendars!]
  """The total count of  contents."""
  total: Int!
}

"""The structure of all content types."""
interface Component {
  """The ID of the schema."""
  schemaId: String!
}

"""The structure of all content types."""
interface Content {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The ID of the object."""
  id: String!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The new status of the content."""
  newStatus: String
  """The status color of the content."""
  newStatusColor: String
  """The status of the content."""
  status: String!
  """The status color of the content."""
  statusColor: String!
  """The URL to the content."""
  url: String!
  """The version of the object (usually GUID)."""
  version: Int!
}

"""The structure of a Dashboard content type."""
type Dashboard implements Content {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The user who created the object."""
  createdByUser: User!
  """The data of the content."""
  data: DashboardDataDto!
  """The flat data of the content."""
  flatData: DashboardFlatDataDto!
  """The ID of the object."""
  id: String!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The user who updated the object the last time."""
  lastModifiedByUser: User!
  """The new status of the content."""
  newStatus: String
  """The status color of the content."""
  newStatusColor: String
  """The status of the content."""
  status: String!
  """The status color of the content."""
  statusColor: String!
  """The URL to the content."""
  url: String!
  """The version of the object (usually GUID)."""
  version: Int!
}

"""The structure of the Dashboard data type."""
type DashboardDataDto {
  news: DashboardDataNewsDto
  pages: DashboardDataPagesDto
}

"""The structure of the Dashboard data input type."""
input DashboardDataInputDto {
  news: DashboardDataNewsInputDto
  pages: DashboardDataPagesInputDto
}

"""The structure of the Latest News from ASAP field of the Dashboard content type."""
type DashboardDataNewsDto {
  iv: [NewsAndEvents!]
}

"""The structure of the Latest News from ASAP field of the Dashboard content input type."""
input DashboardDataNewsInputDto {
  iv: [String!]
}

"""The structure of the Where to Start field of the Dashboard content type."""
type DashboardDataPagesDto {
  iv: [Pages!]
}

"""The structure of the Where to Start field of the Dashboard content input type."""
input DashboardDataPagesInputDto {
  iv: [String!]
}

"""The structure of the flat Dashboard data type."""
type DashboardFlatDataDto {
  news: [NewsAndEvents!]
  pages: [Pages!]
}

"""List of Dashboard items and total count."""
type DashboardResultDto {
  """The contents."""
  items: [Dashboard!]
  """The total count of  contents."""
  total: Int!
}

"""The structure of a Discover ASAP content type."""
type Discover implements Content {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The user who created the object."""
  createdByUser: User!
  """The data of the content."""
  data: DiscoverDataDto!
  """The flat data of the content."""
  flatData: DiscoverFlatDataDto!
  """The ID of the object."""
  id: String!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The user who updated the object the last time."""
  lastModifiedByUser: User!
  """The new status of the content."""
  newStatus: String
  """The status color of the content."""
  newStatusColor: String
  """The status of the content."""
  status: String!
  """The status color of the content."""
  statusColor: String!
  """The URL to the content."""
  url: String!
  """The version of the object (usually GUID)."""
  version: Int!
}

"""The structure of the About Us field of the Discover ASAP content type."""
type DiscoverDataAboutUsDto {
  iv: String
}

"""The structure of the About Us field of the Discover ASAP content input type."""
input DiscoverDataAboutUsInputDto {
  iv: String
}

"""The structure of the Discover ASAP data type."""
type DiscoverDataDto {
  aboutUs: DiscoverDataAboutUsDto
  members: DiscoverDataMembersDto
  pages: DiscoverDataPagesDto
  training: DiscoverDataTrainingDto
}

"""The structure of the Discover ASAP data input type."""
input DiscoverDataInputDto {
  aboutUs: DiscoverDataAboutUsInputDto
  members: DiscoverDataMembersInputDto
  pages: DiscoverDataPagesInputDto
  training: DiscoverDataTrainingInputDto
}

"""The structure of the Members field of the Discover ASAP content type."""
type DiscoverDataMembersDto {
  iv: [Users!]
}

"""The structure of the Members field of the Discover ASAP content input type."""
input DiscoverDataMembersInputDto {
  iv: [String!]
}

"""The structure of the Grantee Guidance field of the Discover ASAP content type."""
type DiscoverDataPagesDto {
  iv: [Pages!]
}

"""The structure of the Grantee Guidance field of the Discover ASAP content input type."""
input DiscoverDataPagesInputDto {
  iv: [String!]
}

"""The structure of the Training field of the Discover ASAP content type."""
type DiscoverDataTrainingDto {
  iv: [NewsAndEvents!]
}

"""The structure of the Training field of the Discover ASAP content input type."""
input DiscoverDataTrainingInputDto {
  iv: [String!]
}

"""The structure of the flat Discover ASAP data type."""
type DiscoverFlatDataDto {
  aboutUs: String
  members: [Users!]
  pages: [Pages!]
  training: [NewsAndEvents!]
}

"""List of Discover ASAP items and total count."""
type DiscoverResultDto {
  """The contents."""
  items: [Discover!]
  """The total count of  contents."""
  total: Int!
}

"""The result of a mutation"""
type EntitySavedResultDto {
  """The new version of the item."""
  version: Long!
}

"""The structure of a Events content type."""
type Events implements Content {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The user who created the object."""
  createdByUser: User!
  """The data of the content."""
  data: EventsDataDto!
  """The flat data of the content."""
  flatData: EventsFlatDataDto!
  """The ID of the object."""
  id: String!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The user who updated the object the last time."""
  lastModifiedByUser: User!
  """The new status of the content."""
  newStatus: String
  """The status color of the content."""
  newStatusColor: String
  """The status of the content."""
  status: String!
  """The status color of the content."""
  statusColor: String!
  """The URL to the content."""
  url: String!
  """The version of the object (usually GUID)."""
  version: Int!
}

"""The structure of the Calendar field of the Events content type."""
type EventsDataCalendarDto {
  iv: [Calendars!]
}

"""The structure of the Calendar field of the Events content input type."""
input EventsDataCalendarInputDto {
  iv: [String!]
}

"""The structure of the Description field of the Events content type."""
type EventsDataDescriptionDto {
  iv: String
}

"""The structure of the Description field of the Events content input type."""
input EventsDataDescriptionInputDto {
  iv: String
}

"""The structure of the Events data type."""
type EventsDataDto {
  calendar: EventsDataCalendarDto
  description: EventsDataDescriptionDto
  endDate: EventsDataEndDateDto
  endDateTimeZone: EventsDataEndDateTimeZoneDto
  eventLink: EventsDataEventLinkDto
  googleId: EventsDataGoogleIdDto
  hidden: EventsDataHiddenDto
  meetingLink: EventsDataMeetingLinkDto
  meetingMaterials: EventsDataMeetingMaterialsDto
  meetingMaterialsPermanentlyUnavailable: EventsDataMeetingMaterialsPermanentlyUnavailableDto
  notes: EventsDataNotesDto
  notesPermanentlyUnavailable: EventsDataNotesPermanentlyUnavailableDto
  presentation: EventsDataPresentationDto
  presentationPermanentlyUnavailable: EventsDataPresentationPermanentlyUnavailableDto
  startDate: EventsDataStartDateDto
  startDateTimeZone: EventsDataStartDateTimeZoneDto
  status: EventsDataStatusDto
  tags: EventsDataTagsDto
  thumbnail: EventsDataThumbnailDto
  title: EventsDataTitleDto
  videoRecording: EventsDataVideoRecordingDto
  videoRecordingPermanentlyUnavailable: EventsDataVideoRecordingPermanentlyUnavailableDto
}

"""The structure of the End Date field of the Events content type."""
type EventsDataEndDateDto {
  iv: Instant
}

"""The structure of the End Date field of the Events content input type."""
input EventsDataEndDateInputDto {
  iv: Instant
}

"""The structure of the End Date Time Zone field of the Events content type."""
type EventsDataEndDateTimeZoneDto {
  iv: String
}

"""The structure of the End Date Time Zone field of the Events content input type."""
input EventsDataEndDateTimeZoneInputDto {
  iv: String
}

"""The structure of the Google Event Link field of the Events content type."""
type EventsDataEventLinkDto {
  iv: String
}

"""The structure of the Google Event Link field of the Events content input type."""
input EventsDataEventLinkInputDto {
  iv: String
}

"""The structure of the Google Id field of the Events content type."""
type EventsDataGoogleIdDto {
  iv: String
}

"""The structure of the Google Id field of the Events content input type."""
input EventsDataGoogleIdInputDto {
  iv: String
}

"""The structure of the Hide Event field of the Events content type."""
type EventsDataHiddenDto {
  """Hidden events will NOT show on the Hub. (Note: any event cancelled on GCal will be hidden by default. To show a cancelled event on the Hub, you have to manually un-hide the event here)"""
  iv: Boolean
}

"""The structure of the Hide Event field of the Events content input type."""
input EventsDataHiddenInputDto {
  """Hidden events will NOT show on the Hub. (Note: any event cancelled on GCal will be hidden by default. To show a cancelled event on the Hub, you have to manually un-hide the event here)"""
  iv: Boolean
}

"""The structure of the Events data input type."""
input EventsDataInputDto {
  calendar: EventsDataCalendarInputDto
  description: EventsDataDescriptionInputDto
  endDate: EventsDataEndDateInputDto
  endDateTimeZone: EventsDataEndDateTimeZoneInputDto
  eventLink: EventsDataEventLinkInputDto
  googleId: EventsDataGoogleIdInputDto
  hidden: EventsDataHiddenInputDto
  meetingLink: EventsDataMeetingLinkInputDto
  meetingMaterials: EventsDataMeetingMaterialsInputDto
  meetingMaterialsPermanentlyUnavailable: EventsDataMeetingMaterialsPermanentlyUnavailableInputDto
  notes: EventsDataNotesInputDto
  notesPermanentlyUnavailable: EventsDataNotesPermanentlyUnavailableInputDto
  presentation: EventsDataPresentationInputDto
  presentationPermanentlyUnavailable: EventsDataPresentationPermanentlyUnavailableInputDto
  startDate: EventsDataStartDateInputDto
  startDateTimeZone: EventsDataStartDateTimeZoneInputDto
  status: EventsDataStatusInputDto
  tags: EventsDataTagsInputDto
  thumbnail: EventsDataThumbnailInputDto
  title: EventsDataTitleInputDto
  videoRecording: EventsDataVideoRecordingInputDto
  videoRecordingPermanentlyUnavailable: EventsDataVideoRecordingPermanentlyUnavailableInputDto
}

"""The structure of the Meeting Link field of the Events content type."""
type EventsDataMeetingLinkDto {
  iv: String
}

"""The structure of the Meeting Link field of the Events content input type."""
input EventsDataMeetingLinkInputDto {
  iv: String
}

"""The structure of the Additional Meeting Materials nested schema."""
type EventsDataMeetingMaterialsChildDto {
  title: String
  url: String
}

"""The structure of the Additional Meeting Materials nested schema."""
input EventsDataMeetingMaterialsChildInputDto {
  title: String
  url: String
}

"""The structure of the Additional Meeting Materials field of the Events content type."""
type EventsDataMeetingMaterialsDto {
  """If permanently unavailable box is ticked, any content you put here will be ignored."""
  iv: [EventsDataMeetingMaterialsChildDto!]
}

"""The structure of the Additional Meeting Materials field of the Events content input type."""
input EventsDataMeetingMaterialsInputDto {
  """If permanently unavailable box is ticked, any content you put here will be ignored."""
  iv: [EventsDataMeetingMaterialsChildInputDto!]
}

"""The structure of the Mark Additional Meeting Materials as permanently unavailable field of the Events content type."""
type EventsDataMeetingMaterialsPermanentlyUnavailableDto {
  """This box is automatically ticked if no output is added after 14 days from the event's end date."""
  iv: Boolean
}

"""The structure of the Mark Additional Meeting Materials as permanently unavailable field of the Events content input type."""
input EventsDataMeetingMaterialsPermanentlyUnavailableInputDto {
  """This box is automatically ticked if no output is added after 14 days from the event's end date."""
  iv: Boolean
}

"""The structure of the Notes field of the Events content type."""
type EventsDataNotesDto {
  """If permanently unavailable box is ticked, any content you put here will be ignored."""
  iv: String
}

"""The structure of the Notes field of the Events content input type."""
input EventsDataNotesInputDto {
  """If permanently unavailable box is ticked, any content you put here will be ignored."""
  iv: String
}

"""The structure of the Mark Notes as permanently unavailable field of the Events content type."""
type EventsDataNotesPermanentlyUnavailableDto {
  """This box is automatically ticked if no output is added after 14 days from the event's end date."""
  iv: Boolean
}

"""The structure of the Mark Notes as permanently unavailable field of the Events content input type."""
input EventsDataNotesPermanentlyUnavailableInputDto {
  """This box is automatically ticked if no output is added after 14 days from the event's end date."""
  iv: Boolean
}

"""The structure of the Presentation field of the Events content type."""
type EventsDataPresentationDto {
  """If permanently unavailable box is ticked, any content you put here will be ignored."""
  iv: String
}

"""The structure of the Presentation field of the Events content input type."""
input EventsDataPresentationInputDto {
  """If permanently unavailable box is ticked, any content you put here will be ignored."""
  iv: String
}

"""The structure of the Mark Presentation as permanently unavailable field of the Events content type."""
type EventsDataPresentationPermanentlyUnavailableDto {
  """This box is automatically ticked if no output is added after 14 days from the event's end date."""
  iv: Boolean
}

"""The structure of the Mark Presentation as permanently unavailable field of the Events content input type."""
input EventsDataPresentationPermanentlyUnavailableInputDto {
  """This box is automatically ticked if no output is added after 14 days from the event's end date."""
  iv: Boolean
}

"""The structure of the Start Date field of the Events content type."""
type EventsDataStartDateDto {
  iv: Instant
}

"""The structure of the Start Date field of the Events content input type."""
input EventsDataStartDateInputDto {
  iv: Instant
}

"""The structure of the Start Date Time Zone field of the Events content type."""
type EventsDataStartDateTimeZoneDto {
  iv: String
}

"""The structure of the Start Date Time Zone field of the Events content input type."""
input EventsDataStartDateTimeZoneInputDto {
  iv: String
}

"""The structure of the Status field of the Events content type."""
type EventsDataStatusDto {
  iv: String
}

"""The structure of the Status field of the Events content input type."""
input EventsDataStatusInputDto {
  iv: String
}

"""The structure of the Tags field of the Events content type."""
type EventsDataTagsDto {
  iv: [String!]
}

"""The structure of the Tags field of the Events content input type."""
input EventsDataTagsInputDto {
  iv: [String!]
}

"""The structure of the Thumbnail field of the Events content type."""
type EventsDataThumbnailDto {
  iv: [Asset!]
}

"""The structure of the Thumbnail field of the Events content input type."""
input EventsDataThumbnailInputDto {
  iv: [String!]
}

"""The structure of the Title field of the Events content type."""
type EventsDataTitleDto {
  iv: String
}

"""The structure of the Title field of the Events content input type."""
input EventsDataTitleInputDto {
  iv: String
}

"""The structure of the Video Recording field of the Events content type."""
type EventsDataVideoRecordingDto {
  """If permanently unavailable box is ticked, any content you put here will be ignored."""
  iv: String
}

"""The structure of the Video Recording field of the Events content input type."""
input EventsDataVideoRecordingInputDto {
  """If permanently unavailable box is ticked, any content you put here will be ignored."""
  iv: String
}

"""The structure of the Mark Video Recording as permanently unavailable field of the Events content type."""
type EventsDataVideoRecordingPermanentlyUnavailableDto {
  """This box is automatically ticked if no output is added after 14 days from the event's end date."""
  iv: Boolean
}

"""The structure of the Mark Video Recording as permanently unavailable field of the Events content input type."""
input EventsDataVideoRecordingPermanentlyUnavailableInputDto {
  """This box is automatically ticked if no output is added after 14 days from the event's end date."""
  iv: Boolean
}

"""The structure of the flat Events data type."""
type EventsFlatDataDto {
  calendar: [Calendars!]
  description: String
  endDate: Instant
  endDateTimeZone: String
  eventLink: String
  googleId: String
  """Hidden events will NOT show on the Hub. (Note: any event cancelled on GCal will be hidden by default. To show a cancelled event on the Hub, you have to manually un-hide the event here)"""
  hidden: Boolean
  meetingLink: String
  """If permanently unavailable box is ticked, any content you put here will be ignored."""
  meetingMaterials: [EventsDataMeetingMaterialsChildDto!]
  """This box is automatically ticked if no output is added after 14 days from the event's end date."""
  meetingMaterialsPermanentlyUnavailable: Boolean
  """If permanently unavailable box is ticked, any content you put here will be ignored."""
  notes: String
  """This box is automatically ticked if no output is added after 14 days from the event's end date."""
  notesPermanentlyUnavailable: Boolean
  """If permanently unavailable box is ticked, any content you put here will be ignored."""
  presentation: String
  """This box is automatically ticked if no output is added after 14 days from the event's end date."""
  presentationPermanentlyUnavailable: Boolean
  startDate: Instant
  startDateTimeZone: String
  status: String
  tags: [String!]
  thumbnail: [Asset!]
  title: String
  """If permanently unavailable box is ticked, any content you put here will be ignored."""
  videoRecording: String
  """This box is automatically ticked if no output is added after 14 days from the event's end date."""
  videoRecordingPermanentlyUnavailable: Boolean
}

"""List of Events items and total count."""
type EventsResultDto {
  """The contents."""
  items: [Events!]
  """The total count of  contents."""
  total: Int!
}

"""The structure of a External authors content type."""
type ExternalAuthors implements Content {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The user who created the object."""
  createdByUser: User!
  """The data of the content."""
  data: ExternalAuthorsDataDto!
  """The flat data of the content."""
  flatData: ExternalAuthorsFlatDataDto!
  """The ID of the object."""
  id: String!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The user who updated the object the last time."""
  lastModifiedByUser: User!
  """The new status of the content."""
  newStatus: String
  """The status color of the content."""
  newStatusColor: String
  """Query Research Outputs content items."""
  referencingResearchOutputsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [ResearchOutputs!]
  """Query Research Outputs content items with total count."""
  referencingResearchOutputsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): ResearchOutputsResultDto
  """The status of the content."""
  status: String!
  """The status color of the content."""
  statusColor: String!
  """The URL to the content."""
  url: String!
  """The version of the object (usually GUID)."""
  version: Int!
}

"""The structure of the External authors data type."""
type ExternalAuthorsDataDto {
  name: ExternalAuthorsDataNameDto
  orcid: ExternalAuthorsDataOrcidDto
}

"""The structure of the External authors data input type."""
input ExternalAuthorsDataInputDto {
  name: ExternalAuthorsDataNameInputDto
  orcid: ExternalAuthorsDataOrcidInputDto
}

"""The structure of the Name field of the External authors content type."""
type ExternalAuthorsDataNameDto {
  iv: String
}

"""The structure of the Name field of the External authors content input type."""
input ExternalAuthorsDataNameInputDto {
  iv: String
}

"""The structure of the ORCID field of the External authors content type."""
type ExternalAuthorsDataOrcidDto {
  """ORCIDs cannot be repeated on the Hub"""
  iv: String
}

"""The structure of the ORCID field of the External authors content input type."""
input ExternalAuthorsDataOrcidInputDto {
  """ORCIDs cannot be repeated on the Hub"""
  iv: String
}

"""The structure of the flat External authors data type."""
type ExternalAuthorsFlatDataDto {
  name: String
  """ORCIDs cannot be repeated on the Hub"""
  orcid: String
}

"""List of External authors items and total count."""
type ExternalAuthorsResultDto {
  """The contents."""
  items: [ExternalAuthors!]
  """The total count of  contents."""
  total: Int!
}

"""The structure of a Groups content type."""
type Groups implements Content {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The user who created the object."""
  createdByUser: User!
  """The data of the content."""
  data: GroupsDataDto!
  """The flat data of the content."""
  flatData: GroupsFlatDataDto!
  """The ID of the object."""
  id: String!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The user who updated the object the last time."""
  lastModifiedByUser: User!
  """The new status of the content."""
  newStatus: String
  """The status color of the content."""
  newStatusColor: String
  """The status of the content."""
  status: String!
  """The status color of the content."""
  statusColor: String!
  """The URL to the content."""
  url: String!
  """The version of the object (usually GUID)."""
  version: Int!
}

"""The structure of the Calendars field of the Groups content type."""
type GroupsDataCalendarsDto {
  iv: [Calendars!]
}

"""The structure of the Calendars field of the Groups content input type."""
input GroupsDataCalendarsInputDto {
  iv: [String!]
}

"""The structure of the Description field of the Groups content type."""
type GroupsDataDescriptionDto {
  iv: String
}

"""The structure of the Description field of the Groups content input type."""
input GroupsDataDescriptionInputDto {
  iv: String
}

"""The structure of the Groups data type."""
type GroupsDataDto {
  calendars: GroupsDataCalendarsDto
  description: GroupsDataDescriptionDto
  leaders: GroupsDataLeadersDto
  name: GroupsDataNameDto
  tags: GroupsDataTagsDto
  teams: GroupsDataTeamsDto
  thumbnail: GroupsDataThumbnailDto
  tools: GroupsDataToolsDto
}

"""The structure of the Groups data input type."""
input GroupsDataInputDto {
  calendars: GroupsDataCalendarsInputDto
  description: GroupsDataDescriptionInputDto
  leaders: GroupsDataLeadersInputDto
  name: GroupsDataNameInputDto
  tags: GroupsDataTagsInputDto
  teams: GroupsDataTeamsInputDto
  thumbnail: GroupsDataThumbnailInputDto
  tools: GroupsDataToolsInputDto
}

"""The structure of the Leaders nested schema."""
type GroupsDataLeadersChildDto {
  role: String
  user: [Users!]
}

"""The structure of the Leaders nested schema."""
input GroupsDataLeadersChildInputDto {
  role: String
  user: [String!]
}

"""The structure of the Leaders field of the Groups content type."""
type GroupsDataLeadersDto {
  iv: [GroupsDataLeadersChildDto!]
}

"""The structure of the Leaders field of the Groups content input type."""
input GroupsDataLeadersInputDto {
  iv: [GroupsDataLeadersChildInputDto!]
}

"""The structure of the Name field of the Groups content type."""
type GroupsDataNameDto {
  iv: String
}

"""The structure of the Name field of the Groups content input type."""
input GroupsDataNameInputDto {
  iv: String
}

"""The structure of the Expertise (Tags) field of the Groups content type."""
type GroupsDataTagsDto {
  iv: [String!]
}

"""The structure of the Expertise (Tags) field of the Groups content input type."""
input GroupsDataTagsInputDto {
  iv: [String!]
}

"""The structure of the Teams field of the Groups content type."""
type GroupsDataTeamsDto {
  iv: [Teams!]
}

"""The structure of the Teams field of the Groups content input type."""
input GroupsDataTeamsInputDto {
  iv: [String!]
}

"""The structure of the Thumbnail field of the Groups content type."""
type GroupsDataThumbnailDto {
  iv: [Asset!]
}

"""The structure of the Thumbnail field of the Groups content input type."""
input GroupsDataThumbnailInputDto {
  iv: [String!]
}

"""The structure of the External Tools nested schema."""
type GroupsDataToolsChildDto {
  googleDrive: String
  slack: String
}

"""The structure of the External Tools nested schema."""
input GroupsDataToolsChildInputDto {
  googleDrive: String
  slack: String
}

"""The structure of the External Tools field of the Groups content type."""
type GroupsDataToolsDto {
  iv: [GroupsDataToolsChildDto!]
}

"""The structure of the External Tools field of the Groups content input type."""
input GroupsDataToolsInputDto {
  iv: [GroupsDataToolsChildInputDto!]
}

"""The structure of the flat Groups data type."""
type GroupsFlatDataDto {
  calendars: [Calendars!]
  description: String
  leaders: [GroupsDataLeadersChildDto!]
  name: String
  tags: [String!]
  teams: [Teams!]
  thumbnail: [Asset!]
  tools: [GroupsDataToolsChildDto!]
}

"""List of Groups items and total count."""
type GroupsResultDto {
  """The contents."""
  items: [Groups!]
  """The total count of  contents."""
  total: Int!
}

"""The `DateTime` scalar type represents a date and time. `DateTime` expects timestamps to be formatted in accordance with the [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) standard."""
scalar Instant

"""Unstructured Json object"""
scalar JsonScalar

"""The structure of a Labs content type."""
type Labs implements Content {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The user who created the object."""
  createdByUser: User!
  """The data of the content."""
  data: LabsDataDto!
  """The flat data of the content."""
  flatData: LabsFlatDataDto!
  """The ID of the object."""
  id: String!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The user who updated the object the last time."""
  lastModifiedByUser: User!
  """The new status of the content."""
  newStatus: String
  """The status color of the content."""
  newStatusColor: String
  """Query Research Outputs content items."""
  referencingResearchOutputsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [ResearchOutputs!]
  """Query Research Outputs content items with total count."""
  referencingResearchOutputsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): ResearchOutputsResultDto
  """Query Users content items."""
  referencingUsersContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Users!]
  """Query Users content items with total count."""
  referencingUsersContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): UsersResultDto
  """The status of the content."""
  status: String!
  """The status color of the content."""
  statusColor: String!
  """The URL to the content."""
  url: String!
  """The version of the object (usually GUID)."""
  version: Int!
}

"""The structure of the Labs data type."""
type LabsDataDto {
  name: LabsDataNameDto
}

"""The structure of the Labs data input type."""
input LabsDataInputDto {
  name: LabsDataNameInputDto
}

"""The structure of the Name field of the Labs content type."""
type LabsDataNameDto {
  iv: String
}

"""The structure of the Name field of the Labs content input type."""
input LabsDataNameInputDto {
  iv: String
}

"""The structure of the flat Labs data type."""
type LabsFlatDataDto {
  name: String
}

"""List of Labs items and total count."""
type LabsResultDto {
  """The contents."""
  items: [Labs!]
  """The total count of  contents."""
  total: Int!
}

scalar Long

"""The structure of a Migrations content type."""
type Migrations implements Content {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The user who created the object."""
  createdByUser: User!
  """The data of the content."""
  data: MigrationsDataDto!
  """The flat data of the content."""
  flatData: MigrationsFlatDataDto!
  """The ID of the object."""
  id: String!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The user who updated the object the last time."""
  lastModifiedByUser: User!
  """The new status of the content."""
  newStatus: String
  """The status color of the content."""
  newStatusColor: String
  """The status of the content."""
  status: String!
  """The status color of the content."""
  statusColor: String!
  """The URL to the content."""
  url: String!
  """The version of the object (usually GUID)."""
  version: Int!
}

"""The structure of the Migrations data type."""
type MigrationsDataDto {
  name: MigrationsDataNameDto
}

"""The structure of the Migrations data input type."""
input MigrationsDataInputDto {
  name: MigrationsDataNameInputDto
}

"""The structure of the Name field of the Migrations content type."""
type MigrationsDataNameDto {
  iv: String
}

"""The structure of the Name field of the Migrations content input type."""
input MigrationsDataNameInputDto {
  iv: String
}

"""The structure of the flat Migrations data type."""
type MigrationsFlatDataDto {
  name: String
}

"""List of Migrations items and total count."""
type MigrationsResultDto {
  """The contents."""
  items: [Migrations!]
  """The total count of  contents."""
  total: Int!
}

"""The structure of a News content type."""
type NewsAndEvents implements Content {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The user who created the object."""
  createdByUser: User!
  """The data of the content."""
  data: NewsAndEventsDataDto!
  """The flat data of the content."""
  flatData: NewsAndEventsFlatDataDto!
  """The ID of the object."""
  id: String!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The user who updated the object the last time."""
  lastModifiedByUser: User!
  """The new status of the content."""
  newStatus: String
  """The status color of the content."""
  newStatusColor: String
  """Query Dashboard content items."""
  referencingDashboardContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Dashboard!]
  """Query Dashboard content items with total count."""
  referencingDashboardContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): DashboardResultDto
  """Query Discover ASAP content items."""
  referencingDiscoverContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Discover!]
  """Query Discover ASAP content items with total count."""
  referencingDiscoverContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): DiscoverResultDto
  """The status of the content."""
  status: String!
  """The status color of the content."""
  statusColor: String!
  """The URL to the content."""
  url: String!
  """The version of the object (usually GUID)."""
  version: Int!
}

"""The structure of the Event Date field of the News content type."""
type NewsAndEventsDataDateDto {
  """Property only used on Event type items"""
  iv: Instant
}

"""The structure of the Event Date field of the News content input type."""
input NewsAndEventsDataDateInputDto {
  """Property only used on Event type items"""
  iv: Instant
}

"""The structure of the News data type."""
type NewsAndEventsDataDto {
  date: NewsAndEventsDataDateDto
  link: NewsAndEventsDataLinkDto
  linkText: NewsAndEventsDataLinkTextDto
  shortText: NewsAndEventsDataShortTextDto
  text: NewsAndEventsDataTextDto
  thumbnail: NewsAndEventsDataThumbnailDto
  title: NewsAndEventsDataTitleDto
  type: NewsAndEventsDataTypeDto
}

"""The structure of the News data input type."""
input NewsAndEventsDataInputDto {
  date: NewsAndEventsDataDateInputDto
  link: NewsAndEventsDataLinkInputDto
  linkText: NewsAndEventsDataLinkTextInputDto
  shortText: NewsAndEventsDataShortTextInputDto
  text: NewsAndEventsDataTextInputDto
  thumbnail: NewsAndEventsDataThumbnailInputDto
  title: NewsAndEventsDataTitleInputDto
  type: NewsAndEventsDataTypeInputDto
}

"""The structure of the External Link field of the News content type."""
type NewsAndEventsDataLinkDto {
  iv: String
}

"""The structure of the External Link field of the News content input type."""
input NewsAndEventsDataLinkInputDto {
  iv: String
}

"""The structure of the External Link Text field of the News content type."""
type NewsAndEventsDataLinkTextDto {
  """
  Leave this empty to show "Open External Link"
  """
  iv: String
}

"""The structure of the External Link Text field of the News content input type."""
input NewsAndEventsDataLinkTextInputDto {
  """
  Leave this empty to show "Open External Link"
  """
  iv: String
}

"""The structure of the Short Text field of the News content type."""
type NewsAndEventsDataShortTextDto {
  """The text visible on the card version of News and Events"""
  iv: String
}

"""The structure of the Short Text field of the News content input type."""
input NewsAndEventsDataShortTextInputDto {
  """The text visible on the card version of News and Events"""
  iv: String
}

"""The structure of the Text field of the News content type."""
type NewsAndEventsDataTextDto {
  iv: String
}

"""The structure of the Text field of the News content input type."""
input NewsAndEventsDataTextInputDto {
  iv: String
}

"""The structure of the Thumbnail field of the News content type."""
type NewsAndEventsDataThumbnailDto {
  iv: [Asset!]
}

"""The structure of the Thumbnail field of the News content input type."""
input NewsAndEventsDataThumbnailInputDto {
  iv: [String!]
}

"""The structure of the Title field of the News content type."""
type NewsAndEventsDataTitleDto {
  iv: String
}

"""The structure of the Title field of the News content input type."""
input NewsAndEventsDataTitleInputDto {
  iv: String
}

"""The structure of the Type field of the News content type."""
type NewsAndEventsDataTypeDto {
  iv: String
}

"""The structure of the Type field of the News content input type."""
input NewsAndEventsDataTypeInputDto {
  iv: String
}

"""The structure of the flat News data type."""
type NewsAndEventsFlatDataDto {
  """Property only used on Event type items"""
  date: Instant
  link: String
  """
  Leave this empty to show "Open External Link"
  """
  linkText: String
  """The text visible on the card version of News and Events"""
  shortText: String
  text: String
  thumbnail: [Asset!]
  title: String
  type: String
}

"""List of News items and total count."""
type NewsAndEventsResultDto {
  """The contents."""
  items: [NewsAndEvents!]
  """The total count of  contents."""
  total: Int!
}

"""The structure of a Pages content type."""
type Pages implements Content {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The user who created the object."""
  createdByUser: User!
  """The data of the content."""
  data: PagesDataDto!
  """The flat data of the content."""
  flatData: PagesFlatDataDto!
  """The ID of the object."""
  id: String!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The user who updated the object the last time."""
  lastModifiedByUser: User!
  """The new status of the content."""
  newStatus: String
  """The status color of the content."""
  newStatusColor: String
  """Query Dashboard content items."""
  referencingDashboardContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Dashboard!]
  """Query Dashboard content items with total count."""
  referencingDashboardContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): DashboardResultDto
  """Query Discover ASAP content items."""
  referencingDiscoverContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Discover!]
  """Query Discover ASAP content items with total count."""
  referencingDiscoverContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): DiscoverResultDto
  """The status of the content."""
  status: String!
  """The status color of the content."""
  statusColor: String!
  """The URL to the content."""
  url: String!
  """The version of the object (usually GUID)."""
  version: Int!
}

"""The structure of the Pages data type."""
type PagesDataDto {
  link: PagesDataLinkDto
  linkText: PagesDataLinkTextDto
  path: PagesDataPathDto
  shortText: PagesDataShortTextDto
  text: PagesDataTextDto
  title: PagesDataTitleDto
}

"""The structure of the Pages data input type."""
input PagesDataInputDto {
  link: PagesDataLinkInputDto
  linkText: PagesDataLinkTextInputDto
  path: PagesDataPathInputDto
  shortText: PagesDataShortTextInputDto
  text: PagesDataTextInputDto
  title: PagesDataTitleInputDto
}

"""The structure of the External Link field of the Pages content type."""
type PagesDataLinkDto {
  iv: String
}

"""The structure of the External Link field of the Pages content input type."""
input PagesDataLinkInputDto {
  iv: String
}

"""The structure of the External Link Text field of the Pages content type."""
type PagesDataLinkTextDto {
  iv: String
}

"""The structure of the External Link Text field of the Pages content input type."""
input PagesDataLinkTextInputDto {
  iv: String
}

"""The structure of the Path field of the Pages content type."""
type PagesDataPathDto {
  iv: String
}

"""The structure of the Path field of the Pages content input type."""
input PagesDataPathInputDto {
  iv: String
}

"""The structure of the Short Text field of the Pages content type."""
type PagesDataShortTextDto {
  iv: String
}

"""The structure of the Short Text field of the Pages content input type."""
input PagesDataShortTextInputDto {
  iv: String
}

"""The structure of the Text field of the Pages content type."""
type PagesDataTextDto {
  iv: String
}

"""The structure of the Text field of the Pages content input type."""
input PagesDataTextInputDto {
  iv: String
}

"""The structure of the Title field of the Pages content type."""
type PagesDataTitleDto {
  iv: String
}

"""The structure of the Title field of the Pages content input type."""
input PagesDataTitleInputDto {
  iv: String
}

"""The structure of the flat Pages data type."""
type PagesFlatDataDto {
  link: String
  linkText: String
  path: String
  shortText: String
  text: String
  title: String
}

"""List of Pages items and total count."""
type PagesResultDto {
  """The contents."""
  items: [Pages!]
  """The total count of  contents."""
  total: Int!
}

"""The structure of a Research Outputs content type."""
type ResearchOutputs implements Content {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The user who created the object."""
  createdByUser: User!
  """The data of the content."""
  data: ResearchOutputsDataDto!
  """The flat data of the content."""
  flatData: ResearchOutputsFlatDataDto!
  """The ID of the object."""
  id: String!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The user who updated the object the last time."""
  lastModifiedByUser: User!
  """The new status of the content."""
  newStatus: String
  """The status color of the content."""
  newStatusColor: String
  """Query Teams content items."""
  referencingTeamsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Teams!]
  """Query Teams content items with total count."""
  referencingTeamsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): TeamsResultDto
  """The status of the content."""
  status: String!
  """The status color of the content."""
  statusColor: String!
  """The URL to the content."""
  url: String!
  """The version of the object (usually GUID)."""
  version: Int!
}

"""The structure of the Access Instructions field of the Research Outputs content type."""
type ResearchOutputsDataAccessInstructionsDto {
  """The Hub will only show text or hyperlinks. Other formatting will be ignored (e.g. bold, color, size)"""
  iv: String
}

"""The structure of the Access Instructions field of the Research Outputs content input type."""
input ResearchOutputsDataAccessInstructionsInputDto {
  """The Hub will only show text or hyperlinks. Other formatting will be ignored (e.g. bold, color, size)"""
  iv: String
}

"""The structure of the Identifier (Accession #) field of the Research Outputs content type."""
type ResearchOutputsDataAccessionDto {
  """This must start with a letter"""
  iv: String
}

"""The structure of the Identifier (Accession #) field of the Research Outputs content input type."""
input ResearchOutputsDataAccessionInputDto {
  """This must start with a letter"""
  iv: String
}

"""The structure of the Added Date field of the Research Outputs content type."""
type ResearchOutputsDataAddedDateDto {
  """Date output was shared with ASAP Network (different from publication date)"""
  iv: Instant
}

"""The structure of the Added Date field of the Research Outputs content input type."""
input ResearchOutputsDataAddedDateInputDto {
  """Date output was shared with ASAP Network (different from publication date)"""
  iv: Instant
}

"""The structure of the Admin notes field of the Research Outputs content type."""
type ResearchOutputsDataAdminNotesDto {
  """This is ASAP internal content and it's not being shown on the Hub"""
  iv: String
}

"""The structure of the Admin notes field of the Research Outputs content input type."""
input ResearchOutputsDataAdminNotesInputDto {
  """This is ASAP internal content and it's not being shown on the Hub"""
  iv: String
}

"""The structure of the ASAP Funded field of the Research Outputs content type."""
type ResearchOutputsDataAsapFundedDto {
  """"Not sure" will not be shown on the Hub"""
  iv: String
}

"""The structure of the ASAP Funded field of the Research Outputs content input type."""
input ResearchOutputsDataAsapFundedInputDto {
  """"Not sure" will not be shown on the Hub"""
  iv: String
}

"""The structure of the Authors field of the Research Outputs content type."""
type ResearchOutputsDataAuthorsDto {
  iv: [ResearchOutputsDataAuthorsUnionDto!]
}

"""The structure of the Authors field of the Research Outputs content input type."""
input ResearchOutputsDataAuthorsInputDto {
  iv: [String!]
}

union ResearchOutputsDataAuthorsUnionDto = ExternalAuthors | Users

"""The structure of the Description field of the Research Outputs content type."""
type ResearchOutputsDataDescriptionDto {
  """The Hub will only show text or hyperlinks. Other formatting will be ignored (e.g. bold, color, size)"""
  iv: String
}

"""The structure of the Description field of the Research Outputs content input type."""
input ResearchOutputsDataDescriptionInputDto {
  """The Hub will only show text or hyperlinks. Other formatting will be ignored (e.g. bold, color, size)"""
  iv: String
}

"""The structure of the Identifier (DOI) field of the Research Outputs content type."""
type ResearchOutputsDataDoiDto {
  """DOIs must start with a number and cannot be a URL"""
  iv: String
}

"""The structure of the Identifier (DOI) field of the Research Outputs content input type."""
input ResearchOutputsDataDoiInputDto {
  """DOIs must start with a number and cannot be a URL"""
  iv: String
}

"""The structure of the Research Outputs data type."""
type ResearchOutputsDataDto {
  accessInstructions: ResearchOutputsDataAccessInstructionsDto
  accession: ResearchOutputsDataAccessionDto
  addedDate: ResearchOutputsDataAddedDateDto
  adminNotes: ResearchOutputsDataAdminNotesDto
  asapFunded: ResearchOutputsDataAsapFundedDto
  authors: ResearchOutputsDataAuthorsDto
  description: ResearchOutputsDataDescriptionDto
  doi: ResearchOutputsDataDoiDto
  labCatalogNumber: ResearchOutputsDataLabCatalogNumberDto
  labs: ResearchOutputsDataLabsDto
  lastUpdatedPartial: ResearchOutputsDataLastUpdatedPartialDto
  link: ResearchOutputsDataLinkDto
  publishDate: ResearchOutputsDataPublishDateDto
  rrid: ResearchOutputsDataRridDto
  sharingStatus: ResearchOutputsDataSharingStatusDto
  subtype: ResearchOutputsDataSubtypeDto
  tags: ResearchOutputsDataTagsDto
  title: ResearchOutputsDataTitleDto
  type: ResearchOutputsDataTypeDto
  usedInAPublication: ResearchOutputsDataUsedInAPublicationDto
}

"""The structure of the Research Outputs data input type."""
input ResearchOutputsDataInputDto {
  accessInstructions: ResearchOutputsDataAccessInstructionsInputDto
  accession: ResearchOutputsDataAccessionInputDto
  addedDate: ResearchOutputsDataAddedDateInputDto
  adminNotes: ResearchOutputsDataAdminNotesInputDto
  asapFunded: ResearchOutputsDataAsapFundedInputDto
  authors: ResearchOutputsDataAuthorsInputDto
  description: ResearchOutputsDataDescriptionInputDto
  doi: ResearchOutputsDataDoiInputDto
  labCatalogNumber: ResearchOutputsDataLabCatalogNumberInputDto
  labs: ResearchOutputsDataLabsInputDto
  lastUpdatedPartial: ResearchOutputsDataLastUpdatedPartialInputDto
  link: ResearchOutputsDataLinkInputDto
  publishDate: ResearchOutputsDataPublishDateInputDto
  rrid: ResearchOutputsDataRridInputDto
  sharingStatus: ResearchOutputsDataSharingStatusInputDto
  subtype: ResearchOutputsDataSubtypeInputDto
  tags: ResearchOutputsDataTagsInputDto
  title: ResearchOutputsDataTitleInputDto
  type: ResearchOutputsDataTypeInputDto
  usedInAPublication: ResearchOutputsDataUsedInAPublicationInputDto
}

"""The structure of the Lab Catalog Number field of the Research Outputs content type."""
type ResearchOutputsDataLabCatalogNumberDto {
  """
  If this is a hyperlink, please start with "http://" or "https://"
  """
  iv: String
}

"""The structure of the Lab Catalog Number field of the Research Outputs content input type."""
input ResearchOutputsDataLabCatalogNumberInputDto {
  """
  If this is a hyperlink, please start with "http://" or "https://"
  """
  iv: String
}

"""The structure of the Labs field of the Research Outputs content type."""
type ResearchOutputsDataLabsDto {
  iv: [Labs!]
}

"""The structure of the Labs field of the Research Outputs content input type."""
input ResearchOutputsDataLabsInputDto {
  iv: [String!]
}

"""The structure of the Last Updated (partial) field of the Research Outputs content type."""
type ResearchOutputsDataLastUpdatedPartialDto {
  """Does not include changes to Publish Date and Admin notes"""
  iv: Instant
}

"""The structure of the Last Updated (partial) field of the Research Outputs content input type."""
input ResearchOutputsDataLastUpdatedPartialInputDto {
  """Does not include changes to Publish Date and Admin notes"""
  iv: Instant
}

"""The structure of the External Link field of the Research Outputs content type."""
type ResearchOutputsDataLinkDto {
  iv: String
}

"""The structure of the External Link field of the Research Outputs content input type."""
input ResearchOutputsDataLinkInputDto {
  iv: String
}

"""The structure of the Publish Date field of the Research Outputs content type."""
type ResearchOutputsDataPublishDateDto {
  """Date of publishing (outside the Hub). Only applies to outputs that have been published."""
  iv: Instant
}

"""The structure of the Publish Date field of the Research Outputs content input type."""
input ResearchOutputsDataPublishDateInputDto {
  """Date of publishing (outside the Hub). Only applies to outputs that have been published."""
  iv: Instant
}

"""The structure of the Identifier (RRID) field of the Research Outputs content type."""
type ResearchOutputsDataRridDto {
  """
  This must start with "RRID:"
  """
  iv: String
}

"""The structure of the Identifier (RRID) field of the Research Outputs content input type."""
input ResearchOutputsDataRridInputDto {
  """
  This must start with "RRID:"
  """
  iv: String
}

"""The structure of the Sharing Status field of the Research Outputs content type."""
type ResearchOutputsDataSharingStatusDto {
  iv: String
}

"""The structure of the Sharing Status field of the Research Outputs content input type."""
input ResearchOutputsDataSharingStatusInputDto {
  iv: String
}

"""The structure of the Subtype field of the Research Outputs content type."""
type ResearchOutputsDataSubtypeDto {
  iv: String
}

"""The structure of the Subtype field of the Research Outputs content input type."""
input ResearchOutputsDataSubtypeInputDto {
  iv: String
}

"""The structure of the Tags field of the Research Outputs content type."""
type ResearchOutputsDataTagsDto {
  iv: [String!]
}

"""The structure of the Tags field of the Research Outputs content input type."""
input ResearchOutputsDataTagsInputDto {
  iv: [String!]
}

"""The structure of the Title field of the Research Outputs content type."""
type ResearchOutputsDataTitleDto {
  iv: String
}

"""The structure of the Title field of the Research Outputs content input type."""
input ResearchOutputsDataTitleInputDto {
  iv: String
}

"""The structure of the Type field of the Research Outputs content type."""
type ResearchOutputsDataTypeDto {
  iv: String
}

"""The structure of the Type field of the Research Outputs content input type."""
input ResearchOutputsDataTypeInputDto {
  iv: String
}

"""The structure of the Used in a Publication field of the Research Outputs content type."""
type ResearchOutputsDataUsedInAPublicationDto {
  """"Not sure" will not be shown on the Hub"""
  iv: String
}

"""The structure of the Used in a Publication field of the Research Outputs content input type."""
input ResearchOutputsDataUsedInAPublicationInputDto {
  """"Not sure" will not be shown on the Hub"""
  iv: String
}

"""The structure of the flat Research Outputs data type."""
type ResearchOutputsFlatDataDto {
  """The Hub will only show text or hyperlinks. Other formatting will be ignored (e.g. bold, color, size)"""
  accessInstructions: String
  """This must start with a letter"""
  accession: String
  """Date output was shared with ASAP Network (different from publication date)"""
  addedDate: Instant
  """This is ASAP internal content and it's not being shown on the Hub"""
  adminNotes: String
  """"Not sure" will not be shown on the Hub"""
  asapFunded: String
  authors: [ResearchOutputsDataAuthorsUnionDto!]
  """The Hub will only show text or hyperlinks. Other formatting will be ignored (e.g. bold, color, size)"""
  description: String
  """DOIs must start with a number and cannot be a URL"""
  doi: String
  """
  If this is a hyperlink, please start with "http://" or "https://"
  """
  labCatalogNumber: String
  labs: [Labs!]
  """Does not include changes to Publish Date and Admin notes"""
  lastUpdatedPartial: Instant
  link: String
  """Date of publishing (outside the Hub). Only applies to outputs that have been published."""
  publishDate: Instant
  """
  This must start with "RRID:"
  """
  rrid: String
  sharingStatus: String
  subtype: String
  tags: [String!]
  title: String
  type: String
  """"Not sure" will not be shown on the Hub"""
  usedInAPublication: String
}

"""List of Research Outputs items and total count."""
type ResearchOutputsResultDto {
  """The contents."""
  items: [ResearchOutputs!]
  """The total count of  contents."""
  total: Int!
}

"""The structure of a Teams content type."""
type Teams implements Content {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The user who created the object."""
  createdByUser: User!
  """The data of the content."""
  data: TeamsDataDto!
  """The flat data of the content."""
  flatData: TeamsFlatDataDto!
  """The ID of the object."""
  id: String!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The user who updated the object the last time."""
  lastModifiedByUser: User!
  """The new status of the content."""
  newStatus: String
  """The status color of the content."""
  newStatusColor: String
  """Query Groups content items."""
  referencingGroupsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Groups!]
  """Query Groups content items with total count."""
  referencingGroupsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): GroupsResultDto
  """Query Users content items."""
  referencingUsersContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Users!]
  """Query Users content items with total count."""
  referencingUsersContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): UsersResultDto
  """The status of the content."""
  status: String!
  """The status color of the content."""
  statusColor: String!
  """The URL to the content."""
  url: String!
  """The version of the object (usually GUID)."""
  version: Int!
}

"""The structure of the Application Number field of the Teams content type."""
type TeamsDataApplicationNumberDto {
  iv: String
}

"""The structure of the Application Number field of the Teams content input type."""
input TeamsDataApplicationNumberInputDto {
  iv: String
}

"""The structure of the Display Name field of the Teams content type."""
type TeamsDataDisplayNameDto {
  iv: String
}

"""The structure of the Display Name field of the Teams content input type."""
input TeamsDataDisplayNameInputDto {
  iv: String
}

"""The structure of the Teams data type."""
type TeamsDataDto {
  applicationNumber: TeamsDataApplicationNumberDto
  displayName: TeamsDataDisplayNameDto
  outputs: TeamsDataOutputsDto
  projectSummary: TeamsDataProjectSummaryDto
  projectTitle: TeamsDataProjectTitleDto
  proposal: TeamsDataProposalDto
  skills: TeamsDataSkillsDto
  tools: TeamsDataToolsDto
}

"""The structure of the Teams data input type."""
input TeamsDataInputDto {
  applicationNumber: TeamsDataApplicationNumberInputDto
  displayName: TeamsDataDisplayNameInputDto
  outputs: TeamsDataOutputsInputDto
  projectSummary: TeamsDataProjectSummaryInputDto
  projectTitle: TeamsDataProjectTitleInputDto
  proposal: TeamsDataProposalInputDto
  skills: TeamsDataSkillsInputDto
  tools: TeamsDataToolsInputDto
}

"""The structure of the Shared Research field of the Teams content type."""
type TeamsDataOutputsDto {
  iv: [ResearchOutputs!]
}

"""The structure of the Shared Research field of the Teams content input type."""
input TeamsDataOutputsInputDto {
  iv: [String!]
}

"""The structure of the Project Summary field of the Teams content type."""
type TeamsDataProjectSummaryDto {
  iv: String
}

"""The structure of the Project Summary field of the Teams content input type."""
input TeamsDataProjectSummaryInputDto {
  iv: String
}

"""The structure of the Project Title field of the Teams content type."""
type TeamsDataProjectTitleDto {
  iv: String
}

"""The structure of the Project Title field of the Teams content input type."""
input TeamsDataProjectTitleInputDto {
  iv: String
}

"""The structure of the Proposal field of the Teams content type."""
type TeamsDataProposalDto {
  iv: [ResearchOutputs!]
}

"""The structure of the Proposal field of the Teams content input type."""
input TeamsDataProposalInputDto {
  iv: [String!]
}

"""The structure of the Expertise and Resources field of the Teams content type."""
type TeamsDataSkillsDto {
  iv: [String!]
}

"""The structure of the Expertise and Resources field of the Teams content input type."""
input TeamsDataSkillsInputDto {
  iv: [String!]
}

"""The structure of the External Tools nested schema."""
type TeamsDataToolsChildDto {
  description: String
  name: String
  url: String
}

"""The structure of the External Tools nested schema."""
input TeamsDataToolsChildInputDto {
  description: String
  name: String
  url: String
}

"""The structure of the External Tools field of the Teams content type."""
type TeamsDataToolsDto {
  iv: [TeamsDataToolsChildDto!]
}

"""The structure of the External Tools field of the Teams content input type."""
input TeamsDataToolsInputDto {
  iv: [TeamsDataToolsChildInputDto!]
}

"""The structure of the flat Teams data type."""
type TeamsFlatDataDto {
  applicationNumber: String
  displayName: String
  outputs: [ResearchOutputs!]
  projectSummary: String
  projectTitle: String
  proposal: [ResearchOutputs!]
  skills: [String!]
  tools: [TeamsDataToolsChildDto!]
}

"""List of Teams items and total count."""
type TeamsResultDto {
  """The contents."""
  items: [Teams!]
  """The total count of  contents."""
  total: Int!
}

"""A user that created or modified a content or asset."""
type User {
  """The display name of the user."""
  displayName: String
  """The email address of the current user."""
  email: String
  """The ID of the user."""
  id: String!
}

"""The structure of a Users content type."""
type Users implements Content {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The user who created the object."""
  createdByUser: User!
  """The data of the content."""
  data: UsersDataDto!
  """The flat data of the content."""
  flatData: UsersFlatDataDto!
  """The ID of the object."""
  id: String!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The user who updated the object the last time."""
  lastModifiedByUser: User!
  """The new status of the content."""
  newStatus: String
  """The status color of the content."""
  newStatusColor: String
  """Query Discover ASAP content items."""
  referencingDiscoverContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Discover!]
  """Query Discover ASAP content items with total count."""
  referencingDiscoverContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): DiscoverResultDto
  """Query Groups content items."""
  referencingGroupsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Groups!]
  """Query Groups content items with total count."""
  referencingGroupsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): GroupsResultDto
  """Query Research Outputs content items."""
  referencingResearchOutputsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [ResearchOutputs!]
  """Query Research Outputs content items with total count."""
  referencingResearchOutputsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): ResearchOutputsResultDto
  """The status of the content."""
  status: String!
  """The status color of the content."""
  statusColor: String!
  """The URL to the content."""
  url: String!
  """The version of the object (usually GUID)."""
  version: Int!
}

"""The structure of the Admin Notes field of the Users content type."""
type UsersDataAdminNotesDto {
  iv: String
}

"""The structure of the Admin Notes field of the Users content input type."""
input UsersDataAdminNotesInputDto {
  iv: String
}

"""The structure of the Avatar field of the Users content type."""
type UsersDataAvatarDto {
  iv: [Asset!]
}

"""The structure of the Avatar field of the Users content input type."""
input UsersDataAvatarInputDto {
  iv: [String!]
}

"""The structure of the Biography field of the Users content type."""
type UsersDataBiographyDto {
  iv: String
}

"""The structure of the Biography field of the Users content input type."""
input UsersDataBiographyInputDto {
  iv: String
}

"""The structure of the City field of the Users content type."""
type UsersDataCityDto {
  iv: String
}

"""The structure of the City field of the Users content input type."""
input UsersDataCityInputDto {
  iv: String
}

"""The structure of the Connections nested schema."""
type UsersDataConnectionsChildDto {
  code: String
}

"""The structure of the Connections nested schema."""
input UsersDataConnectionsChildInputDto {
  code: String
}

"""The structure of the Connections field of the Users content type."""
type UsersDataConnectionsDto {
  iv: [UsersDataConnectionsChildDto!]
}

"""The structure of the Connections field of the Users content input type."""
input UsersDataConnectionsInputDto {
  iv: [UsersDataConnectionsChildInputDto!]
}

"""The structure of the Correspondence Email field of the Users content type."""
type UsersDataContactEmailDto {
  iv: String
}

"""The structure of the Correspondence Email field of the Users content input type."""
input UsersDataContactEmailInputDto {
  iv: String
}

"""The structure of the Country field of the Users content type."""
type UsersDataCountryDto {
  iv: String
}

"""The structure of the Country field of the Users content input type."""
input UsersDataCountryInputDto {
  iv: String
}

"""The structure of the Degree field of the Users content type."""
type UsersDataDegreeDto {
  iv: String
}

"""The structure of the Degree field of the Users content input type."""
input UsersDataDegreeInputDto {
  iv: String
}

"""The structure of the Users data type."""
type UsersDataDto {
  adminNotes: UsersDataAdminNotesDto
  avatar: UsersDataAvatarDto
  biography: UsersDataBiographyDto
  city: UsersDataCityDto
  connections: UsersDataConnectionsDto
  contactEmail: UsersDataContactEmailDto
  country: UsersDataCountryDto
  degree: UsersDataDegreeDto
  email: UsersDataEmailDto
  firstName: UsersDataFirstNameDto
  institution: UsersDataInstitutionDto
  jobTitle: UsersDataJobTitleDto
  labs: UsersDataLabsDto
  lastModifiedDate: UsersDataLastModifiedDateDto
  lastName: UsersDataLastNameDto
  onboarded: UsersDataOnboardedDto
  orcid: UsersDataOrcidDto
  orcidLastModifiedDate: UsersDataOrcidLastModifiedDateDto
  orcidLastSyncDate: UsersDataOrcidLastSyncDateDto
  orcidWorks: UsersDataOrcidWorksDto
  questions: UsersDataQuestionsDto
  reachOut: UsersDataReachOutDto
  responsibilities: UsersDataResponsibilitiesDto
  role: UsersDataRoleDto
  skills: UsersDataSkillsDto
  skillsDescription: UsersDataSkillsDescriptionDto
  social: UsersDataSocialDto
  teams: UsersDataTeamsDto
}

"""The structure of the Email field of the Users content type."""
type UsersDataEmailDto {
  iv: String
}

"""The structure of the Email field of the Users content input type."""
input UsersDataEmailInputDto {
  iv: String
}

"""The structure of the First Name field of the Users content type."""
type UsersDataFirstNameDto {
  iv: String
}

"""The structure of the First Name field of the Users content input type."""
input UsersDataFirstNameInputDto {
  iv: String
}

"""The structure of the Users data input type."""
input UsersDataInputDto {
  adminNotes: UsersDataAdminNotesInputDto
  avatar: UsersDataAvatarInputDto
  biography: UsersDataBiographyInputDto
  city: UsersDataCityInputDto
  connections: UsersDataConnectionsInputDto
  contactEmail: UsersDataContactEmailInputDto
  country: UsersDataCountryInputDto
  degree: UsersDataDegreeInputDto
  email: UsersDataEmailInputDto
  firstName: UsersDataFirstNameInputDto
  institution: UsersDataInstitutionInputDto
  jobTitle: UsersDataJobTitleInputDto
  labs: UsersDataLabsInputDto
  lastModifiedDate: UsersDataLastModifiedDateInputDto
  lastName: UsersDataLastNameInputDto
  onboarded: UsersDataOnboardedInputDto
  orcid: UsersDataOrcidInputDto
  orcidLastModifiedDate: UsersDataOrcidLastModifiedDateInputDto
  orcidLastSyncDate: UsersDataOrcidLastSyncDateInputDto
  orcidWorks: UsersDataOrcidWorksInputDto
  questions: UsersDataQuestionsInputDto
  reachOut: UsersDataReachOutInputDto
  responsibilities: UsersDataResponsibilitiesInputDto
  role: UsersDataRoleInputDto
  skills: UsersDataSkillsInputDto
  skillsDescription: UsersDataSkillsDescriptionInputDto
  social: UsersDataSocialInputDto
  teams: UsersDataTeamsInputDto
}

"""The structure of the Institution field of the Users content type."""
type UsersDataInstitutionDto {
  iv: String
}

"""The structure of the Institution field of the Users content input type."""
input UsersDataInstitutionInputDto {
  iv: String
}

"""The structure of the Job Title field of the Users content type."""
type UsersDataJobTitleDto {
  iv: String
}

"""The structure of the Job Title field of the Users content input type."""
input UsersDataJobTitleInputDto {
  iv: String
}

"""The structure of the Labs field of the Users content type."""
type UsersDataLabsDto {
  """Mandatory for grantees. They cannot publish profile without a lab."""
  iv: [Labs!]
}

"""The structure of the Labs field of the Users content input type."""
input UsersDataLabsInputDto {
  """Mandatory for grantees. They cannot publish profile without a lab."""
  iv: [String!]
}

"""The structure of the Last Modified Date field of the Users content type."""
type UsersDataLastModifiedDateDto {
  iv: String
}

"""The structure of the Last Modified Date field of the Users content input type."""
input UsersDataLastModifiedDateInputDto {
  iv: String
}

"""The structure of the Last Name field of the Users content type."""
type UsersDataLastNameDto {
  iv: String
}

"""The structure of the Last Name field of the Users content input type."""
input UsersDataLastNameInputDto {
  iv: String
}

"""The structure of the Onboarding complete field of the Users content type."""
type UsersDataOnboardedDto {
  """Use this to allow the user to see the full Hub and skip profile completion"""
  iv: Boolean
}

"""The structure of the Onboarding complete field of the Users content input type."""
input UsersDataOnboardedInputDto {
  """Use this to allow the user to see the full Hub and skip profile completion"""
  iv: Boolean
}

"""The structure of the ORCID field of the Users content type."""
type UsersDataOrcidDto {
  """Mandatory for grantees. They cannot publish profile without an ORCID. ORCIDs cannot be repeated on the Hub"""
  iv: String
}

"""The structure of the ORCID field of the Users content input type."""
input UsersDataOrcidInputDto {
  """Mandatory for grantees. They cannot publish profile without an ORCID. ORCIDs cannot be repeated on the Hub"""
  iv: String
}

"""The structure of the ORCID Last Modified Date field of the Users content type."""
type UsersDataOrcidLastModifiedDateDto {
  iv: String
}

"""The structure of the ORCID Last Modified Date field of the Users content input type."""
input UsersDataOrcidLastModifiedDateInputDto {
  iv: String
}

"""The structure of the ORCID Last Sync Date field of the Users content type."""
type UsersDataOrcidLastSyncDateDto {
  iv: String
}

"""The structure of the ORCID Last Sync Date field of the Users content input type."""
input UsersDataOrcidLastSyncDateInputDto {
  iv: String
}

"""The structure of the ORCID Works nested schema."""
type UsersDataOrcidWorksChildDto {
  doi: String
  id: String
  lastModifiedDate: String
  publicationDate(
    """The path to the json value."""
    path: String
  ): JsonScalar
  title: String
  type: String
}

"""The structure of the ORCID Works nested schema."""
input UsersDataOrcidWorksChildInputDto {
  doi: String
  id: String
  lastModifiedDate: String
  publicationDate: JsonScalar
  title: String
  type: String
}

"""The structure of the ORCID Works field of the Users content type."""
type UsersDataOrcidWorksDto {
  iv: [UsersDataOrcidWorksChildDto!]
}

"""The structure of the ORCID Works field of the Users content input type."""
input UsersDataOrcidWorksInputDto {
  iv: [UsersDataOrcidWorksChildInputDto!]
}

"""The structure of the Open Questions nested schema."""
type UsersDataQuestionsChildDto {
  question: String
}

"""The structure of the Open Questions nested schema."""
input UsersDataQuestionsChildInputDto {
  question: String
}

"""The structure of the Open Questions field of the Users content type."""
type UsersDataQuestionsDto {
  iv: [UsersDataQuestionsChildDto!]
}

"""The structure of the Open Questions field of the Users content input type."""
input UsersDataQuestionsInputDto {
  iv: [UsersDataQuestionsChildInputDto!]
}

"""The structure of the Reach Out field of the Users content type."""
type UsersDataReachOutDto {
  """Reach out reasons (only relevant for "Staff" users)"""
  iv: String
}

"""The structure of the Reach Out field of the Users content input type."""
input UsersDataReachOutInputDto {
  """Reach out reasons (only relevant for "Staff" users)"""
  iv: String
}

"""The structure of the Responsibilities field of the Users content type."""
type UsersDataResponsibilitiesDto {
  """Responsibilities on the ASAP Hub (only relevant for "Staff" users)"""
  iv: String
}

"""The structure of the Responsibilities field of the Users content input type."""
input UsersDataResponsibilitiesInputDto {
  """Responsibilities on the ASAP Hub (only relevant for "Staff" users)"""
  iv: String
}

"""The structure of the ASAP Hub Role field of the Users content type."""
type UsersDataRoleDto {
  """Role on the ASAP Hub"""
  iv: String
}

"""The structure of the ASAP Hub Role field of the Users content input type."""
input UsersDataRoleInputDto {
  """Role on the ASAP Hub"""
  iv: String
}

"""The structure of the Expertise and Resources Description field of the Users content type."""
type UsersDataSkillsDescriptionDto {
  iv: String
}

"""The structure of the Expertise and Resources Description field of the Users content input type."""
input UsersDataSkillsDescriptionInputDto {
  iv: String
}

"""The structure of the Expertise and Resources field of the Users content type."""
type UsersDataSkillsDto {
  iv: [String!]
}

"""The structure of the Expertise and Resources field of the Users content input type."""
input UsersDataSkillsInputDto {
  iv: [String!]
}

"""The structure of the Social Links nested schema."""
type UsersDataSocialChildDto {
  github: String
  googleScholar: String
  linkedIn: String
  researchGate: String
  researcherId: String
  twitter: String
  website1: String
  website2: String
}

"""The structure of the Social Links nested schema."""
input UsersDataSocialChildInputDto {
  github: String
  googleScholar: String
  linkedIn: String
  researchGate: String
  researcherId: String
  twitter: String
  website1: String
  website2: String
}

"""The structure of the Social Links field of the Users content type."""
type UsersDataSocialDto {
  iv: [UsersDataSocialChildDto!]
}

"""The structure of the Social Links field of the Users content input type."""
input UsersDataSocialInputDto {
  iv: [UsersDataSocialChildInputDto!]
}

"""The structure of the Teams nested schema."""
type UsersDataTeamsChildDto {
  approach: String
  id: [Teams!]
  responsibilities: String
  """Attention: Check if this user needs to be added to Smart Simple"""
  role: String
}

"""The structure of the Teams nested schema."""
input UsersDataTeamsChildInputDto {
  approach: String
  id: [String!]
  responsibilities: String
  """Attention: Check if this user needs to be added to Smart Simple"""
  role: String
}

"""The structure of the Teams field of the Users content type."""
type UsersDataTeamsDto {
  """Mandatory for grantees. They cannot publish profile without a team."""
  iv: [UsersDataTeamsChildDto!]
}

"""The structure of the Teams field of the Users content input type."""
input UsersDataTeamsInputDto {
  """Mandatory for grantees. They cannot publish profile without a team."""
  iv: [UsersDataTeamsChildInputDto!]
}

"""The structure of the flat Users data type."""
type UsersFlatDataDto {
  adminNotes: String
  avatar: [Asset!]
  biography: String
  city: String
  connections: [UsersDataConnectionsChildDto!]
  contactEmail: String
  country: String
  degree: String
  email: String
  firstName: String
  institution: String
  jobTitle: String
  """Mandatory for grantees. They cannot publish profile without a lab."""
  labs: [Labs!]
  lastModifiedDate: String
  lastName: String
  """Use this to allow the user to see the full Hub and skip profile completion"""
  onboarded: Boolean
  """Mandatory for grantees. They cannot publish profile without an ORCID. ORCIDs cannot be repeated on the Hub"""
  orcid: String
  orcidLastModifiedDate: String
  orcidLastSyncDate: String
  orcidWorks: [UsersDataOrcidWorksChildDto!]
  questions: [UsersDataQuestionsChildDto!]
  """Reach out reasons (only relevant for "Staff" users)"""
  reachOut: String
  """Responsibilities on the ASAP Hub (only relevant for "Staff" users)"""
  responsibilities: String
  """Role on the ASAP Hub"""
  role: String
  skills: [String!]
  skillsDescription: String
  social: [UsersDataSocialChildDto!]
  """Mandatory for grantees. They cannot publish profile without a team."""
  teams: [UsersDataTeamsChildDto!]
}

"""List of Users items and total count."""
type UsersResultDto {
  """The contents."""
  items: [Users!]
  """The total count of  contents."""
  total: Int!
}
