import {
  ExternalAuthorResponse,
  ListExternalAuthorResponse,
} from '@asap-hub/model';
import {
  FetchExternalAuthorsQuery,
  FetchExternalAuthorQuery,
} from '../../src/autogenerated-gql/graphql';

export const getSquidexExternalAuthorsGraphqlResponse =
  (): FetchExternalAuthorsQuery =>
    generateGraphqlFetchExternalAuthorsResponse([getGraphQLExternalAuthor()]);

const generateGraphqlFetchExternalAuthorsResponse = (
  items: NonNullable<FetchExternalAuthorQuery['findExternalAuthorsContent']>[],
): FetchExternalAuthorsQuery => ({
  queryExternalAuthorsContentsWithTotal: {
    total: items.length,
    items,
  },
});

export const getGraphqlResponseFetchExternalAuthors =
  (): FetchExternalAuthorsQuery =>
    generateGraphqlFetchExternalAuthorsResponse([getGraphQLExternalAuthor()]);

export const getGraphQLExternalAuthor = (
  externalAuthor: Partial<
    NonNullable<FetchExternalAuthorQuery['findExternalAuthorsContent']>
  > = {},
): NonNullable<FetchExternalAuthorQuery['findExternalAuthorsContent']> => ({
  id: 'external-author-id-1',
  lastModified: '2021-11-26T15:33:18Z',
  version: 45,
  created: '2021-11-23T20:45:22Z',
  ...externalAuthor,
  flatData: {
    name: 'external author one',
    orcid: 'orcid-1',
  },
});

export const getExternalAuthorResponse = (): ExternalAuthorResponse => ({
  displayName: 'external author one',
  orcid: 'orcid-1',
});

export const getListExternalAuthorResponse =
  (): ListExternalAuthorResponse => ({
    total: 2,
    items: [
      getExternalAuthorResponse(),
      { displayName: 'external author two', orcid: 'orcid-2' },
    ],
  });
