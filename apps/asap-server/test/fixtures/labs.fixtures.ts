import { EventBridgeEvent } from 'aws-lambda';

import { LabResponse } from '@asap-hub/model';
import { Lab, WebhookPayload } from '@asap-hub/squidex';
import {
  LabEventType,
  SquidexLabEventType,
} from '../../src/handlers/webhooks/webhook-lab';
import { FetchLabsQuery } from '../../src/autogenerated-gql/graphql';
import { SquidexWebhookLabPayload } from '../../src/handlers/lab/index-lab-users-handler';
import { createEventBridgeEventMock } from '../helpers/events';

export const getLabResponse = (): LabResponse => ({
  id: 'lab-id-1',
  name: 'The Lab',
});

export const getLabWebhookPayload = (
  id: string,
  type: SquidexLabEventType,
): WebhookPayload<Lab> => ({
  type,
  timestamp: '2021-02-15T13:11:25Z',
  payload: {
    $type: 'EnrichedContentEvent',
    type: 'Updated',
    id,
    created: '2020-07-31T15:52:33Z',
    lastModified: '2020-07-31T15:52:33Z',
    version: 42,
    data: {
      name: { iv: 'The Lab' },
    },
  },
});

export type LabEventGenerator = (
  id: string,
) => EventBridgeEvent<LabEventType, SquidexWebhookLabPayload>;

export const getLabEvent = (
  id: string,
  squidexEvent: SquidexLabEventType,
  eventType: LabEventType,
) =>
  createEventBridgeEventMock(
    getLabWebhookPayload(id, squidexEvent),
    eventType,
    id,
  );

export const unpublishedEvent: LabEventGenerator = (id: string) =>
  getLabEvent(id, 'LabsUnpublished', 'LabDeleted') as EventBridgeEvent<
    LabEventType,
    SquidexWebhookLabPayload
  >;

export const deleteEvent: LabEventGenerator = (id: string) =>
  getLabEvent(id, 'LabsDeleted', 'LabDeleted') as EventBridgeEvent<
    LabEventType,
    SquidexWebhookLabPayload
  >;

export const createEvent: LabEventGenerator = (id: string) =>
  getLabEvent(id, 'LabsPublished', 'LabPublished') as EventBridgeEvent<
    LabEventType,
    SquidexWebhookLabPayload
  >;

export const updateEvent: LabEventGenerator = (id: string) =>
  getLabEvent(id, 'LabsUpdated', 'LabPublished') as EventBridgeEvent<
    LabEventType,
    SquidexWebhookLabPayload
  >;

export const getSquidexGraphqlLab = () => ({
  flatData: { name: 'Manzini' },
  id: 'a8a57909-d901-4d2d-ba91-20f48738bbad',
});

export const getSquidexGraphqlLabs = () => [
  {
    flatData: { name: 'Manzini' },
    id: 'a8a57909-d901-4d2d-ba91-20f48738bbad',
  },
  {
    flatData: { name: 'Alessi' },
    id: '6532f0f3-9bb5-4eed-9685-0ea7b59c1d13',
  },
  {
    flatData: { name: 'Olsen' },
    id: '859bd247-1e49-4c88-a2c0-585b6e13ad05',
  },
  {
    flatData: { name: 'Johnson' },
    id: 'f2235d49-af87-4834-8f0f-57cc1a4354a9',
  },
  {
    flatData: { name: 'Campbell' },
    id: 'a61a6e09-29f3-46f4-99db-b03e50dce6b3',
  },
  {
    flatData: { name: 'mike' },
    id: 'cd7be402-84d7-4d21-a360-82e2695f2dd9',
  },
];

export const getLabsResponse = (): LabsResponse => [
  {
    name: 'Manzini',
    id: 'a8a57909-d901-4d2d-ba91-20f48738bbad',
  },
  {
    name: 'Manzini',
    id: 'a8a57909-d901-4d2d-ba91-20f48738bbad',
  },
];

export const getSquidexLabsGraphqlResponse = (): FetchLabsQuery => ({
  queryLabsContents: getSquidexGraphqlLabs(),
});
