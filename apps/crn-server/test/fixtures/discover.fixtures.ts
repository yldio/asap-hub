import { DiscoverResponse, UserResponse } from '@asap-hub/model';
import { FetchDiscoverQuery } from '../../src/autogenerated-gql/graphql';
import { appName, baseUrl } from '../../src/config';

const getSquidexGraphqlDiscoverMembers = (prefix = '') => [
  {
    id: `${prefix}uuid-members-1`,
    created: '2020-10-15T17:55:21Z',
    lastModified: '2020-10-15T17:55:21Z',
    version: 42,
    flatData: {
      avatar: [
        {
          id: `${prefix}uuid-1`,
        },
      ],
      email: `${prefix}john@example.com`,
      firstName: `${prefix}John`,
      lastModifiedDate: '2020-10-15T17:55:21Z',
      lastName: `${prefix}Doe`,
      institution: `${prefix}ASAP`,
      jobTitle: `${prefix}Job title`,
    },
  },
  {
    id: `${prefix}uuid-members-2`,
    created: '2020-10-14T17:55:21Z',
    lastModified: '2020-10-15T17:55:21Z',
    version: 42,
    flatData: {
      email: null,
      lastModifiedDate: '2020-10-15T17:55:21Z',
      lastName: `${prefix}Do`,
      firstName: `${prefix}John`,
      institution: `${prefix}ASAP`,
      jobTitle: `${prefix}Job title`,
      avatar: [
        {
          id: `${prefix}uuid-2`,
        },
      ],
    },
  },
];

const squidexGraphqlDiscoverFlatData = (): NonNullable<
  FetchDiscoverQuery['queryDiscoverContents']
>[number]['flatData'] => ({
  training: [
    {
      id: 'uuid-training-1',
      created: '2020-09-24T11:06:27.164Z',
      flatData: {
        title: 'Title',
        text: 'Content',
        link: 'https://hub.asap.science',
        linkText: 'ASAP Training',
        shortText: 'Short text',
        thumbnail: [
          {
            id: 'thumbnail-uuid1',
          },
        ],
      },
    },
  ],
  workingGroups: [
    {
      id: 'uuid-working-groups-1',
      created: '2020-09-24T11:06:27.164Z',
      lastModified: '2020-10-15T17:55:21Z',
      version: 42,
      flatData: {
        title: 'Title',
        text: 'Content',
        frequency: 'Biweekly Newsletter',
        link: 'https://hub.asap.science',
        linkText: 'Working group 1',
        shortText: 'Short text',
        thumbnail: [
          {
            id: 'thumbnail-uuid1',
            thumbnailUrl: `${baseUrl}/api/assets/${appName}/thumbnail-uuid1`,
          },
        ],
      },
    },
  ],
  pages: [
    {
      id: 'uuid-pages-1',
      created: '2020-09-24T11:06:27.164Z',
      lastModified: '2020-10-15T17:55:21Z',
      version: 42,
      flatData: {
        title: 'Title',
        text: 'Content',
        link: 'https://hub.asap.science',
        linkText: 'ASAP Hub',
        shortText: 'Short text',
      },
    },
    {
      id: 'uuid-pages-2',
      created: '2020-09-24T11:06:27.164Z',
      lastModified: '2020-10-15T17:55:21Z',
      version: 42,
      flatData: {
        title: 'Title',
        text: 'Content',
        link: 'https://hub.asap.science',
        linkText: 'ASAP Hub',
        shortText: 'Short text',
      },
    },
  ],
  members: getSquidexGraphqlDiscoverMembers(),
  membersTeam: [
    {
      id: 'uuid-team-1',
    },
  ],
  scientificAdvisoryBoard: getSquidexGraphqlDiscoverMembers('sab-'),
  aboutUs: '<p>content<p>',
});

export const getSquidexGraphqlDiscover = () => ({
  id: 'ec3086d4-aa64-4f30-a0f7-5c5b95ffbcca',
  created: '2020-09-23T16:34:26.842Z',
  lastModified: '2021-05-14T14:48:46Z',
  version: 42,
  flatData: squidexGraphqlDiscoverFlatData(),
});

const getSquidexGraphqlDiscoverMembersResponse = (
  prefix = '',
): ReadonlyArray<UserResponse> => [
  {
    id: `${prefix}uuid-members-1`,
    onboarded: true,
    createdDate: '2020-10-15T17:55:21.000Z',
    displayName: `${prefix}John ${prefix}Doe`,
    orcid: undefined,
    firstName: `${prefix}John`,
    lastName: `${prefix}Doe`,
    biography: undefined,
    degree: undefined,
    email: `${prefix}john@example.com`,
    contactEmail: undefined,
    country: undefined,
    city: undefined,
    orcidWorks: [],
    questions: [],
    expertiseAndResourceTags: [],
    expertiseAndResourceDescription: undefined,
    lastModifiedDate: '2020-10-15T17:55:21Z',
    teams: [],
    social: {},
    avatarUrl: `${baseUrl}/api/assets/${appName}/${prefix}uuid-1`,
    role: 'Guest',
    responsibilities: undefined,
    reachOut: undefined,
    labs: [],
  },
  {
    id: `${prefix}uuid-members-2`,
    onboarded: true,
    createdDate: '2020-10-14T17:55:21.000Z',
    orcid: undefined,
    displayName: `${prefix}John ${prefix}Do`,
    firstName: `${prefix}John`,
    lastName: `${prefix}Do`,
    biography: undefined,
    degree: undefined,
    email: '',
    contactEmail: undefined,
    country: undefined,
    city: undefined,
    orcidWorks: [],
    questions: [],
    expertiseAndResourceTags: [],
    expertiseAndResourceDescription: undefined,
    lastModifiedDate: '2020-10-15T17:55:21Z',
    teams: [],
    social: {},
    role: 'Guest',
    responsibilities: undefined,
    reachOut: undefined,
    labs: [],
  },
];

export const getDiscoverResponse = (): DiscoverResponse => ({
  aboutUs: '<p>content<p>',
  training: [
    {
      id: 'uuid-training-1',
      created: '2020-09-24T11:06:27.164Z',
      title: 'Title',
      text: 'Content',
      link: 'https://hub.asap.science',
      linkText: 'ASAP Training',
    },
  ],
  workingGroups: [
    {
      id: 'uuid-working-groups-1',
      created: '2020-09-24T11:06:27.164Z',
      title: 'Title',
      text: 'Content',
      link: 'https://hub.asap.science',
      linkText: 'Working group 1',
    },
  ],
  members: getSquidexGraphqlDiscoverMembersResponse(),
  membersTeamId: 'uuid-team-1',
  scientificAdvisoryBoard: getSquidexGraphqlDiscoverMembersResponse('sab-'),
  pages: [
    {
      id: 'uuid-pages-1',
      path: '',
      title: 'Title',
      text: 'Content',
      link: 'https://hub.asap.science',
      linkText: 'ASAP Hub',
      shortText: 'Short text',
    },
    {
      id: 'uuid-pages-2',
      path: '',
      title: 'Title',
      shortText: 'Short text',
      text: 'Content',
    },
  ],
});

export const squidexDiscoverResponse: NonNullable<FetchDiscoverQuery> = {
  queryDiscoverContents: [
    {
      flatData: squidexGraphqlDiscoverFlatData(),
    },
  ],
};
