import {
  LabDataObject,
  LabEvent,
  LabResponse,
  ListLabDataObject,
  ListLabsResponse,
} from '@asap-hub/model';
import { Lab, SquidexWebhookPayload } from '@asap-hub/squidex';
import { EventBridgeEvent } from 'aws-lambda';
import { FetchLabsQuery } from '../../src/autogenerated-gql/graphql';
import { LabPayload } from '../../src/handlers/event-bus';
import { createEventBridgeEventMock } from '../helpers/events';

export const getLabWebhookPayload = (
  id: string,
  type: LabEvent,
): SquidexWebhookPayload<Lab> => ({
  type,
  timestamp: '2021-02-15T13:11:25Z',
  payload: {
    $type: 'EnrichedContentEvent',
    type: 'Updated',
    id,
    created: '2020-07-31T15:52:33Z',
    lastModified: '2020-07-31T15:52:33Z',
    version: 42,
    data: {
      name: { iv: 'Simpson' },
    },
  },
});

export type LabEventGenerator = (
  id: string,
) => EventBridgeEvent<LabEvent, LabPayload>;

export const getLabEvent = (id: string, eventType: LabEvent) =>
  createEventBridgeEventMock(
    getLabWebhookPayload(id, eventType),
    eventType,
    id,
  );

export const unpublishedEvent: LabEventGenerator = (id: string) =>
  getLabEvent(id, 'LabsUnpublished') as EventBridgeEvent<LabEvent, LabPayload>;

export const deleteEvent: LabEventGenerator = (id: string) =>
  getLabEvent(id, 'LabsDeleted') as EventBridgeEvent<LabEvent, LabPayload>;

export const createEvent: LabEventGenerator = (id: string) =>
  getLabEvent(id, 'LabsPublished') as EventBridgeEvent<LabEvent, LabPayload>;

export const updateEvent: LabEventGenerator = (id: string) =>
  getLabEvent(id, 'LabsUpdated') as EventBridgeEvent<LabEvent, LabPayload>;

export const getSquidexGraphqlLab = () => ({
  flatData: { name: 'Simpson' },
  id: '12345',
});

export const getSquidexGraphqlLabs = () => [getSquidexGraphqlLab()];

export const getSquidexLabsGraphqlResponse = (): FetchLabsQuery => ({
  queryLabsContentsWithTotal: {
    total: getSquidexGraphqlLabs().length,
    items: getSquidexGraphqlLabs(),
  },
});

export const getLabDataObject = (): LabDataObject => ({
  name: 'Simpson',
  id: '12345',
});

export const getListLabDataObject = (): ListLabDataObject => ({
  total: 1,
  items: [getLabDataObject()],
});

export const getLabResponse = (): LabResponse => getLabDataObject();

export const getListLabsResponse = (): ListLabsResponse => ({
  total: 1,
  items: [getLabResponse()],
});
