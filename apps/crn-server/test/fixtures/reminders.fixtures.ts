import {
  EventHappeningTodayReminder,
  ListReminderDataObject,
  ListReminderResponse,
  ReminderResponse,
  ResearchOutputPublishedReminder,
} from '@asap-hub/model';
import { FetchReminderDataQuery } from '../../src/autogenerated-gql/graphql';
import { getEventResponse, getSquidexGraphqlEvent } from './events.fixtures';
import {
  getResearchOutputDataObject,
  getSquidexGraphqlResearchOutput,
} from './research-output.fixtures';
import { getSquidexGraphqlTeam } from './teams.fixtures';

export const getResearchOutputPublishedReminder =
  (): ResearchOutputPublishedReminder => {
    const researchOutputDataObject = getResearchOutputDataObject();
    return {
      id: 'research-output-published-ec3086d4-aa64-4f30-a0f7-5c5b95ffbcca',
      entity: 'Research Output',
      type: 'Published',
      data: {
        researchOutputId: researchOutputDataObject.id,
        documentType: researchOutputDataObject.documentType,
        title: researchOutputDataObject.title,
        addedDate: researchOutputDataObject.addedDate,
      },
    };
  };

export const getEventHappeningTodayReminder =
  (): EventHappeningTodayReminder => {
    const eventResponse = getEventResponse();
    return {
      id: `event-happening-today-${eventResponse.id}`,
      entity: 'Event',
      type: 'Happening Today',
      data: {
        eventId: eventResponse.id,
        startDate: eventResponse.startDate,
        title: eventResponse.title,
      },
    };
  };

export const getListReminderDataObject = (): ListReminderDataObject => ({
  total: 1,
  items: [getResearchOutputPublishedReminder()],
});

export const getReminderResponse = (): ReminderResponse => {
  return {
    id: 'research-output-published-ec3086d4-aa64-4f30-a0f7-5c5b95ffbcca',
    description:
      'Test Proposal 1234 Bioinformatics is now published on the Hub.',
    entity: 'Research Output',
    href: '/shared-research/ec3086d4-aa64-4f30-a0f7-5c5b95ffbcca',
  };
};

export const getListReminderResponse = (): ListReminderResponse => ({
  total: 1,
  items: [getReminderResponse()],
});

export const getSquidexRemindersGraphqlResponse =
  (): FetchReminderDataQuery => ({
    findUsersContent: {
      flatData: {
        teams: [{ id: [{ id: getSquidexGraphqlTeam({}).id }] }],
      },
    },
    queryResearchOutputsContents: [getSquidexReminderReseachOutputsContents()],
    queryEventsContents: [getSquidexReminderEventsContents()],
  });

export const getSquidexReminderReseachOutputsContents = (): NonNullable<
  FetchReminderDataQuery['queryResearchOutputsContents']
>[number] => {
  const researchOutput = getSquidexGraphqlResearchOutput();

  return {
    id: researchOutput.id,
    flatData: {
      addedDate: researchOutput.flatData.addedDate,
      documentType: researchOutput.flatData.documentType,
      title: researchOutput.flatData.title,
    },
    referencingTeamsContents: [
      { id: researchOutput.referencingTeamsContents![0]!.id },
    ],
  };
};

export const getSquidexReminderEventsContents = (): NonNullable<
  FetchReminderDataQuery['queryEventsContents']
>[number] => {
  const event = getSquidexGraphqlEvent();

  return {
    id: event.id,
    flatData: {
      startDate: event.flatData.startDate,
      title: event.flatData.title,
    },
  };
};
