import {
  ListReminderDataObject,
  ListReminderResponse,
  ReminderDataObject,
  ReminderResponse,
} from '@asap-hub/model';
import { FetchUserTeamsAndResearchOutputsQuery } from '../../src/autogenerated-gql/graphql';
import {
  getResearchOutputDataObject,
  getSquidexGraphqlResearchOutput,
} from './research-output.fixtures';
import { getSquidexGraphqlTeam } from './teams.fixtures';

export const getReminderDataObject = (): ReminderDataObject => {
  const researchOutputDataObject = getResearchOutputDataObject();
  return {
    id: 'research-output-published-ec3086d4-aa64-4f30-a0f7-5c5b95ffbcca',
    entity: 'Research Output',
    type: 'Published',
    data: {
      researchOutputId: researchOutputDataObject.id,
      documentType: researchOutputDataObject.documentType,
      title: researchOutputDataObject.title,
    },
  };
};

export const getListReminderDataObject = (): ListReminderDataObject => ({
  total: 1,
  items: [getReminderDataObject()],
});

export const getReminderResponse = (): ReminderResponse => {
  return {
    id: 'research-output-published-ec3086d4-aa64-4f30-a0f7-5c5b95ffbcca',
    description:
      'Test Proposal 1234 Bioinformatics is now published on the Hub.',
    entity: 'Research Output',
    href: '/shared-research/ec3086d4-aa64-4f30-a0f7-5c5b95ffbcca',
  };
};

export const getListReminderResponse = (): ListReminderResponse => ({
  total: 1,
  items: [getReminderResponse()],
});

export const getSquidexRemindersGraphqlResponse =
  (): FetchUserTeamsAndResearchOutputsQuery => ({
    findUsersContent: {
      flatData: {
        teams: [{ id: [{ id: getSquidexGraphqlTeam({}).id }] }],
      },
    },
    queryResearchOutputsContents: [getSquidexReminderReseachOutputsContents()],
  });

export const getSquidexReminderReseachOutputsContents = () => {
  const researchOutput = getSquidexGraphqlResearchOutput();

  return {
    id: researchOutput.id,
    flatData: {
      publishDate: researchOutput.flatData.publishDate,
      documentType: researchOutput.flatData.documentType,
      title: researchOutput.flatData.title,
    },
    referencingTeamsContents: [
      { id: researchOutput.referencingTeamsContents![0]!.id },
    ],
  };
};
