import { gp2 } from '@asap-hub/contentful';
import { gp2 as gp2Model, isGoogleLegacyCalendarColor } from '@asap-hub/model';
import { CalendarsFlatDataDto } from '../autogenerated-gql/graphql';
import { parseCalendarDataObjectToResponse } from '../controllers/calendar.controller';

export const parseGraphqlCalendarToResponse = (
  graphqlCalendar: Pick<
    CalendarsFlatDataDto,
    'name' | 'googleCalendarId' | 'color'
  >,
): gp2Model.CalendarResponse =>
  parseCalendarDataObjectToResponse(
    parseGraphqlCalendarPartialToDataObject(graphqlCalendar),
  );

export const parseGraphqlCalendarPartialToDataObject = (
  graphqlCalendar: Pick<
    CalendarsFlatDataDto,
    'name' | 'googleCalendarId' | 'color'
  >,
): Pick<
  gp2Model.CalendarDataObject,
  'name' | 'googleCalendarId' | 'color'
> => ({
  color: isGoogleLegacyCalendarColor(graphqlCalendar.color)
    ? graphqlCalendar.color
    : ('#333333' as const),
  googleCalendarId: graphqlCalendar.googleCalendarId ?? '',
  name: graphqlCalendar.name ?? '',
});

export const parseContentfulGraphqlCalendarPartialToDataObject = (
  graphqlCalendar: Pick<
    NonNullable<
      NonNullable<
        gp2.FetchCalendarsQuery['calendarsCollection']
      >['items'][number]
    >,
    'name' | 'googleCalendarId' | 'color'
  >,
): Pick<
  gp2Model.CalendarDataObject,
  'name' | 'googleCalendarId' | 'color'
> => ({
  color:
    graphqlCalendar.color && isGoogleLegacyCalendarColor(graphqlCalendar.color)
      ? graphqlCalendar.color
      : ('#333333' as const),
  googleCalendarId: graphqlCalendar.googleCalendarId ?? '',
  name: graphqlCalendar.name ?? '',
});
