schema {
  query: ApplicationQueries
  mutation: ApplicationMutations
  subscription: ApplicationSubscriptions
}

"Enable Memory Caching"
directive @cache(
  """Cache duration in seconds."""
  duration: Int = 600
) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"""The app mutations."""
type ApplicationMutations {
  """Change a Dashboard content."""
  changeDashboardContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String!
    """The status for the content."""
    status: String!
  ): Dashboard!
  """Change a Migrations content."""
  changeMigrationsContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String!
    """The status for the content."""
    status: String!
  ): Migrations!
  """Change a Projects content."""
  changeProjectsContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String!
    """The status for the content."""
    status: String!
  ): Projects!
  """Change a Users content."""
  changeUsersContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String!
    """The status for the content."""
    status: String!
  ): Users!
  """Change a Working Group Network content."""
  changeWorkingGroupNetworkContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String!
    """The status for the content."""
    status: String!
  ): WorkingGroupNetwork!
  """Change a Working Groups content."""
  changeWorkingGroupsContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String!
    """The status for the content."""
    status: String!
  ): WorkingGroups!
  """Creates an Dashboard content."""
  createDashboardContent(
    """The data for the content."""
    data: DashboardDataInputDto!
    """The optional custom content ID."""
    id: String
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Dashboard!
  """Creates an Migrations content."""
  createMigrationsContent(
    """The data for the content."""
    data: MigrationsDataInputDto!
    """The optional custom content ID."""
    id: String
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Migrations!
  """Creates an Projects content."""
  createProjectsContent(
    """The data for the content."""
    data: ProjectsDataInputDto!
    """The optional custom content ID."""
    id: String
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Projects!
  """Creates an Users content."""
  createUsersContent(
    """The data for the content."""
    data: UsersDataInputDto!
    """The optional custom content ID."""
    id: String
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Users!
  """Creates an Working Group Network content."""
  createWorkingGroupNetworkContent(
    """The data for the content."""
    data: WorkingGroupNetworkDataInputDto!
    """The optional custom content ID."""
    id: String
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): WorkingGroupNetwork!
  """Creates an Working Groups content."""
  createWorkingGroupsContent(
    """The data for the content."""
    data: WorkingGroupsDataInputDto!
    """The optional custom content ID."""
    id: String
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): WorkingGroups!
  """Delete an Dashboard content."""
  deleteDashboardContent(
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the content (usually GUID)."""
    id: String!
  ): EntitySavedResultDto!
  """Delete an Migrations content."""
  deleteMigrationsContent(
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the content (usually GUID)."""
    id: String!
  ): EntitySavedResultDto!
  """Delete an Projects content."""
  deleteProjectsContent(
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the content (usually GUID)."""
    id: String!
  ): EntitySavedResultDto!
  """Delete an Users content."""
  deleteUsersContent(
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the content (usually GUID)."""
    id: String!
  ): EntitySavedResultDto!
  """Delete an Working Group Network content."""
  deleteWorkingGroupNetworkContent(
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the content (usually GUID)."""
    id: String!
  ): EntitySavedResultDto!
  """Delete an Working Groups content."""
  deleteWorkingGroupsContent(
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the content (usually GUID)."""
    id: String!
  ): EntitySavedResultDto!
  """Patch an Dashboard content by id."""
  patchDashboardContent(
    """The data for the content."""
    data: DashboardDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String
  ): Dashboard!
  """Patch an Migrations content by id."""
  patchMigrationsContent(
    """The data for the content."""
    data: MigrationsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String
  ): Migrations!
  """Patch an Projects content by id."""
  patchProjectsContent(
    """The data for the content."""
    data: ProjectsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String
  ): Projects!
  """Patch an Users content by id."""
  patchUsersContent(
    """The data for the content."""
    data: UsersDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String
  ): Users!
  """Patch an Working Group Network content by id."""
  patchWorkingGroupNetworkContent(
    """The data for the content."""
    data: WorkingGroupNetworkDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String
  ): WorkingGroupNetwork!
  """Patch an Working Groups content by id."""
  patchWorkingGroupsContent(
    """The data for the content."""
    data: WorkingGroupsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String
  ): WorkingGroups!
  """Publish a Dashboard content."""
  publishDashboardContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String!
    """The status for the content."""
    status: String!
  ): Dashboard! @deprecated(reason: "Use 'changeDashboardContent' instead")
  """Publish a Migrations content."""
  publishMigrationsContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String!
    """The status for the content."""
    status: String!
  ): Migrations! @deprecated(reason: "Use 'changeMigrationsContent' instead")
  """Publish a Projects content."""
  publishProjectsContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String!
    """The status for the content."""
    status: String!
  ): Projects! @deprecated(reason: "Use 'changeProjectsContent' instead")
  """Publish a Users content."""
  publishUsersContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String!
    """The status for the content."""
    status: String!
  ): Users! @deprecated(reason: "Use 'changeUsersContent' instead")
  """Publish a Working Group Network content."""
  publishWorkingGroupNetworkContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String!
    """The status for the content."""
    status: String!
  ): WorkingGroupNetwork! @deprecated(reason: "Use 'changeWorkingGroupNetworkContent' instead")
  """Publish a Working Groups content."""
  publishWorkingGroupsContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String!
    """The status for the content."""
    status: String!
  ): WorkingGroups! @deprecated(reason: "Use 'changeWorkingGroupsContent' instead")
  """Update an Dashboard content by id."""
  updateDashboardContent(
    """The data for the content."""
    data: DashboardDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String
  ): Dashboard!
  """Update an Migrations content by id."""
  updateMigrationsContent(
    """The data for the content."""
    data: MigrationsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String
  ): Migrations!
  """Update an Projects content by id."""
  updateProjectsContent(
    """The data for the content."""
    data: ProjectsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String
  ): Projects!
  """Update an Users content by id."""
  updateUsersContent(
    """The data for the content."""
    data: UsersDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String
  ): Users!
  """Update an Working Group Network content by id."""
  updateWorkingGroupNetworkContent(
    """The data for the content."""
    data: WorkingGroupNetworkDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String
  ): WorkingGroupNetwork!
  """Update an Working Groups content by id."""
  updateWorkingGroupsContent(
    """The data for the content."""
    data: WorkingGroupsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String
  ): WorkingGroups!
  """Upsert an Dashboard content by id."""
  upsertDashboardContent(
    """The data for the content."""
    data: DashboardDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String!
    """Makes the update as patch."""
    patch: Boolean = false
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Dashboard!
  """Upsert an Migrations content by id."""
  upsertMigrationsContent(
    """The data for the content."""
    data: MigrationsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String!
    """Makes the update as patch."""
    patch: Boolean = false
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Migrations!
  """Upsert an Projects content by id."""
  upsertProjectsContent(
    """The data for the content."""
    data: ProjectsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String!
    """Makes the update as patch."""
    patch: Boolean = false
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Projects!
  """Upsert an Users content by id."""
  upsertUsersContent(
    """The data for the content."""
    data: UsersDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String!
    """Makes the update as patch."""
    patch: Boolean = false
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Users!
  """Upsert an Working Group Network content by id."""
  upsertWorkingGroupNetworkContent(
    """The data for the content."""
    data: WorkingGroupNetworkDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String!
    """Makes the update as patch."""
    patch: Boolean = false
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): WorkingGroupNetwork!
  """Upsert an Working Groups content by id."""
  upsertWorkingGroupsContent(
    """The data for the content."""
    data: WorkingGroupsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String!
    """Makes the update as patch."""
    patch: Boolean = false
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): WorkingGroups!
}

"""The app queries."""
type ApplicationQueries {
  """Find an asset by id."""
  findAsset(
    """The ID of the asset (usually GUID)."""
    id: String!
  ): Asset
  """Find an Dashboard content by id."""
  findDashboardContent(
    """The ID of the object (usually GUID)."""
    id: String!
    """The optional version of the content to retrieve an older instance (not cached)."""
    version: Int
  ): Dashboard
  """Find an Migrations content by id."""
  findMigrationsContent(
    """The ID of the object (usually GUID)."""
    id: String!
    """The optional version of the content to retrieve an older instance (not cached)."""
    version: Int
  ): Migrations
  """Find an Projects content by id."""
  findProjectsContent(
    """The ID of the object (usually GUID)."""
    id: String!
    """The optional version of the content to retrieve an older instance (not cached)."""
    version: Int
  ): Projects
  """Find an Users content by id."""
  findUsersContent(
    """The ID of the object (usually GUID)."""
    id: String!
    """The optional version of the content to retrieve an older instance (not cached)."""
    version: Int
  ): Users
  """Find an Working Group Network content by id."""
  findWorkingGroupNetworkContent(
    """The ID of the object (usually GUID)."""
    id: String!
    """The optional version of the content to retrieve an older instance (not cached)."""
    version: Int
  ): WorkingGroupNetwork
  """Find an Working Groups content by id."""
  findWorkingGroupsContent(
    """The ID of the object (usually GUID)."""
    id: String!
    """The optional version of the content to retrieve an older instance (not cached)."""
    version: Int
  ): WorkingGroups
  """Get assets."""
  queryAssets(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): [Asset!]!
  """Get assets and total count."""
  queryAssetsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): AssetResultDto!
  """Query Dashboard content items."""
  queryDashboardContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): [Dashboard!]
  """Query Dashboard content items with total count."""
  queryDashboardContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): DashboardResultDto
  """Query Migrations content items."""
  queryMigrationsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): [Migrations!]
  """Query Migrations content items with total count."""
  queryMigrationsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): MigrationsResultDto
  """Query Projects content items."""
  queryProjectsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): [Projects!]
  """Query Projects content items with total count."""
  queryProjectsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): ProjectsResultDto
  """Query Users content items."""
  queryUsersContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): [Users!]
  """Query Users content items with total count."""
  queryUsersContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): UsersResultDto
  """Query Working Group Network content items."""
  queryWorkingGroupNetworkContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): [WorkingGroupNetwork!]
  """Query Working Group Network content items with total count."""
  queryWorkingGroupNetworkContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): WorkingGroupNetworkResultDto
  """Query Working Groups content items."""
  queryWorkingGroupsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): [WorkingGroups!]
  """Query Working Groups content items with total count."""
  queryWorkingGroupsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): WorkingGroupsResultDto
}

type ApplicationSubscriptions {
  """Subscribe to asset events."""
  assetChanges(
    """The type of the event, e.g. 'Created' or 'Updated'."""
    type: EnrichedAssetEventType
  ): EnrichedAssetEvent
  """Subscribe to content events."""
  contentChanges(
    """The name of the schema."""
    schemaName: String
    """The type of the event, e.g. 'Created' or 'Updated'."""
    type: EnrichedContentEventType
  ): EnrichedContentEvent
}

"""An asset"""
type Asset {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The user who created the object."""
  createdByUser: User!
  """The edit token."""
  editToken: String
  """The hash of the file. Can be null for old files."""
  fileHash: String!
  """The file name of the asset."""
  fileName: String!
  """The size of the file in bytes."""
  fileSize: Int!
  """The file type (file extension) of the asset."""
  fileType: String!
  """The version of the file."""
  fileVersion: Int!
  """The ID of the object (usually GUID)."""
  id: String!
  """Determines if the uploaded file is an image."""
  isImage: Boolean! @deprecated(reason: "Use 'type' field instead.")
  """True, when the asset is not public."""
  isProtected: Boolean!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The user who updated the object the last time."""
  lastModifiedByUser: User!
  """The asset metadata."""
  metadata(
    """The path to the json value."""
    path: String
  ): JsonScalar
  """The type of the image."""
  metadataText: String!
  """The mime type."""
  mimeType: String!
  """The height of the image in pixels if the asset is an image."""
  pixelHeight: Int @deprecated(reason: "Use 'metadata' field instead.")
  """The width of the image in pixels if the asset is an image."""
  pixelWidth: Int @deprecated(reason: "Use 'metadata' field instead.")
  """The file name as slug."""
  slug: String!
  """The source URL of the asset."""
  sourceUrl: String!
  """The asset tags."""
  tags: [String!]!
  """The thumbnail URL to the asset."""
  thumbnailUrl: String
  """The type of the asset."""
  type: AssetType!
  """The URL to the asset."""
  url: String!
  """The version of the objec."""
  version: Int!
}

"""List of assets and total count of assets."""
type AssetResultDto {
  """The assets."""
  items: [Asset!]!
  """The total count of assets."""
  total: Int!
}

enum AssetType {
  AUDIO
  IMAGE
  UNKNOWN
  VIDEO
}

"""The structure of all content types."""
interface Component {
  """The ID of the schema."""
  schemaId: String!
}

"""The structure of all content types."""
interface Content {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The ID of the object (usually GUID)."""
  id: String!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The new status of the content."""
  newStatus: String
  """The status color of the content."""
  newStatusColor: String
  """The status of the content."""
  status: String!
  """The status color of the content."""
  statusColor: String!
  """The URL to the content."""
  url: String!
  """The version of the objec."""
  version: Int!
}

"""The structure of a Dashboard content type."""
type Dashboard implements Content {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The user who created the object."""
  createdByUser: User!
  """The data of the content."""
  data: DashboardDataDto!
  """The edit token."""
  editToken: String
  """The flat data of the content."""
  flatData: DashboardFlatDataDto!
  """The ID of the object (usually GUID)."""
  id: String!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The user who updated the object the last time."""
  lastModifiedByUser: User!
  """The new status of the content."""
  newStatus: String
  """The status color of the content."""
  newStatusColor: String
  """Query Dashboard content items."""
  referencesDashboardContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): [Dashboard!]
  """Query Dashboard content items with total count."""
  referencesDashboardContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): DashboardResultDto
  """Query Migrations content items."""
  referencesMigrationsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): [Migrations!]
  """Query Migrations content items with total count."""
  referencesMigrationsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): MigrationsResultDto
  """Query Projects content items."""
  referencesProjectsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): [Projects!]
  """Query Projects content items with total count."""
  referencesProjectsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): ProjectsResultDto
  """Query Users content items."""
  referencesUsersContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): [Users!]
  """Query Users content items with total count."""
  referencesUsersContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): UsersResultDto
  """Query Working Group Network content items."""
  referencesWorkingGroupNetworkContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): [WorkingGroupNetwork!]
  """Query Working Group Network content items with total count."""
  referencesWorkingGroupNetworkContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): WorkingGroupNetworkResultDto
  """Query Working Groups content items."""
  referencesWorkingGroupsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): [WorkingGroups!]
  """Query Working Groups content items with total count."""
  referencesWorkingGroupsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): WorkingGroupsResultDto
  """Query Dashboard content items."""
  referencingDashboardContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): [Dashboard!]
  """Query Dashboard content items with total count."""
  referencingDashboardContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): DashboardResultDto
  """The status of the content."""
  status: String!
  """The status color of the content."""
  statusColor: String!
  """The URL to the content."""
  url: String!
  """The version of the objec."""
  version: Int!
}

"""The structure of the Dashboard data type."""
type DashboardDataDto {
  news: DashboardDataNewsDto
  pages: DashboardDataPagesDto
}

"""The structure of the Dashboard data input type."""
input DashboardDataInputDto {
  news: DashboardDataNewsInputDto
  pages: DashboardDataPagesInputDto
}

"""The structure of the Latest News from ASAP field of the Dashboard content type."""
type DashboardDataNewsDto {
  iv: [DashboardDataNewsUnionDto!]
}

"""The structure of the Latest News from ASAP field of the Dashboard content input type."""
input DashboardDataNewsInputDto {
  iv: [String!]
}

union DashboardDataNewsUnionDto = Dashboard | Migrations | Projects | Users | WorkingGroupNetwork | WorkingGroups

"""The structure of the Where to Start field of the Dashboard content type."""
type DashboardDataPagesDto {
  iv: [DashboardDataPagesUnionDto!]
}

"""The structure of the Where to Start field of the Dashboard content input type."""
input DashboardDataPagesInputDto {
  iv: [String!]
}

union DashboardDataPagesUnionDto = Dashboard | Migrations | Projects | Users | WorkingGroupNetwork | WorkingGroups

"""The structure of the flat Dashboard data type."""
type DashboardFlatDataDto {
  news: [DashboardDataNewsUnionDto!]
  pages: [DashboardDataPagesUnionDto!]
}

"""List of Dashboard items and total count."""
type DashboardResultDto {
  """The contents."""
  items: [Dashboard!]
  """The total count of  contents."""
  total: Int!
}

"""An asset event"""
type EnrichedAssetEvent {
  """The type of the asset."""
  assetType: AssetType!
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The user who created the object."""
  createdByUser: User!
  """The hash of the file. Can be null for old files."""
  fileHash: String!
  """The file name of the asset."""
  fileName: String!
  """The size of the file in bytes."""
  fileSize: Int!
  """The file type (file extension) of the asset."""
  fileType: String!
  """The version of the file."""
  fileVersion: Int!
  """The ID of the object (usually GUID)."""
  id: String!
  """Determines if the uploaded file is an image."""
  isImage: Boolean! @deprecated(reason: "Use 'type' field instead.")
  """True, when the asset is not public."""
  isProtected: Boolean!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The user who updated the object the last time."""
  lastModifiedByUser: User!
  """The asset metadata."""
  metadata(
    """The path to the json value."""
    path: String
  ): JsonScalar
  """The mime type."""
  mimeType: String!
  """The height of the image in pixels if the asset is an image."""
  pixelHeight: Int @deprecated(reason: "Use 'metadata' field instead.")
  """The width of the image in pixels if the asset is an image."""
  pixelWidth: Int @deprecated(reason: "Use 'metadata' field instead.")
  """The file name as slug."""
  slug: String!
  """The source URL of the asset."""
  sourceUrl: String!
  """The thumbnail URL to the asset."""
  thumbnailUrl: String
  """The type of the event, e.g. 'Created' or 'Updated'."""
  type: EnrichedAssetEventType
  """The URL to the asset."""
  url: String!
  """The version of the objec."""
  version: Int!
}

enum EnrichedAssetEventType {
  ANNOTATED
  CREATED
  DELETED
  UPDATED
}

"""An content event"""
type EnrichedContentEvent {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The user who created the object."""
  createdByUser: User!
  """The data of the content."""
  data: JsonScalar
  """The previous data of the content."""
  dataOld: JsonScalar
  """The ID of the object (usually GUID)."""
  id: String!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The user who updated the object the last time."""
  lastModifiedByUser: User!
  """The new status of the content."""
  newStatus: String
  """The status of the content."""
  status: String!
  """The type of the event, e.g. 'Created' or 'Updated'."""
  type: EnrichedContentEventType
  """The version of the objec."""
  version: Int!
}

enum EnrichedContentEventType {
  CREATED
  DELETED
  PUBLISHED
  STATUS_CHANGED
  UNPUBLISHED
  UPDATED
}

"""The result of a mutation"""
type EntitySavedResultDto {
  """The new version of the item."""
  version: Long!
}

"""The `DateTime` scalar type represents a date and time. `DateTime` expects timestamps to be formatted in accordance with the [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) standard."""
scalar Instant

"""Unstructured Json object"""
scalar JsonScalar

scalar Long

"""The structure of a Migrations content type."""
type Migrations implements Content {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The user who created the object."""
  createdByUser: User!
  """The data of the content."""
  data: MigrationsDataDto!
  """The edit token."""
  editToken: String
  """The flat data of the content."""
  flatData: MigrationsFlatDataDto!
  """The ID of the object (usually GUID)."""
  id: String!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The user who updated the object the last time."""
  lastModifiedByUser: User!
  """The new status of the content."""
  newStatus: String
  """The status color of the content."""
  newStatusColor: String
  """Query Dashboard content items."""
  referencingDashboardContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): [Dashboard!]
  """Query Dashboard content items with total count."""
  referencingDashboardContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): DashboardResultDto
  """The status of the content."""
  status: String!
  """The status color of the content."""
  statusColor: String!
  """The URL to the content."""
  url: String!
  """The version of the objec."""
  version: Int!
}

"""The structure of the Migrations data type."""
type MigrationsDataDto {
  name: MigrationsDataNameDto
}

"""The structure of the Migrations data input type."""
input MigrationsDataInputDto {
  name: MigrationsDataNameInputDto
}

"""The structure of the Name field of the Migrations content type."""
type MigrationsDataNameDto {
  iv: String
}

"""The structure of the Name field of the Migrations content input type."""
input MigrationsDataNameInputDto {
  iv: String
}

"""The structure of the flat Migrations data type."""
type MigrationsFlatDataDto {
  name: String
}

"""List of Migrations items and total count."""
type MigrationsResultDto {
  """The contents."""
  items: [Migrations!]
  """The total count of  contents."""
  total: Int!
}

"""The structure of a Projects content type."""
type Projects implements Content {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The user who created the object."""
  createdByUser: User!
  """The data of the content."""
  data: ProjectsDataDto!
  """The edit token."""
  editToken: String
  """The flat data of the content."""
  flatData: ProjectsFlatDataDto!
  """The ID of the object (usually GUID)."""
  id: String!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The user who updated the object the last time."""
  lastModifiedByUser: User!
  """The new status of the content."""
  newStatus: String
  """The status color of the content."""
  newStatusColor: String
  """Query Users content items."""
  referencesUsersContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): [Users!]
  """Query Users content items with total count."""
  referencesUsersContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): UsersResultDto
  """Query Dashboard content items."""
  referencingDashboardContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): [Dashboard!]
  """Query Dashboard content items with total count."""
  referencingDashboardContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): DashboardResultDto
  """The status of the content."""
  status: String!
  """The status color of the content."""
  statusColor: String!
  """The URL to the content."""
  url: String!
  """The version of the objec."""
  version: Int!
}

"""The structure of the Description field of the Projects content type."""
type ProjectsDataDescriptionDto {
  iv: String
}

"""The structure of the Description field of the Projects content input type."""
input ProjectsDataDescriptionInputDto {
  iv: String
}

"""The structure of the Projects data type."""
type ProjectsDataDto {
  description: ProjectsDataDescriptionDto
  endDate: ProjectsDataEndDateDto
  keywords: ProjectsDataKeywordsDto
  leadEmail: ProjectsDataLeadEmailDto
  members: ProjectsDataMembersDto
  milestones: ProjectsDataMilestonesDto
  pmEmail: ProjectsDataPmEmailDto
  projectProposal: ProjectsDataProjectProposalDto
  resources: ProjectsDataResourcesDto
  startDate: ProjectsDataStartDateDto
  status: ProjectsDataStatusDto
  title: ProjectsDataTitleDto
}

"""The structure of the End Date field of the Projects content type."""
type ProjectsDataEndDateDto {
  iv: Instant
}

"""The structure of the End Date field of the Projects content input type."""
input ProjectsDataEndDateInputDto {
  iv: Instant
}

"""The structure of the Projects data input type."""
input ProjectsDataInputDto {
  description: ProjectsDataDescriptionInputDto
  endDate: ProjectsDataEndDateInputDto
  keywords: ProjectsDataKeywordsInputDto
  leadEmail: ProjectsDataLeadEmailInputDto
  members: ProjectsDataMembersInputDto
  milestones: ProjectsDataMilestonesInputDto
  pmEmail: ProjectsDataPmEmailInputDto
  projectProposal: ProjectsDataProjectProposalInputDto
  resources: ProjectsDataResourcesInputDto
  startDate: ProjectsDataStartDateInputDto
  status: ProjectsDataStatusInputDto
  title: ProjectsDataTitleInputDto
}

"""The structure of the Keywords field of the Projects content type."""
type ProjectsDataKeywordsDto {
  iv: [String!]
}

"""The structure of the Keywords field of the Projects content input type."""
input ProjectsDataKeywordsInputDto {
  iv: [String!]
}

"""The structure of the Lead Email field of the Projects content type."""
type ProjectsDataLeadEmailDto {
  iv: String
}

"""The structure of the Lead Email field of the Projects content input type."""
input ProjectsDataLeadEmailInputDto {
  iv: String
}

"""The structure of the Members nested schema."""
type ProjectsDataMembersChildDto {
  role: ProjectsDataMembersRoleEnum
  user: [Users!]
}

"""The structure of the Members nested schema."""
input ProjectsDataMembersChildInputDto {
  role: ProjectsDataMembersRoleEnum
  user: [String!]
}

"""The structure of the Members field of the Projects content type."""
type ProjectsDataMembersDto {
  iv: [ProjectsDataMembersChildDto!]
}

"""The structure of the Members field of the Projects content input type."""
input ProjectsDataMembersInputDto {
  iv: [ProjectsDataMembersChildInputDto!]
}

enum ProjectsDataMembersRoleEnum {
  """Contributor"""
  Contributor
  """Investigator"""
  Investigator
  """Project_CoLead"""
  Project_CoLead
  """Project_Lead"""
  Project_Lead
  """Project_Manager"""
  Project_Manager
}

"""The structure of the Project Milestones nested schema."""
type ProjectsDataMilestonesChildDto {
  description: String
  link: String
  status: ProjectsDataMilestonesStatusEnum
  title: String
}

"""The structure of the Project Milestones nested schema."""
input ProjectsDataMilestonesChildInputDto {
  description: String
  link: String
  status: ProjectsDataMilestonesStatusEnum
  title: String
}

"""The structure of the Project Milestones field of the Projects content type."""
type ProjectsDataMilestonesDto {
  iv: [ProjectsDataMilestonesChildDto!]
}

"""The structure of the Project Milestones field of the Projects content input type."""
input ProjectsDataMilestonesInputDto {
  iv: [ProjectsDataMilestonesChildInputDto!]
}

enum ProjectsDataMilestonesStatusEnum {
  """Active"""
  Active
  """Completed"""
  Completed
  """Not_Started"""
  Not_Started
}

"""The structure of the PM Email field of the Projects content type."""
type ProjectsDataPmEmailDto {
  iv: String
}

"""The structure of the PM Email field of the Projects content input type."""
input ProjectsDataPmEmailInputDto {
  iv: String
}

"""The structure of the Project Proposal field of the Projects content type."""
type ProjectsDataProjectProposalDto {
  """External link for a project proposal"""
  iv: String
}

"""The structure of the Project Proposal field of the Projects content input type."""
input ProjectsDataProjectProposalInputDto {
  """External link for a project proposal"""
  iv: String
}

"""The structure of the Resources nested schema."""
type ProjectsDataResourcesChildDto {
  description: String
  """External link for a resource"""
  externalLink: String
  title: String
  type: ProjectsDataResourcesTypeEnum
}

"""The structure of the Resources nested schema."""
input ProjectsDataResourcesChildInputDto {
  description: String
  """External link for a resource"""
  externalLink: String
  title: String
  type: ProjectsDataResourcesTypeEnum
}

"""The structure of the Resources field of the Projects content type."""
type ProjectsDataResourcesDto {
  iv: [ProjectsDataResourcesChildDto!]
}

"""The structure of the Resources field of the Projects content input type."""
input ProjectsDataResourcesInputDto {
  iv: [ProjectsDataResourcesChildInputDto!]
}

enum ProjectsDataResourcesTypeEnum {
  """Link"""
  Link
  """Note"""
  Note
}

"""The structure of the Start Date field of the Projects content type."""
type ProjectsDataStartDateDto {
  iv: Instant
}

"""The structure of the Start Date field of the Projects content input type."""
input ProjectsDataStartDateInputDto {
  iv: Instant
}

"""The structure of the Status field of the Projects content type."""
type ProjectsDataStatusDto {
  iv: ProjectsDataStatusEnum
}

enum ProjectsDataStatusEnum {
  """Active"""
  Active
  """Completed"""
  Completed
  """Inactive"""
  Inactive
}

"""The structure of the Status field of the Projects content input type."""
input ProjectsDataStatusInputDto {
  iv: ProjectsDataStatusEnum
}

"""The structure of the Title field of the Projects content type."""
type ProjectsDataTitleDto {
  iv: String
}

"""The structure of the Title field of the Projects content input type."""
input ProjectsDataTitleInputDto {
  iv: String
}

"""The structure of the flat Projects data type."""
type ProjectsFlatDataDto {
  description: String
  endDate: Instant
  keywords: [String!]
  leadEmail: String
  members: [ProjectsDataMembersChildDto!]
  milestones: [ProjectsDataMilestonesChildDto!]
  pmEmail: String
  """External link for a project proposal"""
  projectProposal: String
  resources: [ProjectsDataResourcesChildDto!]
  startDate: Instant
  status: ProjectsDataStatusEnum
  title: String
}

"""List of Projects items and total count."""
type ProjectsResultDto {
  """The contents."""
  items: [Projects!]
  """The total count of  contents."""
  total: Int!
}

"""A user that created or modified a content or asset."""
type User {
  """The display name of this user."""
  displayName: String
  """The email address ofthis  user."""
  email: String
  """The ID of this user."""
  id: String!
}

"""The structure of a Users content type."""
type Users implements Content {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The user who created the object."""
  createdByUser: User!
  """The data of the content."""
  data: UsersDataDto!
  """The edit token."""
  editToken: String
  """The flat data of the content."""
  flatData: UsersFlatDataDto!
  """The ID of the object (usually GUID)."""
  id: String!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The user who updated the object the last time."""
  lastModifiedByUser: User!
  """The new status of the content."""
  newStatus: String
  """The status color of the content."""
  newStatusColor: String
  """Query Dashboard content items."""
  referencingDashboardContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): [Dashboard!]
  """Query Dashboard content items with total count."""
  referencingDashboardContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): DashboardResultDto
  """Query Projects content items."""
  referencingProjectsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): [Projects!]
  """Query Projects content items with total count."""
  referencingProjectsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): ProjectsResultDto
  """Query Working Groups content items."""
  referencingWorkingGroupsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): [WorkingGroups!]
  """Query Working Groups content items with total count."""
  referencingWorkingGroupsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): WorkingGroupsResultDto
  """The status of the content."""
  status: String!
  """The status color of the content."""
  statusColor: String!
  """The URL to the content."""
  url: String!
  """The version of the objec."""
  version: Int!
}

"""The structure of the Avatar field of the Users content type."""
type UsersDataAvatarDto {
  iv: [Asset!]
}

"""The structure of the Avatar field of the Users content input type."""
input UsersDataAvatarInputDto {
  iv: [String!]
}

"""The structure of the Biography field of the Users content type."""
type UsersDataBiographyDto {
  iv: String
}

"""The structure of the Biography field of the Users content input type."""
input UsersDataBiographyInputDto {
  iv: String
}

"""The structure of the City field of the Users content type."""
type UsersDataCityDto {
  iv: String
}

"""The structure of the City field of the Users content input type."""
input UsersDataCityInputDto {
  iv: String
}

"""The structure of the Connections nested schema."""
type UsersDataConnectionsChildDto {
  code: String
}

"""The structure of the Connections nested schema."""
input UsersDataConnectionsChildInputDto {
  code: String
}

"""The structure of the Connections field of the Users content type."""
type UsersDataConnectionsDto {
  iv: [UsersDataConnectionsChildDto!]
}

"""The structure of the Connections field of the Users content input type."""
input UsersDataConnectionsInputDto {
  iv: [UsersDataConnectionsChildInputDto!]
}

"""The structure of the Country field of the Users content type."""
type UsersDataCountryDto {
  iv: String
}

"""The structure of the Country field of the Users content input type."""
input UsersDataCountryInputDto {
  iv: String
}

"""The structure of the Degree field of the Users content type."""
type UsersDataDegreeDto {
  iv: [UsersDataDegreeEnum!]
}

enum UsersDataDegreeEnum {
  """AA"""
  AA
  """AAS"""
  AAS
  """BA"""
  BA
  """BSc"""
  BSc
  """MA"""
  MA
  """MBA"""
  MBA
  """MBBS"""
  MBBS
  """MD"""
  MD
  """MD_PhD"""
  MD_PhD
  """MPH"""
  MPH
  """MSc"""
  MSc
  """PhD"""
  PhD
  """PharmD"""
  PharmD
}

"""The structure of the Degree field of the Users content input type."""
input UsersDataDegreeInputDto {
  iv: [UsersDataDegreeEnum!]
}

"""The structure of the Users data type."""
type UsersDataDto {
  avatar: UsersDataAvatarDto
  biography: UsersDataBiographyDto
  city: UsersDataCityDto
  connections: UsersDataConnectionsDto
  country: UsersDataCountryDto
  degree: UsersDataDegreeDto
  email: UsersDataEmailDto
  firstName: UsersDataFirstNameDto
  fundingStreams: UsersDataFundingStreamsDto
  keywords: UsersDataKeywordsDto
  lastName: UsersDataLastNameDto
  onboarded: UsersDataOnboardedDto
  positions: UsersDataPositionsDto
  questions: UsersDataQuestionsDto
  region: UsersDataRegionDto
  role: UsersDataRoleDto
  secondaryEmail: UsersDataSecondaryEmailDto
  social: UsersDataSocialDto
  telephoneCountryCode: UsersDataTelephoneCountryCodeDto
  telephoneNumber: UsersDataTelephoneNumberDto
}

"""The structure of the Email field of the Users content type."""
type UsersDataEmailDto {
  iv: String
}

"""The structure of the Email field of the Users content input type."""
input UsersDataEmailInputDto {
  iv: String
}

"""The structure of the First Name field of the Users content type."""
type UsersDataFirstNameDto {
  iv: String
}

"""The structure of the First Name field of the Users content input type."""
input UsersDataFirstNameInputDto {
  iv: String
}

"""The structure of the Funding Streams field of the Users content type."""
type UsersDataFundingStreamsDto {
  """This information will be pulled for when GP2 publications arise to share financial conflicts of interests for publications. Please make sure this is up to date!"""
  iv: String
}

"""The structure of the Funding Streams field of the Users content input type."""
input UsersDataFundingStreamsInputDto {
  """This information will be pulled for when GP2 publications arise to share financial conflicts of interests for publications. Please make sure this is up to date!"""
  iv: String
}

"""The structure of the Users data input type."""
input UsersDataInputDto {
  avatar: UsersDataAvatarInputDto
  biography: UsersDataBiographyInputDto
  city: UsersDataCityInputDto
  connections: UsersDataConnectionsInputDto
  country: UsersDataCountryInputDto
  degree: UsersDataDegreeInputDto
  email: UsersDataEmailInputDto
  firstName: UsersDataFirstNameInputDto
  fundingStreams: UsersDataFundingStreamsInputDto
  keywords: UsersDataKeywordsInputDto
  lastName: UsersDataLastNameInputDto
  onboarded: UsersDataOnboardedInputDto
  positions: UsersDataPositionsInputDto
  questions: UsersDataQuestionsInputDto
  region: UsersDataRegionInputDto
  role: UsersDataRoleInputDto
  secondaryEmail: UsersDataSecondaryEmailInputDto
  social: UsersDataSocialInputDto
  telephoneCountryCode: UsersDataTelephoneCountryCodeInputDto
  telephoneNumber: UsersDataTelephoneNumberInputDto
}

"""The structure of the Keywords field of the Users content type."""
type UsersDataKeywordsDto {
  iv: [String!]
}

"""The structure of the Keywords field of the Users content input type."""
input UsersDataKeywordsInputDto {
  iv: [String!]
}

"""The structure of the Last Name field of the Users content type."""
type UsersDataLastNameDto {
  iv: String
}

"""The structure of the Last Name field of the Users content input type."""
input UsersDataLastNameInputDto {
  iv: String
}

"""The structure of the Onboarding complete field of the Users content type."""
type UsersDataOnboardedDto {
  """Use this to allow the user to see the full Hub and skip profile completion"""
  iv: Boolean
}

"""The structure of the Onboarding complete field of the Users content input type."""
input UsersDataOnboardedInputDto {
  """Use this to allow the user to see the full Hub and skip profile completion"""
  iv: Boolean
}

"""The structure of the Positions nested schema."""
type UsersDataPositionsChildDto {
  department: String
  institution: String
  role: String
}

"""The structure of the Positions nested schema."""
input UsersDataPositionsChildInputDto {
  department: String
  institution: String
  role: String
}

"""The structure of the Positions field of the Users content type."""
type UsersDataPositionsDto {
  iv: [UsersDataPositionsChildDto!]
}

"""The structure of the Positions field of the Users content input type."""
input UsersDataPositionsInputDto {
  iv: [UsersDataPositionsChildInputDto!]
}

"""The structure of the Open Questions nested schema."""
type UsersDataQuestionsChildDto {
  question: String
}

"""The structure of the Open Questions nested schema."""
input UsersDataQuestionsChildInputDto {
  question: String
}

"""The structure of the Open Questions field of the Users content type."""
type UsersDataQuestionsDto {
  iv: [UsersDataQuestionsChildDto!]
}

"""The structure of the Open Questions field of the Users content input type."""
input UsersDataQuestionsInputDto {
  iv: [UsersDataQuestionsChildInputDto!]
}

"""The structure of the Region field of the Users content type."""
type UsersDataRegionDto {
  iv: UsersDataRegionEnum
}

enum UsersDataRegionEnum {
  """Africa"""
  Africa
  """Asia"""
  Asia
  """Australia_Australiasia"""
  Australia_Australiasia
  """Europe"""
  Europe
  """Latin_America"""
  Latin_America
  """North_America"""
  North_America
  """South_America"""
  South_America
}

"""The structure of the Region field of the Users content input type."""
input UsersDataRegionInputDto {
  iv: UsersDataRegionEnum
}

"""The structure of the GP2 Hub Role field of the Users content type."""
type UsersDataRoleDto {
  """Role on the GP2 Hub"""
  iv: UsersDataRoleEnum
}

enum UsersDataRoleEnum {
  """Administrator"""
  Administrator
  """Network_Collaborator"""
  Network_Collaborator
  """Network_Investigator"""
  Network_Investigator
  """Trainee"""
  Trainee
  """Working_Group_Participant"""
  Working_Group_Participant
}

"""The structure of the GP2 Hub Role field of the Users content input type."""
input UsersDataRoleInputDto {
  """Role on the GP2 Hub"""
  iv: UsersDataRoleEnum
}

"""The structure of the Alternative Email field of the Users content type."""
type UsersDataSecondaryEmailDto {
  iv: String
}

"""The structure of the Alternative Email field of the Users content input type."""
input UsersDataSecondaryEmailInputDto {
  iv: String
}

"""The structure of the Social Links nested schema."""
type UsersDataSocialChildDto {
  blog: String
  github: String
  googleScholar: String
  linkedIn: String
  orcid: String
  twitter: String
}

"""The structure of the Social Links nested schema."""
input UsersDataSocialChildInputDto {
  blog: String
  github: String
  googleScholar: String
  linkedIn: String
  orcid: String
  twitter: String
}

"""The structure of the Social Links field of the Users content type."""
type UsersDataSocialDto {
  iv: [UsersDataSocialChildDto!]
}

"""The structure of the Social Links field of the Users content input type."""
input UsersDataSocialInputDto {
  iv: [UsersDataSocialChildInputDto!]
}

"""The structure of the Country code field of the Users content type."""
type UsersDataTelephoneCountryCodeDto {
  iv: String
}

"""The structure of the Country code field of the Users content input type."""
input UsersDataTelephoneCountryCodeInputDto {
  iv: String
}

"""The structure of the Telephone number field of the Users content type."""
type UsersDataTelephoneNumberDto {
  iv: String
}

"""The structure of the Telephone number field of the Users content input type."""
input UsersDataTelephoneNumberInputDto {
  iv: String
}

"""The structure of the flat Users data type."""
type UsersFlatDataDto {
  avatar: [Asset!]
  biography: String
  city: String
  connections: [UsersDataConnectionsChildDto!]
  country: String
  degree: [UsersDataDegreeEnum!]
  email: String
  firstName: String
  """This information will be pulled for when GP2 publications arise to share financial conflicts of interests for publications. Please make sure this is up to date!"""
  fundingStreams: String
  keywords: [String!]
  lastName: String
  """Use this to allow the user to see the full Hub and skip profile completion"""
  onboarded: Boolean
  positions: [UsersDataPositionsChildDto!]
  questions: [UsersDataQuestionsChildDto!]
  region: UsersDataRegionEnum
  """Role on the GP2 Hub"""
  role: UsersDataRoleEnum
  secondaryEmail: String
  social: [UsersDataSocialChildDto!]
  telephoneCountryCode: String
  telephoneNumber: String
}

"""List of Users items and total count."""
type UsersResultDto {
  """The contents."""
  items: [Users!]
  """The total count of  contents."""
  total: Int!
}

"""The structure of a Working Group Network content type."""
type WorkingGroupNetwork implements Content {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The user who created the object."""
  createdByUser: User!
  """The data of the content."""
  data: WorkingGroupNetworkDataDto!
  """The edit token."""
  editToken: String
  """The flat data of the content."""
  flatData: WorkingGroupNetworkFlatDataDto!
  """The ID of the object (usually GUID)."""
  id: String!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The user who updated the object the last time."""
  lastModifiedByUser: User!
  """The new status of the content."""
  newStatus: String
  """The status color of the content."""
  newStatusColor: String
  """Query Working Groups content items."""
  referencesWorkingGroupsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): [WorkingGroups!]
  """Query Working Groups content items with total count."""
  referencesWorkingGroupsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): WorkingGroupsResultDto
  """Query Dashboard content items."""
  referencingDashboardContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): [Dashboard!]
  """Query Dashboard content items with total count."""
  referencingDashboardContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): DashboardResultDto
  """The status of the content."""
  status: String!
  """The status color of the content."""
  statusColor: String!
  """The URL to the content."""
  url: String!
  """The version of the objec."""
  version: Int!
}

"""The structure of the Complex Disease Working Groups field of the Working Group Network content type."""
type WorkingGroupNetworkDataComplexDiseaseDto {
  iv: [WorkingGroups!]
}

"""The structure of the Complex Disease Working Groups field of the Working Group Network content input type."""
input WorkingGroupNetworkDataComplexDiseaseInputDto {
  iv: [String!]
}

"""The structure of the Working Group Network data type."""
type WorkingGroupNetworkDataDto {
  complexDisease: WorkingGroupNetworkDataComplexDiseaseDto
  monogenic: WorkingGroupNetworkDataMonogenicDto
  operational: WorkingGroupNetworkDataOperationalDto
  steeringCommitee: WorkingGroupNetworkDataSteeringCommiteeDto
}

"""The structure of the Working Group Network data input type."""
input WorkingGroupNetworkDataInputDto {
  complexDisease: WorkingGroupNetworkDataComplexDiseaseInputDto
  monogenic: WorkingGroupNetworkDataMonogenicInputDto
  operational: WorkingGroupNetworkDataOperationalInputDto
  steeringCommitee: WorkingGroupNetworkDataSteeringCommiteeInputDto
}

"""The structure of the Monogenic Working Groups field of the Working Group Network content type."""
type WorkingGroupNetworkDataMonogenicDto {
  iv: [WorkingGroups!]
}

"""The structure of the Monogenic Working Groups field of the Working Group Network content input type."""
input WorkingGroupNetworkDataMonogenicInputDto {
  iv: [String!]
}

"""The structure of the Operational Working Groups field of the Working Group Network content type."""
type WorkingGroupNetworkDataOperationalDto {
  iv: [WorkingGroups!]
}

"""The structure of the Operational Working Groups field of the Working Group Network content input type."""
input WorkingGroupNetworkDataOperationalInputDto {
  iv: [String!]
}

"""The structure of the Steering Committee field of the Working Group Network content type."""
type WorkingGroupNetworkDataSteeringCommiteeDto {
  iv: [WorkingGroups!]
}

"""The structure of the Steering Committee field of the Working Group Network content input type."""
input WorkingGroupNetworkDataSteeringCommiteeInputDto {
  iv: [String!]
}

"""The structure of the flat Working Group Network data type."""
type WorkingGroupNetworkFlatDataDto {
  complexDisease: [WorkingGroups!]
  monogenic: [WorkingGroups!]
  operational: [WorkingGroups!]
  steeringCommitee: [WorkingGroups!]
}

"""List of Working Group Network items and total count."""
type WorkingGroupNetworkResultDto {
  """The contents."""
  items: [WorkingGroupNetwork!]
  """The total count of  contents."""
  total: Int!
}

"""The structure of a Working Groups content type."""
type WorkingGroups implements Content {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The user who created the object."""
  createdByUser: User!
  """The data of the content."""
  data: WorkingGroupsDataDto!
  """The edit token."""
  editToken: String
  """The flat data of the content."""
  flatData: WorkingGroupsFlatDataDto!
  """The ID of the object (usually GUID)."""
  id: String!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The user who updated the object the last time."""
  lastModifiedByUser: User!
  """The new status of the content."""
  newStatus: String
  """The status color of the content."""
  newStatusColor: String
  """Query Users content items."""
  referencesUsersContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): [Users!]
  """Query Users content items with total count."""
  referencesUsersContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): UsersResultDto
  """Query Dashboard content items."""
  referencingDashboardContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): [Dashboard!]
  """Query Dashboard content items with total count."""
  referencingDashboardContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): DashboardResultDto
  """Query Working Group Network content items."""
  referencingWorkingGroupNetworkContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): [WorkingGroupNetwork!]
  """Query Working Group Network content items with total count."""
  referencingWorkingGroupNetworkContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of items to skip."""
    skip: Int = 0
    """Optional number of items to take."""
    top: Int
  ): WorkingGroupNetworkResultDto
  """The status of the content."""
  status: String!
  """The status color of the content."""
  statusColor: String!
  """The URL to the content."""
  url: String!
  """The version of the objec."""
  version: Int!
}

"""The structure of the Description field of the Working Groups content type."""
type WorkingGroupsDataDescriptionDto {
  iv: String
}

"""The structure of the Description field of the Working Groups content input type."""
input WorkingGroupsDataDescriptionInputDto {
  iv: String
}

"""The structure of the Working Groups data type."""
type WorkingGroupsDataDto {
  description: WorkingGroupsDataDescriptionDto
  leadingMembers: WorkingGroupsDataLeadingMembersDto
  members: WorkingGroupsDataMembersDto
  primaryEmail: WorkingGroupsDataPrimaryEmailDto
  resources: WorkingGroupsDataResourcesDto
  secondaryEmail: WorkingGroupsDataSecondaryEmailDto
  shortDescription: WorkingGroupsDataShortDescriptionDto
  title: WorkingGroupsDataTitleDto
}

"""The structure of the Working Groups data input type."""
input WorkingGroupsDataInputDto {
  description: WorkingGroupsDataDescriptionInputDto
  leadingMembers: WorkingGroupsDataLeadingMembersInputDto
  members: WorkingGroupsDataMembersInputDto
  primaryEmail: WorkingGroupsDataPrimaryEmailInputDto
  resources: WorkingGroupsDataResourcesInputDto
  secondaryEmail: WorkingGroupsDataSecondaryEmailInputDto
  shortDescription: WorkingGroupsDataShortDescriptionInputDto
  title: WorkingGroupsDataTitleInputDto
}

"""The structure of the Leading Members field of the Working Groups content type."""
type WorkingGroupsDataLeadingMembersDto {
  iv: String
}

"""The structure of the Leading Members field of the Working Groups content input type."""
input WorkingGroupsDataLeadingMembersInputDto {
  iv: String
}

"""The structure of the Members nested schema."""
type WorkingGroupsDataMembersChildDto {
  role: WorkingGroupsDataMembersRoleEnum
  user: [Users!]
}

"""The structure of the Members nested schema."""
input WorkingGroupsDataMembersChildInputDto {
  role: WorkingGroupsDataMembersRoleEnum
  user: [String!]
}

"""The structure of the Members field of the Working Groups content type."""
type WorkingGroupsDataMembersDto {
  iv: [WorkingGroupsDataMembersChildDto!]
}

"""The structure of the Members field of the Working Groups content input type."""
input WorkingGroupsDataMembersInputDto {
  iv: [WorkingGroupsDataMembersChildInputDto!]
}

enum WorkingGroupsDataMembersRoleEnum {
  """Co_lead"""
  Co_lead
  """Lead"""
  Lead
  """Working_group_member"""
  Working_group_member
}

"""The structure of the Working Group Email field of the Working Groups content type."""
type WorkingGroupsDataPrimaryEmailDto {
  iv: String
}

"""The structure of the Working Group Email field of the Working Groups content input type."""
input WorkingGroupsDataPrimaryEmailInputDto {
  iv: String
}

"""The structure of the Resources nested schema."""
type WorkingGroupsDataResourcesChildDto {
  description: String
  """External link for a resource"""
  externalLink: String
  title: String
  type: WorkingGroupsDataResourcesTypeEnum
}

"""The structure of the Resources nested schema."""
input WorkingGroupsDataResourcesChildInputDto {
  description: String
  """External link for a resource"""
  externalLink: String
  title: String
  type: WorkingGroupsDataResourcesTypeEnum
}

"""The structure of the Resources field of the Working Groups content type."""
type WorkingGroupsDataResourcesDto {
  iv: [WorkingGroupsDataResourcesChildDto!]
}

"""The structure of the Resources field of the Working Groups content input type."""
input WorkingGroupsDataResourcesInputDto {
  iv: [WorkingGroupsDataResourcesChildInputDto!]
}

enum WorkingGroupsDataResourcesTypeEnum {
  """Link"""
  Link
  """Note"""
  Note
}

"""The structure of the WG's Lead Email field of the Working Groups content type."""
type WorkingGroupsDataSecondaryEmailDto {
  iv: String
}

"""The structure of the WG's Lead Email field of the Working Groups content input type."""
input WorkingGroupsDataSecondaryEmailInputDto {
  iv: String
}

"""The structure of the Short Description field of the Working Groups content type."""
type WorkingGroupsDataShortDescriptionDto {
  iv: String
}

"""The structure of the Short Description field of the Working Groups content input type."""
input WorkingGroupsDataShortDescriptionInputDto {
  iv: String
}

"""The structure of the Title field of the Working Groups content type."""
type WorkingGroupsDataTitleDto {
  iv: String
}

"""The structure of the Title field of the Working Groups content input type."""
input WorkingGroupsDataTitleInputDto {
  iv: String
}

"""The structure of the flat Working Groups data type."""
type WorkingGroupsFlatDataDto {
  description: String
  leadingMembers: String
  members: [WorkingGroupsDataMembersChildDto!]
  primaryEmail: String
  resources: [WorkingGroupsDataResourcesChildDto!]
  secondaryEmail: String
  shortDescription: String
  title: String
}

"""List of Working Groups items and total count."""
type WorkingGroupsResultDto {
  """The contents."""
  items: [WorkingGroups!]
  """The total count of  contents."""
  total: Int!
}
