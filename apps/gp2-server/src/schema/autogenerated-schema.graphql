schema {
  query: AppQueries
  mutation: AppMutations
}

"Enable Memory Caching"
directive @cache(
  """Cache duration in seconds."""
  duration: Int = 600
) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"""The app mutations."""
type AppMutations {
  """Change a Dashboard content."""
  changeDashboardContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String!
    """The status for the content."""
    status: String!
  ): Dashboard!
  """Change a Users content."""
  changeUsersContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String!
    """The status for the content."""
    status: String!
  ): Users!
  """Change a Working Groups content."""
  changeWorkingGroupsContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String!
    """The status for the content."""
    status: String!
  ): WorkingGroups!
  """Creates an Dashboard content."""
  createDashboardContent(
    """The data for the content."""
    data: DashboardDataInputDto!
    """The optional custom content ID."""
    id: String
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Dashboard!
  """Creates an Users content."""
  createUsersContent(
    """The data for the content."""
    data: UsersDataInputDto!
    """The optional custom content ID."""
    id: String
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Users!
  """Creates an Working Groups content."""
  createWorkingGroupsContent(
    """The data for the content."""
    data: WorkingGroupsDataInputDto!
    """The optional custom content ID."""
    id: String
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): WorkingGroups!
  """Delete an Dashboard content."""
  deleteDashboardContent(
    """The expected version."""
    expectedVersion: Int = -2
    """The id of the content (usually GUID)."""
    id: String!
  ): EntitySavedResultDto!
  """Delete an Users content."""
  deleteUsersContent(
    """The expected version."""
    expectedVersion: Int = -2
    """The id of the content (usually GUID)."""
    id: String!
  ): EntitySavedResultDto!
  """Delete an Working Groups content."""
  deleteWorkingGroupsContent(
    """The expected version."""
    expectedVersion: Int = -2
    """The id of the content (usually GUID)."""
    id: String!
  ): EntitySavedResultDto!
  """Patch an Dashboard content by id."""
  patchDashboardContent(
    """The data for the content."""
    data: DashboardDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String
  ): Dashboard!
  """Patch an Users content by id."""
  patchUsersContent(
    """The data for the content."""
    data: UsersDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String
  ): Users!
  """Patch an Working Groups content by id."""
  patchWorkingGroupsContent(
    """The data for the content."""
    data: WorkingGroupsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String
  ): WorkingGroups!
  """Publish a Dashboard content."""
  publishDashboardContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String!
    """The status for the content."""
    status: String!
  ): Dashboard! @deprecated(reason: "Use 'changeDashboardContent' instead")
  """Publish a Users content."""
  publishUsersContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String!
    """The status for the content."""
    status: String!
  ): Users! @deprecated(reason: "Use 'changeUsersContent' instead")
  """Publish a Working Groups content."""
  publishWorkingGroupsContent(
    """The timestamp when the status should be changed."""
    dueTime: Instant
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String!
    """The status for the content."""
    status: String!
  ): WorkingGroups! @deprecated(reason: "Use 'changeWorkingGroupsContent' instead")
  """Update an Dashboard content by id."""
  updateDashboardContent(
    """The data for the content."""
    data: DashboardDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String
  ): Dashboard!
  """Update an Users content by id."""
  updateUsersContent(
    """The data for the content."""
    data: UsersDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String
  ): Users!
  """Update an Working Groups content by id."""
  updateWorkingGroupsContent(
    """The data for the content."""
    data: WorkingGroupsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String
  ): WorkingGroups!
  """Upsert an Dashboard content by id."""
  upsertDashboardContent(
    """The data for the content."""
    data: DashboardDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String!
    """Makes the update as patch."""
    patch: Boolean = false
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Dashboard!
  """Upsert an Users content by id."""
  upsertUsersContent(
    """The data for the content."""
    data: UsersDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String!
    """Makes the update as patch."""
    patch: Boolean = false
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): Users!
  """Upsert an Working Groups content by id."""
  upsertWorkingGroupsContent(
    """The data for the content."""
    data: WorkingGroupsDataInputDto!
    """The expected version."""
    expectedVersion: Int = -2
    """The ID of the object (usually GUID)."""
    id: String!
    """Makes the update as patch."""
    patch: Boolean = false
    """Set to true to autopublish content on create."""
    publish: Boolean = false
    """The initial status."""
    status: String
  ): WorkingGroups!
}

"""The app queries."""
type AppQueries {
  """Find an asset by id."""
  findAsset(
    """The id of the asset (usually GUID)."""
    id: String!
  ): Asset
  """Find an Dashboard content by id."""
  findDashboardContent(
    """The ID of the object (usually GUID)."""
    id: String!
    """The optional version of the content to retrieve an older instance (not cached)."""
    version: Int
  ): Dashboard
  """Find an Users content by id."""
  findUsersContent(
    """The ID of the object (usually GUID)."""
    id: String!
    """The optional version of the content to retrieve an older instance (not cached)."""
    version: Int
  ): Users
  """Find an Working Groups content by id."""
  findWorkingGroupsContent(
    """The ID of the object (usually GUID)."""
    id: String!
    """The optional version of the content to retrieve an older instance (not cached)."""
    version: Int
  ): WorkingGroups
  """Get assets."""
  queryAssets(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional number of assets to skip."""
    skip: Int = 0
    """Optional number of assets to take."""
    top: Int
  ): [Asset!]!
  """Get assets and total count."""
  queryAssetsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional number of assets to skip."""
    skip: Int = 0
    """Optional number of assets to take."""
    top: Int
  ): AssetResultDto!
  """Query Dashboard content items."""
  queryDashboardContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Dashboard!]
  """Query Dashboard content items with total count."""
  queryDashboardContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): DashboardResultDto
  """Query Users content items."""
  queryUsersContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Users!]
  """Query Users content items with total count."""
  queryUsersContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): UsersResultDto
  """Query Working Groups content items."""
  queryWorkingGroupsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [WorkingGroups!]
  """Query Working Groups content items with total count."""
  queryWorkingGroupsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): WorkingGroupsResultDto
}

"""An asset"""
type Asset {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The user who created the object."""
  createdByUser: User!
  """The edit token."""
  editToken: String
  """The hash of the file. Can be null for old files."""
  fileHash: String!
  """The file name of the asset."""
  fileName: String!
  """The size of the file in bytes."""
  fileSize: Int!
  """The file type (file extension) of the asset."""
  fileType: String!
  """The version of the file."""
  fileVersion: Int!
  """The ID of the object (usually GUID)."""
  id: String!
  """Determines if the uploaded file is an image."""
  isImage: Boolean! @deprecated(reason: "Use 'type' field instead.")
  """True, when the asset is not public."""
  isProtected: Boolean!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The user who updated the object the last time."""
  lastModifiedByUser: User!
  """The asset metadata."""
  metadata(
    """The path to the json value."""
    path: String
  ): JsonScalar
  """The type of the image."""
  metadataText: String!
  """The mime type."""
  mimeType: String!
  """The height of the image in pixels if the asset is an image."""
  pixelHeight: Int @deprecated(reason: "Use 'metadata' field instead.")
  """The width of the image in pixels if the asset is an image."""
  pixelWidth: Int @deprecated(reason: "Use 'metadata' field instead.")
  """The file name as slug."""
  slug: String!
  """The source URL of the asset."""
  sourceUrl: String!
  """The asset tags."""
  tags: [String!]!
  """The thumbnail URL to the asset."""
  thumbnailUrl: String
  """The type of the asset."""
  type: AssetType!
  """The URL to the asset."""
  url: String!
  """The version of the objec."""
  version: Int!
}

"""List of assets and total count of assets."""
type AssetResultDto {
  """The assets."""
  items: [Asset!]!
  """The total count of assets."""
  total: Int!
}

enum AssetType {
  AUDIO
  IMAGE
  UNKNOWN
  VIDEO
}

"""The structure of all content types."""
interface Component {
  """The ID of the schema."""
  schemaId: String!
}

"""The structure of all content types."""
interface Content {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The ID of the object (usually GUID)."""
  id: String!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The new status of the content."""
  newStatus: String
  """The status color of the content."""
  newStatusColor: String
  """The status of the content."""
  status: String!
  """The status color of the content."""
  statusColor: String!
  """The URL to the content."""
  url: String!
  """The version of the objec."""
  version: Int!
}

"""The structure of a Dashboard content type."""
type Dashboard implements Content {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The user who created the object."""
  createdByUser: User!
  """The data of the content."""
  data: DashboardDataDto!
  """The edit token."""
  editToken: String
  """The flat data of the content."""
  flatData: DashboardFlatDataDto!
  """The ID of the object (usually GUID)."""
  id: String!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The user who updated the object the last time."""
  lastModifiedByUser: User!
  """The new status of the content."""
  newStatus: String
  """The status color of the content."""
  newStatusColor: String
  """Query Dashboard content items."""
  referencesDashboardContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Dashboard!]
  """Query Dashboard content items with total count."""
  referencesDashboardContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): DashboardResultDto
  """Query Users content items."""
  referencesUsersContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Users!]
  """Query Users content items with total count."""
  referencesUsersContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): UsersResultDto
  """Query Working Groups content items."""
  referencesWorkingGroupsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [WorkingGroups!]
  """Query Working Groups content items with total count."""
  referencesWorkingGroupsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): WorkingGroupsResultDto
  """Query Dashboard content items."""
  referencingDashboardContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Dashboard!]
  """Query Dashboard content items with total count."""
  referencingDashboardContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): DashboardResultDto
  """Query Users content items."""
  referencingUsersContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Users!]
  """Query Users content items with total count."""
  referencingUsersContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): UsersResultDto
  """The status of the content."""
  status: String!
  """The status color of the content."""
  statusColor: String!
  """The URL to the content."""
  url: String!
  """The version of the objec."""
  version: Int!
}

"""The structure of the Dashboard data type."""
type DashboardDataDto {
  news: DashboardDataNewsDto
  pages: DashboardDataPagesDto
}

"""The structure of the Dashboard data input type."""
input DashboardDataInputDto {
  news: DashboardDataNewsInputDto
  pages: DashboardDataPagesInputDto
}

"""The structure of the Latest News from ASAP field of the Dashboard content type."""
type DashboardDataNewsDto {
  iv: [DashboardDataNewsUnionDto!]
}

"""The structure of the Latest News from ASAP field of the Dashboard content input type."""
input DashboardDataNewsInputDto {
  iv: [String!]
}

union DashboardDataNewsUnionDto = Dashboard | Users | WorkingGroups

"""The structure of the Where to Start field of the Dashboard content type."""
type DashboardDataPagesDto {
  iv: [DashboardDataPagesUnionDto!]
}

"""The structure of the Where to Start field of the Dashboard content input type."""
input DashboardDataPagesInputDto {
  iv: [String!]
}

union DashboardDataPagesUnionDto = Dashboard | Users | WorkingGroups

"""The structure of the flat Dashboard data type."""
type DashboardFlatDataDto {
  news: [DashboardDataNewsUnionDto!]
  pages: [DashboardDataPagesUnionDto!]
}

"""List of Dashboard items and total count."""
type DashboardResultDto {
  """The contents."""
  items: [Dashboard!]
  """The total count of  contents."""
  total: Int!
}

"""The result of a mutation"""
type EntitySavedResultDto {
  """The new version of the item."""
  version: Long!
}

"""The `DateTime` scalar type represents a date and time. `DateTime` expects timestamps to be formatted in accordance with the [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) standard."""
scalar Instant

"""Unstructured Json object"""
scalar JsonScalar

scalar Long

"""A user that created or modified a content or asset."""
type User {
  """The display name of this user."""
  displayName: String
  """The email address ofthis  user."""
  email: String
  """The ID of this user."""
  id: String!
}

"""The structure of a Users content type."""
type Users implements Content {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The user who created the object."""
  createdByUser: User!
  """The data of the content."""
  data: UsersDataDto!
  """The edit token."""
  editToken: String
  """The flat data of the content."""
  flatData: UsersFlatDataDto!
  """The ID of the object (usually GUID)."""
  id: String!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The user who updated the object the last time."""
  lastModifiedByUser: User!
  """The new status of the content."""
  newStatus: String
  """The status color of the content."""
  newStatusColor: String
  """Query Dashboard content items."""
  referencesDashboardContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Dashboard!]
  """Query Dashboard content items with total count."""
  referencesDashboardContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): DashboardResultDto
  """Query Users content items."""
  referencesUsersContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Users!]
  """Query Users content items with total count."""
  referencesUsersContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): UsersResultDto
  """Query Working Groups content items."""
  referencesWorkingGroupsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [WorkingGroups!]
  """Query Working Groups content items with total count."""
  referencesWorkingGroupsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): WorkingGroupsResultDto
  """Query Dashboard content items."""
  referencingDashboardContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Dashboard!]
  """Query Dashboard content items with total count."""
  referencingDashboardContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): DashboardResultDto
  """Query Users content items."""
  referencingUsersContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Users!]
  """Query Users content items with total count."""
  referencingUsersContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): UsersResultDto
  """Query Working Groups content items."""
  referencingWorkingGroupsContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [WorkingGroups!]
  """Query Working Groups content items with total count."""
  referencingWorkingGroupsContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): WorkingGroupsResultDto
  """The status of the content."""
  status: String!
  """The status color of the content."""
  statusColor: String!
  """The URL to the content."""
  url: String!
  """The version of the objec."""
  version: Int!
}

"""The structure of the Admin Notes field of the Users content type."""
type UsersDataAdminNotesDto {
  iv: String
}

"""The structure of the Admin Notes field of the Users content input type."""
input UsersDataAdminNotesInputDto {
  iv: String
}

"""The structure of the Avatar field of the Users content type."""
type UsersDataAvatarDto {
  iv: [Asset!]
}

"""The structure of the Avatar field of the Users content input type."""
input UsersDataAvatarInputDto {
  iv: [String!]
}

"""The structure of the Biography field of the Users content type."""
type UsersDataBiographyDto {
  iv: String
}

"""The structure of the Biography field of the Users content input type."""
input UsersDataBiographyInputDto {
  iv: String
}

"""The structure of the City field of the Users content type."""
type UsersDataCityDto {
  iv: String
}

"""The structure of the City field of the Users content input type."""
input UsersDataCityInputDto {
  iv: String
}

"""The structure of the Connections nested schema."""
type UsersDataConnectionsChildDto {
  code: String
}

"""The structure of the Connections nested schema."""
input UsersDataConnectionsChildInputDto {
  code: String
}

"""The structure of the Connections field of the Users content type."""
type UsersDataConnectionsDto {
  iv: [UsersDataConnectionsChildDto!]
}

"""The structure of the Connections field of the Users content input type."""
input UsersDataConnectionsInputDto {
  iv: [UsersDataConnectionsChildInputDto!]
}

"""The structure of the Correspondence Email field of the Users content type."""
type UsersDataContactEmailDto {
  iv: String
}

"""The structure of the Correspondence Email field of the Users content input type."""
input UsersDataContactEmailInputDto {
  iv: String
}

"""The structure of the Country field of the Users content type."""
type UsersDataCountryDto {
  iv: String
}

"""The structure of the Country field of the Users content input type."""
input UsersDataCountryInputDto {
  iv: String
}

"""The structure of the Degree field of the Users content type."""
type UsersDataDegreeDto {
  iv: String
}

"""The structure of the Degree field of the Users content input type."""
input UsersDataDegreeInputDto {
  iv: String
}

"""The structure of the Dismissed Getting Started dialog field of the Users content type."""
type UsersDataDismissedGettingStartedDto {
  """Use this field to dismiss the getting started dialog."""
  iv: Boolean
}

"""The structure of the Dismissed Getting Started dialog field of the Users content input type."""
input UsersDataDismissedGettingStartedInputDto {
  """Use this field to dismiss the getting started dialog."""
  iv: Boolean
}

"""The structure of the Users data type."""
type UsersDataDto {
  adminNotes: UsersDataAdminNotesDto
  avatar: UsersDataAvatarDto
  biography: UsersDataBiographyDto
  city: UsersDataCityDto
  connections: UsersDataConnectionsDto
  contactEmail: UsersDataContactEmailDto
  country: UsersDataCountryDto
  degree: UsersDataDegreeDto
  dismissedGettingStarted: UsersDataDismissedGettingStartedDto
  email: UsersDataEmailDto
  expertiseAndResourceDescription: UsersDataExpertiseAndResourceDescriptionDto
  expertiseAndResourceTags: UsersDataExpertiseAndResourceTagsDto
  firstName: UsersDataFirstNameDto
  institution: UsersDataInstitutionDto
  jobTitle: UsersDataJobTitleDto
  labs: UsersDataLabsDto
  lastModifiedDate: UsersDataLastModifiedDateDto
  lastName: UsersDataLastNameDto
  onboarded: UsersDataOnboardedDto
  orcid: UsersDataOrcidDto
  orcidLastModifiedDate: UsersDataOrcidLastModifiedDateDto
  orcidLastSyncDate: UsersDataOrcidLastSyncDateDto
  orcidWorks: UsersDataOrcidWorksDto
  questions: UsersDataQuestionsDto
  reachOut: UsersDataReachOutDto
  researchInterests: UsersDataResearchInterestsDto
  responsibilities: UsersDataResponsibilitiesDto
  role: UsersDataRoleDto
  social: UsersDataSocialDto
}

"""The structure of the Email field of the Users content type."""
type UsersDataEmailDto {
  iv: String
}

"""The structure of the Email field of the Users content input type."""
input UsersDataEmailInputDto {
  iv: String
}

"""The structure of the Expertise and Resources Description field of the Users content type."""
type UsersDataExpertiseAndResourceDescriptionDto {
  iv: String
}

"""The structure of the Expertise and Resources Description field of the Users content input type."""
input UsersDataExpertiseAndResourceDescriptionInputDto {
  iv: String
}

"""The structure of the Expertise and Resources field of the Users content type."""
type UsersDataExpertiseAndResourceTagsDto {
  iv: [String!]
}

"""The structure of the Expertise and Resources field of the Users content input type."""
input UsersDataExpertiseAndResourceTagsInputDto {
  iv: [String!]
}

"""The structure of the First Name field of the Users content type."""
type UsersDataFirstNameDto {
  iv: String
}

"""The structure of the First Name field of the Users content input type."""
input UsersDataFirstNameInputDto {
  iv: String
}

"""The structure of the Users data input type."""
input UsersDataInputDto {
  adminNotes: UsersDataAdminNotesInputDto
  avatar: UsersDataAvatarInputDto
  biography: UsersDataBiographyInputDto
  city: UsersDataCityInputDto
  connections: UsersDataConnectionsInputDto
  contactEmail: UsersDataContactEmailInputDto
  country: UsersDataCountryInputDto
  degree: UsersDataDegreeInputDto
  dismissedGettingStarted: UsersDataDismissedGettingStartedInputDto
  email: UsersDataEmailInputDto
  expertiseAndResourceDescription: UsersDataExpertiseAndResourceDescriptionInputDto
  expertiseAndResourceTags: UsersDataExpertiseAndResourceTagsInputDto
  firstName: UsersDataFirstNameInputDto
  institution: UsersDataInstitutionInputDto
  jobTitle: UsersDataJobTitleInputDto
  labs: UsersDataLabsInputDto
  lastModifiedDate: UsersDataLastModifiedDateInputDto
  lastName: UsersDataLastNameInputDto
  onboarded: UsersDataOnboardedInputDto
  orcid: UsersDataOrcidInputDto
  orcidLastModifiedDate: UsersDataOrcidLastModifiedDateInputDto
  orcidLastSyncDate: UsersDataOrcidLastSyncDateInputDto
  orcidWorks: UsersDataOrcidWorksInputDto
  questions: UsersDataQuestionsInputDto
  reachOut: UsersDataReachOutInputDto
  researchInterests: UsersDataResearchInterestsInputDto
  responsibilities: UsersDataResponsibilitiesInputDto
  role: UsersDataRoleInputDto
  social: UsersDataSocialInputDto
}

"""The structure of the Institution field of the Users content type."""
type UsersDataInstitutionDto {
  iv: String
}

"""The structure of the Institution field of the Users content input type."""
input UsersDataInstitutionInputDto {
  iv: String
}

"""The structure of the Job Title field of the Users content type."""
type UsersDataJobTitleDto {
  iv: String
}

"""The structure of the Job Title field of the Users content input type."""
input UsersDataJobTitleInputDto {
  iv: String
}

"""The structure of the Labs field of the Users content type."""
type UsersDataLabsDto {
  """Mandatory for grantees. They cannot publish profile without a lab."""
  iv: [UsersDataLabsUnionDto!]
}

"""The structure of the Labs field of the Users content input type."""
input UsersDataLabsInputDto {
  """Mandatory for grantees. They cannot publish profile without a lab."""
  iv: [String!]
}

union UsersDataLabsUnionDto = Dashboard | Users | WorkingGroups

"""The structure of the Last Modified Date field of the Users content type."""
type UsersDataLastModifiedDateDto {
  iv: String
}

"""The structure of the Last Modified Date field of the Users content input type."""
input UsersDataLastModifiedDateInputDto {
  iv: String
}

"""The structure of the Last Name field of the Users content type."""
type UsersDataLastNameDto {
  iv: String
}

"""The structure of the Last Name field of the Users content input type."""
input UsersDataLastNameInputDto {
  iv: String
}

"""The structure of the Onboarding complete field of the Users content type."""
type UsersDataOnboardedDto {
  """Use this to allow the user to see the full Hub and skip profile completion"""
  iv: Boolean
}

"""The structure of the Onboarding complete field of the Users content input type."""
input UsersDataOnboardedInputDto {
  """Use this to allow the user to see the full Hub and skip profile completion"""
  iv: Boolean
}

"""The structure of the ORCID field of the Users content type."""
type UsersDataOrcidDto {
  """Mandatory for grantees. They cannot publish profile without an ORCID. ORCIDs cannot be repeated on the Hub"""
  iv: String
}

"""The structure of the ORCID field of the Users content input type."""
input UsersDataOrcidInputDto {
  """Mandatory for grantees. They cannot publish profile without an ORCID. ORCIDs cannot be repeated on the Hub"""
  iv: String
}

"""The structure of the ORCID Last Modified Date field of the Users content type."""
type UsersDataOrcidLastModifiedDateDto {
  iv: String
}

"""The structure of the ORCID Last Modified Date field of the Users content input type."""
input UsersDataOrcidLastModifiedDateInputDto {
  iv: String
}

"""The structure of the ORCID Last Sync Date field of the Users content type."""
type UsersDataOrcidLastSyncDateDto {
  iv: String
}

"""The structure of the ORCID Last Sync Date field of the Users content input type."""
input UsersDataOrcidLastSyncDateInputDto {
  iv: String
}

"""The structure of the ORCID Works nested schema."""
type UsersDataOrcidWorksChildDto {
  doi: String
  id: String
  lastModifiedDate: String
  publicationDate(
    """The path to the json value."""
    path: String
  ): JsonScalar
  title: String
  type: String
}

"""The structure of the ORCID Works nested schema."""
input UsersDataOrcidWorksChildInputDto {
  doi: String
  id: String
  lastModifiedDate: String
  publicationDate: JsonScalar
  title: String
  type: String
}

"""The structure of the ORCID Works field of the Users content type."""
type UsersDataOrcidWorksDto {
  iv: [UsersDataOrcidWorksChildDto!]
}

"""The structure of the ORCID Works field of the Users content input type."""
input UsersDataOrcidWorksInputDto {
  iv: [UsersDataOrcidWorksChildInputDto!]
}

"""The structure of the Open Questions nested schema."""
type UsersDataQuestionsChildDto {
  question: String
}

"""The structure of the Open Questions nested schema."""
input UsersDataQuestionsChildInputDto {
  question: String
}

"""The structure of the Open Questions field of the Users content type."""
type UsersDataQuestionsDto {
  iv: [UsersDataQuestionsChildDto!]
}

"""The structure of the Open Questions field of the Users content input type."""
input UsersDataQuestionsInputDto {
  iv: [UsersDataQuestionsChildInputDto!]
}

"""The structure of the Reach Out field of the Users content type."""
type UsersDataReachOutDto {
  """Reach out reasons (only relevant for "Staff" users)"""
  iv: String
}

"""The structure of the Reach Out field of the Users content input type."""
input UsersDataReachOutInputDto {
  """Reach out reasons (only relevant for "Staff" users)"""
  iv: String
}

"""The structure of the Research Interests field of the Users content type."""
type UsersDataResearchInterestsDto {
  iv: String
}

"""The structure of the Research Interests field of the Users content input type."""
input UsersDataResearchInterestsInputDto {
  iv: String
}

"""The structure of the Responsibilities field of the Users content type."""
type UsersDataResponsibilitiesDto {
  iv: String
}

"""The structure of the Responsibilities field of the Users content input type."""
input UsersDataResponsibilitiesInputDto {
  iv: String
}

"""The structure of the ASAP Hub Role field of the Users content type."""
type UsersDataRoleDto {
  """Role on the ASAP Hub"""
  iv: String
}

"""The structure of the ASAP Hub Role field of the Users content input type."""
input UsersDataRoleInputDto {
  """Role on the ASAP Hub"""
  iv: String
}

"""The structure of the Social Links nested schema."""
type UsersDataSocialChildDto {
  github: String
  googleScholar: String
  linkedIn: String
  researchGate: String
  researcherId: String
  twitter: String
  website1: String
  website2: String
}

"""The structure of the Social Links nested schema."""
input UsersDataSocialChildInputDto {
  github: String
  googleScholar: String
  linkedIn: String
  researchGate: String
  researcherId: String
  twitter: String
  website1: String
  website2: String
}

"""The structure of the Social Links field of the Users content type."""
type UsersDataSocialDto {
  iv: [UsersDataSocialChildDto!]
}

"""The structure of the Social Links field of the Users content input type."""
input UsersDataSocialInputDto {
  iv: [UsersDataSocialChildInputDto!]
}

"""The structure of the flat Users data type."""
type UsersFlatDataDto {
  adminNotes: String
  avatar: [Asset!]
  biography: String
  city: String
  connections: [UsersDataConnectionsChildDto!]
  contactEmail: String
  country: String
  degree: String
  """Use this field to dismiss the getting started dialog."""
  dismissedGettingStarted: Boolean
  email: String
  expertiseAndResourceDescription: String
  expertiseAndResourceTags: [String!]
  firstName: String
  institution: String
  jobTitle: String
  """Mandatory for grantees. They cannot publish profile without a lab."""
  labs: [UsersDataLabsUnionDto!]
  lastModifiedDate: String
  lastName: String
  """Use this to allow the user to see the full Hub and skip profile completion"""
  onboarded: Boolean
  """Mandatory for grantees. They cannot publish profile without an ORCID. ORCIDs cannot be repeated on the Hub"""
  orcid: String
  orcidLastModifiedDate: String
  orcidLastSyncDate: String
  orcidWorks: [UsersDataOrcidWorksChildDto!]
  questions: [UsersDataQuestionsChildDto!]
  """Reach out reasons (only relevant for "Staff" users)"""
  reachOut: String
  researchInterests: String
  responsibilities: String
  """Role on the ASAP Hub"""
  role: String
  social: [UsersDataSocialChildDto!]
}

"""List of Users items and total count."""
type UsersResultDto {
  """The contents."""
  items: [Users!]
  """The total count of  contents."""
  total: Int!
}

"""The structure of a Working Groups content type."""
type WorkingGroups implements Content {
  """The timestamp when the object was created."""
  created: Instant!
  """The user who created the object."""
  createdBy: String!
  """The user who created the object."""
  createdByUser: User!
  """The data of the content."""
  data: WorkingGroupsDataDto!
  """The edit token."""
  editToken: String
  """The flat data of the content."""
  flatData: WorkingGroupsFlatDataDto!
  """The ID of the object (usually GUID)."""
  id: String!
  """The timestamp when the object was updated the last time."""
  lastModified: Instant!
  """The user who updated the object the last time."""
  lastModifiedBy: String!
  """The user who updated the object the last time."""
  lastModifiedByUser: User!
  """The new status of the content."""
  newStatus: String
  """The status color of the content."""
  newStatusColor: String
  """Query Users content items."""
  referencesUsersContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Users!]
  """Query Users content items with total count."""
  referencesUsersContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): UsersResultDto
  """Query Dashboard content items."""
  referencingDashboardContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Dashboard!]
  """Query Dashboard content items with total count."""
  referencingDashboardContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): DashboardResultDto
  """Query Users content items."""
  referencingUsersContents(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): [Users!]
  """Query Users content items with total count."""
  referencingUsersContentsWithTotal(
    """Optional OData filter."""
    filter: String
    """Optional OData order definition."""
    orderby: String
    """Optional OData full text search."""
    search: String
    """Optional number of contents to skip."""
    skip: Int = 0
    """Optional number of contents to take."""
    top: Int
  ): UsersResultDto
  """The status of the content."""
  status: String!
  """The status color of the content."""
  statusColor: String!
  """The URL to the content."""
  url: String!
  """The version of the objec."""
  version: Int!
}

"""The structure of the Description field of the Working Groups content type."""
type WorkingGroupsDataDescriptionDto {
  iv: String
}

"""The structure of the Description field of the Working Groups content input type."""
input WorkingGroupsDataDescriptionInputDto {
  iv: String
}

"""The structure of the Working Groups data type."""
type WorkingGroupsDataDto {
  description: WorkingGroupsDataDescriptionDto
  leadingMembers: WorkingGroupsDataLeadingMembersDto
  members: WorkingGroupsDataMembersDto
  primaryEmail: WorkingGroupsDataPrimaryEmailDto
  secondaryEmail: WorkingGroupsDataSecondaryEmailDto
  shortDescription: WorkingGroupsDataShortDescriptionDto
  title: WorkingGroupsDataTitleDto
}

"""The structure of the Working Groups data input type."""
input WorkingGroupsDataInputDto {
  description: WorkingGroupsDataDescriptionInputDto
  leadingMembers: WorkingGroupsDataLeadingMembersInputDto
  members: WorkingGroupsDataMembersInputDto
  primaryEmail: WorkingGroupsDataPrimaryEmailInputDto
  secondaryEmail: WorkingGroupsDataSecondaryEmailInputDto
  shortDescription: WorkingGroupsDataShortDescriptionInputDto
  title: WorkingGroupsDataTitleInputDto
}

"""The structure of the Leading Members field of the Working Groups content type."""
type WorkingGroupsDataLeadingMembersDto {
  iv: String
}

"""The structure of the Leading Members field of the Working Groups content input type."""
input WorkingGroupsDataLeadingMembersInputDto {
  iv: String
}

"""The structure of the Members nested schema."""
type WorkingGroupsDataMembersChildDto {
  role: String
  user: [Users!]
}

"""The structure of the Members nested schema."""
input WorkingGroupsDataMembersChildInputDto {
  role: String
  user: [String!]
}

"""The structure of the Members field of the Working Groups content type."""
type WorkingGroupsDataMembersDto {
  iv: [WorkingGroupsDataMembersChildDto!]
}

"""The structure of the Members field of the Working Groups content input type."""
input WorkingGroupsDataMembersInputDto {
  iv: [WorkingGroupsDataMembersChildInputDto!]
}

"""The structure of the Working Group Email field of the Working Groups content type."""
type WorkingGroupsDataPrimaryEmailDto {
  iv: String
}

"""The structure of the Working Group Email field of the Working Groups content input type."""
input WorkingGroupsDataPrimaryEmailInputDto {
  iv: String
}

"""The structure of the WG's Lead Email field of the Working Groups content type."""
type WorkingGroupsDataSecondaryEmailDto {
  iv: String
}

"""The structure of the WG's Lead Email field of the Working Groups content input type."""
input WorkingGroupsDataSecondaryEmailInputDto {
  iv: String
}

"""The structure of the Short Description field of the Working Groups content type."""
type WorkingGroupsDataShortDescriptionDto {
  iv: String
}

"""The structure of the Short Description field of the Working Groups content input type."""
input WorkingGroupsDataShortDescriptionInputDto {
  iv: String
}

"""The structure of the Title field of the Working Groups content type."""
type WorkingGroupsDataTitleDto {
  iv: String
}

"""The structure of the Title field of the Working Groups content input type."""
input WorkingGroupsDataTitleInputDto {
  iv: String
}

"""The structure of the flat Working Groups data type."""
type WorkingGroupsFlatDataDto {
  description: String
  leadingMembers: String
  members: [WorkingGroupsDataMembersChildDto!]
  primaryEmail: String
  secondaryEmail: String
  shortDescription: String
  title: String
}

"""List of Working Groups items and total count."""
type WorkingGroupsResultDto {
  """The contents."""
  items: [WorkingGroups!]
  """The total count of  contents."""
  total: Int!
}
