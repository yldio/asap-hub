import {
  ContentfulWebhookPublishPayload,
  gp2 as gp2Contentful,
} from '@asap-hub/contentful';
import { gp2 as gp2Model } from '@asap-hub/model';
import { FetchNewsQuery } from '../../src/autogenerated-gql/graphql';

export const getContentfulGraphqlNews = (): NonNullable<
  NonNullable<gp2Contentful.FetchNewsQuery['newsCollection']>['items'][number]
> => ({
  title: 'a news item',
  shortText: 'the short text of the news',
  link: 'http://example.com/a-link',
  linkText: 'some link text',
  sys: {
    id: '42',
    firstPublishedAt: '2020-09-08T16:35:28.000Z',
  },
  sampleCount: 3,
  articleCount: 11,
  cohortCount: 43,
  publishDate: '2021-12-28T00:00:00.000Z',
});

export const getContentfulNewsGraphqlResponse =
  (): gp2Contentful.FetchNewsQuery => ({
    newsCollection: {
      total: 1,
      items: [getContentfulGraphqlNews()],
    },
  });

export const getGraphQLNews = (): NonNullable<
  NonNullable<
    NonNullable<FetchNewsQuery>['queryNewsAndEventsContentsWithTotal']
  >['items']
>[number] => ({
  id: '42',
  created: '2021-12-28',
  lastModified: '2021-12-28',
  version: 11,
  flatData: {
    title: 'a news item',
    shortText: 'the short text of the news',
    sampleCount: 3,
    articleCount: 11,
    cohortCount: 43,
    link: 'http://example.com/a-link',
    linkText: 'some link text',
  },
});
export const getSquidexNewsGraphqlResponse = (): FetchNewsQuery => ({
  queryNewsAndEventsContentsWithTotal: {
    total: 1,
    items: [getGraphQLNews()],
  },
});

export const getNewsDataObject = (): gp2Model.NewsDataObject => ({
  id: '42',
  title: 'a news item',
  shortText: 'the short text of the news',
  created: '2021-12-28T00:00:00.000Z',
  sampleCount: 3,
  articleCount: 11,
  cohortCount: 43,
  link: 'http://example.com/a-link',
  linkText: 'some link text',
});

export const getListNewsDataObject = (): gp2Model.ListNewsDataObject => ({
  total: 1,
  items: [getNewsDataObject()],
});

export const getNewsResponse = (): gp2Model.NewsResponse => getNewsDataObject();

export const getListNewsResponse = (): gp2Model.ListNewsResponse => ({
  total: 1,
  items: [getNewsResponse()],
});

export const getNewsPublishContentfulWebhookPayload =
  (): ContentfulWebhookPublishPayload<'news'> => ({
    metadata: {
      tags: [],
    },
    sys: {
      type: 'Entry',
      id: '4daRnfRhQ1spRmTrqeP2M6',
      space: {
        sys: {
          type: 'Link',
          linkType: 'Space',
          id: '5v6w5j61tndm',
        },
      },
      environment: {
        sys: {
          id: 'crn-2802',
          type: 'Link',
          linkType: 'Environment',
        },
      },
      contentType: {
        sys: {
          type: 'Link',
          linkType: 'ContentType',
          id: 'news',
        },
      },
      createdBy: {
        sys: {
          type: 'Link',
          linkType: 'User',
          id: '1W39zODWXRZZPH4On1MQoS',
        },
      },
      updatedBy: {
        sys: {
          type: 'Link',
          linkType: 'User',
          id: '1W39zODWXRZZPH4On1MQoS',
        },
      },
      revision: 5,
      createdAt: '2023-03-21T08:00:32.852Z',
      updatedAt: '2023-03-22T13:42:11.345Z',
    },
    fields: {
      title: {
        'en-US': 'test',
      },
      shortText: {
        'en-US': 'test',
      },
      frequency: {
        'en-US': 'Biweekly Newsletter',
      },
      text: {
        'en-US': {
          data: {},
          content: [
            {
              data: {},
              content: [
                {
                  data: {},
                  marks: [],
                  value: 'test testssbbeee',
                  nodeType: 'text',
                },
              ],
              nodeType: 'paragraph',
            },
          ],
          nodeType: 'document',
        },
      },
      publishDate: {
        'en-US': '2023-03-21T00:00+00:00',
      },
    },
  });
