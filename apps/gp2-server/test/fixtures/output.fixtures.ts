import type { gp2 as gp2Contentful } from '@asap-hub/contentful';
import { gp2 as gp2Model, ListResponse } from '@asap-hub/model';
import { gp2 as gp2Squidex } from '@asap-hub/squidex';
import {
  FetchOutputQuery,
  FetchOutputsQuery,
  OutputsDataDocumentTypeEnum,
  OutputsDataSubtypeEnum,
  OutputsDataTypeEnum,
} from '../../src/autogenerated-gql/graphql';
import {
  OutputCreateData,
  OutputUpdateData,
} from '../../src/controllers/output.controller';

export const getSquidexOutputsGraphqlResponse = (): FetchOutputsQuery => ({
  queryOutputsContentsWithTotal: {
    total: 1,
    items: [getSquidexGraphqlOutput()],
  },
});

export const getSquidexOutputGraphqlResponseAuthors = (): NonNullable<
  NonNullable<FetchOutputQuery['findOutputsContent']>['flatData']['authors']
> => [
  {
    __typename: 'Users',
    lastModified: '2020-10-26T15:33:18Z',
    version: 42,
    created: '2020-09-23T20:45:22Z',
    id: 'user-id-1',
    flatData: {
      firstName: 'Tony',
      lastName: 'Stark',
      email: 'tony.stark@email.com',
      onboarded: true,
      avatar: [],
    },
  },
  {
    __typename: 'Users',
    lastModified: '2020-10-26T15:33:18Z',
    version: 42,
    created: '2020-09-23T20:45:22Z',
    id: 'user-id-2',
    flatData: {
      firstName: 'Peter',
      lastName: 'Parker',
      email: 'peter.parker@email.com',
      onboarded: true,
      avatar: [],
    },
  },
];

export const getSquidexOutputGraphqlResponse = (): FetchOutputQuery => ({
  findOutputsContent: getSquidexGraphqlOutput(),
});

export const getSquidexGraphqlOutput = (): NonNullable<
  FetchOutputQuery['findOutputsContent']
> => ({
  id: 'ec3086d4-aa64-4f30-a0f7-5c5b95ffbcca',
  created: '2020-09-23T16:34:26.842Z',
  lastModified: '2021-05-14T14:48:46Z',
  version: 42,
  flatData: {
    documentType: OutputsDataDocumentTypeEnum.Article,
    title: 'Test Proposal 1234',
    link: 'http://a.link',
    addedDate: '2021-05-21T13:18:31Z',
    publishDate: '2021-05-21T13:18:31Z',
    lastUpdatedPartial: '2020-09-23T16:34:26.842Z',
    authors: getSquidexOutputGraphqlResponseAuthors(),
    type: OutputsDataTypeEnum.Research,
    subtype: OutputsDataSubtypeEnum.Published,
    workingGroups: [],
    projects: [
      {
        id: '42',
        flatData: {
          title: 'A Project',
        },
      },
    ],
  },
});

export const getOutputDataObject = (): gp2Model.OutputDataObject => ({
  id: 'ec3086d4-aa64-4f30-a0f7-5c5b95ffbcca',
  created: '2020-09-23T16:34:26.842Z',
  documentType: 'Article',
  type: 'Research',
  addedDate: '2021-05-21T13:18:31.000Z',
  title: 'Test Proposal 1234',
  link: 'http://a.link',
  authors: [
    {
      id: 'user-id-1',
      firstName: 'Tony',
      lastName: 'Stark',
      email: 'tony.stark@email.com',
      displayName: 'Tony Stark',
      onboarded: true,
    },
    {
      id: 'user-id-2',
      firstName: 'Peter',
      lastName: 'Parker',
      displayName: 'Peter Parker',
      email: 'peter.parker@email.com',
      onboarded: true,
    },
  ],
  publishDate: '2021-05-21T13:18:31.000Z',
  lastUpdatedPartial: '2020-09-23T16:34:26.842Z',
  subtype: 'Published',
  projects: {
    id: '42',
    title: 'A Project',
  },
});

export const getListOutputDataObject =
  (): ListResponse<gp2Model.OutputDataObject> => ({
    total: 1,
    items: [getOutputDataObject()],
  });

export const getOutputResponse = (): gp2Model.OutputResponse =>
  getOutputDataObject();

export const getListOutputResponse = (): gp2Model.ListOutputResponse => ({
  total: 1,
  items: [getOutputResponse()],
});

export const getOutputPostRequest = (): gp2Model.OutputPostRequest => {
  const {
    id: _,
    created: _created,
    lastUpdatedPartial: _lastUpdatedPartial,
    addedDate: _addedDate,
    authors,
    workingGroups,
    projects,
    ...outputResponse
  } = getOutputResponse();
  return {
    ...outputResponse,
    link: 'http://a.link',
    type: 'Research',
    authors: authors.map(({ id }) => ({ userId: id })),
  };
};

export const getOutputPutRequest = (): gp2Model.OutputPutRequest =>
  getOutputPostRequest();

export const getOutputCreateData = (): OutputCreateData => ({
  ...getOutputPostRequest(),
  createdBy: 'userId',
});

export const getOutputCreateDataObject =
  (): gp2Model.OutputCreateDataObject => {
    const {
      authors,
      id: _id,
      lastUpdatedPartial: _lastUpdatedPartial,
      created: _created,
      workingGroups,
      projects,
      ...outputPostRequest
    } = getOutputResponse();

    return {
      ...outputPostRequest,
      createdBy: 'userId',
      authors: authors.map(({ id }) => ({ userId: id })),
    };
  };

export const getOutputUpdateDataObject =
  (): gp2Model.OutputUpdateDataObject => {
    const { createdBy: _, ...outputCreateDataObject } =
      getOutputCreateDataObject();

    return {
      ...outputCreateDataObject,
      updatedBy: 'userId',
    };
  };

export const getRestOutputCreateData = (): gp2Squidex.InputOutput['data'] => ({
  documentType: { iv: 'Article' },
  link: { iv: 'http://a.link' },
  title: { iv: 'Test Proposal 1234' },
  addedDate: { iv: '2021-05-21T13:18:31.000Z' },
  subtype: {
    iv: 'Published',
  },
  type: { iv: 'Research' },
  authors: { iv: ['user-id-1', 'user-id-2'] },
  createdBy: { iv: ['userId'] },
  updatedBy: { iv: ['userId'] },
});

export const getOutputUpdateData = (): OutputUpdateData => ({
  ...getOutputPutRequest(),
  updatedBy: 'userId',
});

export const getRestOutputUpdateData = (): gp2Squidex.InputOutput['data'] => {
  const { createdBy: _, ...outputData } = getRestOutputCreateData();
  return outputData;
};

export const getContentfulGraphqlOutput = (
  props = {},
): NonNullable<NonNullable<gp2Contentful.FetchOutputByIdQuery['outputs']>> => ({
  sys: {
    id: 'ec3086d4-aa64-4f30-a0f7-5c5b95ffbcca',
    firstPublishedAt: '2020-09-23T16:34:26.842Z',
    publishedAt: '2023-05-30T11:07:50.172Z',
    publishedVersion: 12,
  },
  title: 'Test Proposal 1234',
  documentType: 'Article',
  type: 'Research',
  subtype: 'Published',
  link: 'http://a.link',
  addedDate: '2021-05-21T13:18:31.000Z',
  publishDate: '2021-05-21T13:18:31.000Z',
  lastUpdatedPartial: '2020-09-23T16:34:26.842Z',
  relatedEntity: {
    __typename: 'Projects',
    sys: {
      id: '42',
    },
    title: 'A Project',
  },
  authorsCollection: {
    total: 2,
    items: [
      {
        __typename: 'Users',
        sys: {
          id: 'user-id-1',
        },
        firstName: 'Tony',
        lastName: 'Stark',
        email: 'tony.stark@email.com',
        avatar: null,
        onboarded: true,
      },
      {
        __typename: 'Users',
        sys: {
          id: 'user-id-2',
        },
        firstName: 'Peter',
        lastName: 'Parker',
        email: 'peter.parker@email.com',
        avatar: null,
        onboarded: true,
      },
    ],
  },
});

export const getContentfulOutputsGraphqlResponse =
  (): gp2Contentful.FetchOutputsQuery => ({
    outputsCollection: {
      total: 1,
      items: [getContentfulGraphqlOutput()],
    },
  });
