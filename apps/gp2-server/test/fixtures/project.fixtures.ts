import type { gp2 } from '@asap-hub/model';
import {
  FetchProjectQuery,
  FetchProjectsQuery,
} from '../../src/autogenerated-gql/graphql';
import {
  GraphQLProject,
  GraphQLProjectMember,
} from '../../src/data-providers/project.data-provider';

export const getProjectDataObject = (): gp2.ProjectDataObject => ({
  id: '42',
  title: 'A Project',
  startDate: '2020-07-06',
  endDate: '2021-12-28',
  status: 'Completed',
  projectProposalUrl: 'http://a-proposal',
  members: [],
  keywords: ['R'],
  description: 'test description',
  leadEmail: 'peter@parker.com',
  pmEmail: 'tony@stark.com',
});

export const getListProjectDataObject = (): gp2.ListProjectResponse => ({
  total: 1,
  items: [getProjectDataObject()],
});

export const getProjectResponse = (): gp2.ProjectResponse =>
  getProjectDataObject();

export const getListProjectsResponse = (): gp2.ListProjectResponse => ({
  total: 1,
  items: [getProjectResponse()],
});

export const getSquidexProjectsGraphqlResponse = (): FetchProjectsQuery => ({
  queryProjectsContentsWithTotal: {
    total: 1,
    items: [getGraphQLProject()],
  },
});

export const getSquidexProjectGraphqlResponse = (
  findProjectsContent = getGraphQLProject(),
): FetchProjectQuery => ({
  findProjectsContent,
});

export const getGraphQLProject = (): GraphQLProject => ({
  id: '42',
  flatData: {
    title: 'A Project',
    startDate: '2020-07-06',
    endDate: '2021-12-28',
    status: 'Completed',
    projectProposal: 'http://a-proposal',
    members: [],
    description: 'test description',
    keywords: ['R'],
    pmEmail: 'tony@stark.com',
    leadEmail: 'peter@parker.com',
  },
});
export const getGraphQLProjectMember = (): GraphQLProjectMember => ({
  user: [
    {
      id: '42',
      created: '2021-01-01T00:00:00Z',
      lastModified: '2021-01-01T00:00:00Z',
      version: 1,
      flatData: {
        firstName: 'Tony',
        lastName: 'Stark',
        avatar: null,
      },
    },
  ],
});
