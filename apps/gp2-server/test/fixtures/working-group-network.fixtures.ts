import type { gp2 } from '@asap-hub/model';
import { FetchWorkingGroupNetworkQuery } from '../../src/autogenerated-gql/graphql';
import { GraphQLWorkingGroupNetwork } from '../../src/data-providers/working-group-network.data-provider';
import {
  getGraphQLWorkingGroup,
  getWorkingGroupDataObject,
} from './working-group.fixtures';

export const getWorkingGroupNetworkDataObject =
  (): gp2.WorkingGroupNetworkDataObject[] => [
    {
      role: 'complexDisease',
      workingGroups: [getWorkingGroupDataObject()],
    },
    {
      role: 'monogenic',
      workingGroups: [getWorkingGroupDataObject()],
    },
    {
      role: 'operational',
      workingGroups: [getWorkingGroupDataObject()],
    },
    {
      role: 'support',
      workingGroups: [getWorkingGroupDataObject()],
    },
  ];

export const getGraphQLWorkingGroupNetwork = (): GraphQLWorkingGroupNetwork => {
  return {
    id: '11',
    flatData: {
      complexDisease: [getGraphQLWorkingGroup()],
      operational: [getGraphQLWorkingGroup()],
      support: [getGraphQLWorkingGroup()],
      monogenic: [getGraphQLWorkingGroup()],
    },
  };
};

export const getListWorkingGroupNetworkDataObject =
  (): gp2.ListWorkingGroupNetworkResponse => ({
    total: 4,
    items: getWorkingGroupNetworkDataObject(),
  });

export const getSquidexWorkingGroupNetworkGraphqlResponse =
  (): FetchWorkingGroupNetworkQuery => ({
    queryWorkingGroupNetworkContents: [getGraphQLWorkingGroupNetwork()],
  });

export const getListWorkingGroupNetworkResponse =
  (): gp2.ListWorkingGroupNetworkResponse => ({
    total: 4,
    items: getWorkingGroupNetworkDataObject(),
  });
