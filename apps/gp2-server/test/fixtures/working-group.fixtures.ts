import type { gp2 as gp2Model } from '@asap-hub/model';
import type { gp2 as gp2Squidex } from '@asap-hub/squidex';
import {
  FetchWorkingGroupQuery,
  FetchWorkingGroupsQuery,
  WorkingGroupsDataMembersRoleEnum,
  WorkingGroupsDataResourcesTypeEnum,
} from '../../src/autogenerated-gql/graphql';
import {
  GraphQLWorkingGroup,
  GraphQLWorkingGroupCalendar,
  GraphQLWorkingGroupMember,
  GraphQLWorkingGroupResource,
} from '../../src/data-providers/working-group.data-provider';

export const getWorkingGroupDataObject = (): gp2Model.WorkingGroupDataObject => ({
  id: '11',
  title: 'a working group title',
  shortDescription: 'Short description',
  description: 'longer description',
  primaryEmail: 'primary.email@example.com',
  secondaryEmail: 'secondary.email@example.com',
  leadingMembers: 'Leading members',
  members: [
    { userId: '11', firstName: 'Tony', lastName: 'Stark', role: 'Lead' },
  ],
  milestones: [
    {
      title: 'A working group milestone',
      status: 'Active',
    },
  ],
  resources: [
    {
      type: 'Note',
      description: 'Working group resource description',
      title: 'Working group resource title',
    },
  ],
  calendar: {
    id: '42',
    name: 'working group calendar',
  },
});

export const getWorkingGroupUpdateDataObject =
  (): gp2Model.WorkingGroupUpdateDataObject => ({
    resources: [
      {
        type: 'Note',
        description: 'Working group resource description',
        title: 'Working group resource title',
      },
    ],
  });

export const getRestWorkingGroupUpdateData =
  (): gp2Squidex.InputWorkingGroup['data'] => ({
    resources: {
      iv: [
        {
          type: 'Note',
          description: 'Working group resource description',
          title: 'Working group resource title',
        },
      ],
    },
  });

export const getListWorkingGroupDataObject =
  (): gp2Model.ListWorkingGroupResponse => ({
    total: 1,
    items: [getWorkingGroupDataObject()],
  });

export const getWorkingGroupResponse = (): gp2Model.WorkingGroupResponse =>
  getWorkingGroupDataObject();

export const getListWorkingGroupsResponse =
  (): gp2Model.ListWorkingGroupResponse => ({
    total: 1,
    items: [getWorkingGroupResponse()],
  });

export const getSquidexWorkingGroupsGraphqlResponse =
  (): FetchWorkingGroupsQuery => ({
    queryWorkingGroupsContentsWithTotal: {
      total: 1,
      items: [getGraphQLWorkingGroup()],
    },
  });

export const getSquidexWorkingGroupGraphqlResponse = (
  findWorkingGroupsContent = getGraphQLWorkingGroup(),
): FetchWorkingGroupQuery => ({
  findWorkingGroupsContent,
});

export const getGraphQLWorkingGroupMember = (): GraphQLWorkingGroupMember => ({
  role: WorkingGroupsDataMembersRoleEnum.Lead,
  user: [
    {
      id: '11',
      created: '2021-01-01T00:00:00Z',
      lastModified: '2021-01-01T00:00:00Z',
      version: 1,
      flatData: {
        firstName: 'Tony',
        lastName: 'Stark',
        avatar: null,
        onboarded: true,
      },
    },
  ],
});

export const getGraphQLWorkingGroupResource =
  (): GraphQLWorkingGroupResource => ({
    type: WorkingGroupsDataResourcesTypeEnum.Note,
    title: 'Working group resource title',
    description: 'Working group resource description',
    externalLink: null,
  });

export const getGraphQLWorkingGroupCalendar =
  (): GraphQLWorkingGroupCalendar => ({
    id: '42',
    flatData: {
      name: 'working group calendar',
    },
  });
export const getGraphQLWorkingGroup = (): GraphQLWorkingGroup => ({
  id: '11',
  flatData: {
    title: 'a working group title',
    shortDescription: 'Short description',
    description: 'longer description',
    primaryEmail: 'primary.email@example.com',
    secondaryEmail: 'secondary.email@example.com',
    leadingMembers: 'Leading members',
    members: [getGraphQLWorkingGroupMember()],
    resources: [getGraphQLWorkingGroupResource()],
    calendars: [getGraphQLWorkingGroupCalendar()],
  },
});
