# https://gitlab.com/yldio/asap-hub/-/ci/lint

variables:
  INTEGRATION_DOCKER_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH/node-python-sq:latest
  SQUIDEX_BASE_DOCKER_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH/squidex-utils:latest

build:docker-images:
  image: docker:19.03.12
  stage: .pre
  services:
    - docker:19.03.12-dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $SQUIDEX_BASE_DOCKER_IMAGE . -f dev/base.Dockerfile
    - docker push $SQUIDEX_BASE_DOCKER_IMAGE
    - docker build -t $INTEGRATION_DOCKER_IMAGE . -f ci/integration/Dockerfile
    - docker push $INTEGRATION_DOCKER_IMAGE

test:integration:
  image: $INTEGRATION_DOCKER_IMAGE
  before_script:
    - export SQUIDEX_APP_NAME=$CI_COMMIT_BRANCH-$CI_JOB_ID
    - export SQUIDEX_CLIENT_ID=$SQUIDEX_TEST_CLIENT_ID
    - export SQUIDEX_CLIENT_SECRET=$SQUIDEX_TEST_CLIENT_SECRET
    - python ci/integration/scripts/create-app.py
  script:
    - echo "Running Integration tests against $SQUIDEX_APP_NAME"
    # Prevent failing tests from exiting the job
    - yarn test:integration || test_exit_code=$?
    - echo "Deleting $SQUIDEX_APP_NAME"
    - python ci/integration/scripts/delete-app.py
    # If tests fail return exit code now
    - exit $test_exit_code
  stage: test

.tmpl:sync: &tmpl_sync
  image: $SQUIDEX_BASE_DOCKER_IMAGE
  before_script:
    - ./ci/config-squidex-rules.sh
  script:
    - sq config add $SQUIDEX_APP_NAME $SQUIDEX_CLIENT_ID $SQUIDEX_CLIENT_SECRET -u $SQUIDEX_BASE_URL
    - sq config use $SQUIDEX_APP_NAME
    - sq sync in packages/squidex/schema -t schemas -t rules --delete
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'

sync:squidex:dev:
  <<: *tmpl_sync
  stage: prepare-dev

sync:squidex:production:
  <<: *tmpl_sync
  stage: prepare-prod
  environment:
    name: production
