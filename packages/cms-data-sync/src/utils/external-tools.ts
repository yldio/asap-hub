import { addLocaleToFields } from '@asap-hub/contentful';
import { TeamTool } from '@asap-hub/model';
import { Environment, SysLink } from 'contentful-management';
import { TeamsDataToolsChildDto } from '../autogenerated-gql/graphql';

export const createExternalTool = async (
  contentfulEnvironment: Environment,
  tools: TeamTool[],
) => {
  const publishedTools = await Promise.all(
    tools.map(async (tool) => {
      const entry = await contentfulEnvironment.createEntry('externalTools', {
        fields: addLocaleToFields(tool),
      });
      return entry.publish();
    }),
  );

  return publishedTools;
};

export const createExternalToolLinks = async (
  contentfulEnvironment: Environment,
  tools: Pick<TeamsDataToolsChildDto, 'description' | 'name' | 'url'>[],
): Promise<SysLink[]> => {
  const cleanTools = tools.map((tool) =>
    Object.entries(tool).reduce((acc, [key, value]) => {
      if (key === 'url') {
        const regex = new RegExp(
          '^(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-/]))?$',
        );
        if (value && !regex.test(value)) {
          throw new Error();
        }
      }
      return value?.trim && value?.trim() === ''
        ? acc // deleted field
        : { ...acc, [key]: value };
    }, {} as TeamTool),
  );

  const contentfulPublishedTools = await createExternalTool(
    contentfulEnvironment,
    cleanTools,
  );
  return contentfulPublishedTools.map((contentfulPublishedTool) => ({
    sys: {
      type: 'Link',
      linkType: 'Entry',
      id: contentfulPublishedTool.sys.id,
    },
  }));
};
