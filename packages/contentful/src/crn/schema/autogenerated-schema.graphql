schema {
  query: Query
}

"""Represents a binary file in a space. An asset can be any file type."""
type Asset {
  contentType(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  fileName(locale: String): String
  height(locale: String): Int
  linkedFrom(allowedLocales: [String]): AssetLinkingCollections
  size(locale: String): Int
  sys: Sys!
  title(locale: String): String
  url(locale: String, transform: ImageTransformOptions): String
  width(locale: String): Int
}

type AssetCollection {
  items: [Asset]!
  limit: Int!
  skip: Int!
  total: Int!
}

input AssetFilter {
  AND: [AssetFilter]
  OR: [AssetFilter]
  contentType: String
  contentType_contains: String
  contentType_exists: Boolean
  contentType_in: [String]
  contentType_not: String
  contentType_not_contains: String
  contentType_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  fileName: String
  fileName_contains: String
  fileName_exists: Boolean
  fileName_in: [String]
  fileName_not: String
  fileName_not_contains: String
  fileName_not_in: [String]
  height: Int
  height_exists: Boolean
  height_gt: Int
  height_gte: Int
  height_in: [Int]
  height_lt: Int
  height_lte: Int
  height_not: Int
  height_not_in: [Int]
  size: Int
  size_exists: Boolean
  size_gt: Int
  size_gte: Int
  size_in: [Int]
  size_lt: Int
  size_lte: Int
  size_not: Int
  size_not_in: [Int]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
  width: Int
  width_exists: Boolean
  width_gt: Int
  width_gte: Int
  width_in: [Int]
  width_lt: Int
  width_lte: Int
  width_not: Int
  width_not_in: [Int]
}

type AssetLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum AssetOrder {
  contentType_ASC
  contentType_DESC
  fileName_ASC
  fileName_DESC
  height_ASC
  height_DESC
  size_ASC
  size_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  url_ASC
  url_DESC
  width_ASC
  width_DESC
}

type ContentfulMetadata {
  tags: [ContentfulTag]!
}

input ContentfulMetadataFilter {
  tags: ContentfulMetadataTagsFilter
  tags_exists: Boolean
}

input ContentfulMetadataTagsFilter {
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

"""
Represents a tag entity for finding and organizing content easily.
    Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags
"""
type ContentfulTag {
  id: String
  name: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z,
    compliant with the 'date-time' format outlined in section 5.6 of
    the RFC 3339 profile of the ISO 8601 standard for representation
    of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`."""
scalar Dimension

interface Entry {
  contentfulMetadata: ContentfulMetadata!
  sys: Sys!
}

type EntryCollection {
  items: [Entry]!
  limit: Int!
  skip: Int!
  total: Int!
}

input EntryFilter {
  AND: [EntryFilter]
  OR: [EntryFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

enum EntryOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""[See type definition](https://app.contentful.com/spaces/5v6w5j61tndm/content_types/externalAuthors)"""
type ExternalAuthors implements Entry {
  contentfulMetadata: ContentfulMetadata!
  email(locale: String): String
  firstName(locale: String): String
  id(locale: String): String
  labsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ExternalAuthorsLabsCollection
  lastName(locale: String): String
  linkedFrom(allowedLocales: [String]): ExternalAuthorsLinkingCollections
  orcid(locale: String): String
  separatorBasicData(locale: String): ExternalAuthorsSeparatorBasicData
  sys: Sys!
  teamsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ExternalAuthorsTeamsCollection
}

type ExternalAuthorsCollection {
  items: [ExternalAuthors]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ExternalAuthorsFilter {
  AND: [ExternalAuthorsFilter]
  OR: [ExternalAuthorsFilter]
  contentfulMetadata: ContentfulMetadataFilter
  email: String
  email_contains: String
  email_exists: Boolean
  email_in: [String]
  email_not: String
  email_not_contains: String
  email_not_in: [String]
  firstName: String
  firstName_contains: String
  firstName_exists: Boolean
  firstName_in: [String]
  firstName_not: String
  firstName_not_contains: String
  firstName_not_in: [String]
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  labsCollection_exists: Boolean
  lastName: String
  lastName_contains: String
  lastName_exists: Boolean
  lastName_in: [String]
  lastName_not: String
  lastName_not_contains: String
  lastName_not_in: [String]
  orcid: String
  orcid_contains: String
  orcid_exists: Boolean
  orcid_in: [String]
  orcid_not: String
  orcid_not_contains: String
  orcid_not_in: [String]
  separatorBasicData_contains: String
  separatorBasicData_exists: Boolean
  separatorBasicData_not_contains: String
  sys: SysFilter
  teamsCollection_exists: Boolean
}

type ExternalAuthorsLabsCollection {
  items: [Labs]!
  limit: Int!
  skip: Int!
  total: Int!
}

type ExternalAuthorsLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  sharedOutputsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): SharedOutputsCollection
}

enum ExternalAuthorsOrder {
  email_ASC
  email_DESC
  firstName_ASC
  firstName_DESC
  id_ASC
  id_DESC
  lastName_ASC
  lastName_DESC
  orcid_ASC
  orcid_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type ExternalAuthorsSeparatorBasicData {
  json: JSON!
  links: ExternalAuthorsSeparatorBasicDataLinks!
}

type ExternalAuthorsSeparatorBasicDataAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ExternalAuthorsSeparatorBasicDataEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ExternalAuthorsSeparatorBasicDataLinks {
  assets: ExternalAuthorsSeparatorBasicDataAssets!
  entries: ExternalAuthorsSeparatorBasicDataEntries!
}

type ExternalAuthorsTeamsCollection {
  items: [Teams]!
  limit: Int!
  skip: Int!
  total: Int!
}

"""The 'HexColor' type represents color in `rgb:ffffff` string format."""
scalar HexColor

enum ImageFormat {
  AVIF
  """JPG image format."""
  JPG
  """
  Progressive JPG format stores multiple passes of an image in progressively higher detail.
          When a progressive image is loading, the viewer will first see a lower quality pixelated version which
          will gradually improve in detail, until the image is fully downloaded. This is to display an image as
          early as possible to make the layout look as designed.
  """
  JPG_PROGRESSIVE
  """PNG image format"""
  PNG
  """
  8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
          The 8-bit PNG format is mostly used for simple images, such as icons or logos.
  """
  PNG8
  """WebP image format."""
  WEBP
}

enum ImageResizeFocus {
  """Focus the resizing on the bottom."""
  BOTTOM
  """Focus the resizing on the bottom left."""
  BOTTOM_LEFT
  """Focus the resizing on the bottom right."""
  BOTTOM_RIGHT
  """Focus the resizing on the center."""
  CENTER
  """Focus the resizing on the largest face."""
  FACE
  """Focus the resizing on the area containing all the faces."""
  FACES
  """Focus the resizing on the left."""
  LEFT
  """Focus the resizing on the right."""
  RIGHT
  """Focus the resizing on the top."""
  TOP
  """Focus the resizing on the top left."""
  TOP_LEFT
  """Focus the resizing on the top right."""
  TOP_RIGHT
}

enum ImageResizeStrategy {
  """Crops a part of the original image to fit into the specified dimensions."""
  CROP
  """Resizes the image to the specified dimensions, cropping the image if needed."""
  FILL
  """Resizes the image to fit into the specified dimensions."""
  FIT
  """
  Resizes the image to the specified dimensions, padding the image if needed.
          Uses desired background color as padding color.
  """
  PAD
  """Resizes the image to the specified dimensions, changing the original aspect ratio if needed."""
  SCALE
  """Creates a thumbnail from the image."""
  THUMB
}

input ImageTransformOptions {
  """
  Desired background color, used with corner radius or `PAD` resize strategy.
          Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
  """
  backgroundColor: HexColor
  """
  Desired corner radius in pixels.
          Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
          Defaults to `0`. Uses desired background color as padding color,
          unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
  """
  cornerRadius: Int
  """Desired image format. Defaults to the original image format."""
  format: ImageFormat
  """Desired height in pixels. Defaults to the original image height."""
  height: Dimension
  """
  Desired quality of the image in percents.
          Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
  """
  quality: Quality
  """Desired resize focus area. Defaults to `CENTER`."""
  resizeFocus: ImageResizeFocus
  """Desired resize strategy. Defaults to `FIT`."""
  resizeStrategy: ImageResizeStrategy
  """Desired width in pixels. Defaults to the original image width."""
  width: Dimension
}

"""The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."""
scalar JSON

"""[See type definition](https://app.contentful.com/spaces/5v6w5j61tndm/content_types/labs)"""
type Labs implements Entry {
  contentfulMetadata: ContentfulMetadata!
  id(locale: String): String
  linkedFrom(allowedLocales: [String]): LabsLinkingCollections
  name(locale: String): String
  sys: Sys!
  test(locale: String): Int
}

type LabsCollection {
  items: [Labs]!
  limit: Int!
  skip: Int!
  total: Int!
}

input LabsFilter {
  AND: [LabsFilter]
  OR: [LabsFilter]
  contentfulMetadata: ContentfulMetadataFilter
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  sys: SysFilter
  test: Int
  test_exists: Boolean
  test_gt: Int
  test_gte: Int
  test_in: [Int]
  test_lt: Int
  test_lte: Int
  test_not: Int
  test_not_in: [Int]
}

type LabsLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  externalAuthorsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ExternalAuthorsCollection
  sharedOutputsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): SharedOutputsCollection
  usersCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): UsersCollection
}

enum LabsOrder {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  test_ASC
  test_DESC
}

"""The 'Quality' type represents quality as whole numeric values between `1` and `100`."""
scalar Quality

type Query {
  asset(id: String!, locale: String, preview: Boolean): Asset
  assetCollection(limit: Int = 100, locale: String, order: [AssetOrder], preview: Boolean, skip: Int = 0, where: AssetFilter): AssetCollection
  entryCollection(limit: Int = 100, locale: String, order: [EntryOrder], preview: Boolean, skip: Int = 0, where: EntryFilter): EntryCollection
  externalAuthors(id: String!, locale: String, preview: Boolean): ExternalAuthors
  externalAuthorsCollection(limit: Int = 100, locale: String, order: [ExternalAuthorsOrder], preview: Boolean, skip: Int = 0, where: ExternalAuthorsFilter): ExternalAuthorsCollection
  labs(id: String!, locale: String, preview: Boolean): Labs
  labsCollection(limit: Int = 100, locale: String, order: [LabsOrder], preview: Boolean, skip: Int = 0, where: LabsFilter): LabsCollection
  sharedOutputs(id: String!, locale: String, preview: Boolean): SharedOutputs
  sharedOutputsCollection(limit: Int = 100, locale: String, order: [SharedOutputsOrder], preview: Boolean, skip: Int = 0, where: SharedOutputsFilter): SharedOutputsCollection
  teams(id: String!, locale: String, preview: Boolean): Teams
  teamsCollection(limit: Int = 100, locale: String, order: [TeamsOrder], preview: Boolean, skip: Int = 0, where: TeamsFilter): TeamsCollection
  userTeam(id: String!, locale: String, preview: Boolean): UserTeam
  userTeamCollection(limit: Int = 100, locale: String, order: [UserTeamOrder], preview: Boolean, skip: Int = 0, where: UserTeamFilter): UserTeamCollection
  users(id: String!, locale: String, preview: Boolean): Users
  usersCollection(limit: Int = 100, locale: String, order: [UsersOrder], preview: Boolean, skip: Int = 0, where: UsersFilter): UsersCollection
}

"""[See type definition](https://app.contentful.com/spaces/5v6w5j61tndm/content_types/sharedOutputs)"""
type SharedOutputs implements Entry {
  authorsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): SharedOutputsAuthorsCollection
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): SharedOutputsDescription
  id(locale: String): String
  labsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): SharedOutputsLabsCollection
  linkedFrom(allowedLocales: [String]): SharedOutputsLinkingCollections
  sys: Sys!
  title(locale: String): String
}

type SharedOutputsAuthorsCollection {
  items: [SharedOutputsAuthorsItem]!
  limit: Int!
  skip: Int!
  total: Int!
}

union SharedOutputsAuthorsItem = ExternalAuthors | Users

type SharedOutputsCollection {
  items: [SharedOutputs]!
  limit: Int!
  skip: Int!
  total: Int!
}

type SharedOutputsDescription {
  json: JSON!
  links: SharedOutputsDescriptionLinks!
}

type SharedOutputsDescriptionAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type SharedOutputsDescriptionEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type SharedOutputsDescriptionLinks {
  assets: SharedOutputsDescriptionAssets!
  entries: SharedOutputsDescriptionEntries!
}

input SharedOutputsFilter {
  AND: [SharedOutputsFilter]
  OR: [SharedOutputsFilter]
  authorsCollection_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  description_contains: String
  description_exists: Boolean
  description_not_contains: String
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  labsCollection_exists: Boolean
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type SharedOutputsLabsCollection {
  items: [Labs]!
  limit: Int!
  skip: Int!
  total: Int!
}

type SharedOutputsLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  teamsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): TeamsCollection
}

enum SharedOutputsOrder {
  id_ASC
  id_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type Sys {
  environmentId: String!
  firstPublishedAt: DateTime
  id: String!
  publishedAt: DateTime
  publishedVersion: Int
  spaceId: String!
}

input SysFilter {
  firstPublishedAt: DateTime
  firstPublishedAt_exists: Boolean
  firstPublishedAt_gt: DateTime
  firstPublishedAt_gte: DateTime
  firstPublishedAt_in: [DateTime]
  firstPublishedAt_lt: DateTime
  firstPublishedAt_lte: DateTime
  firstPublishedAt_not: DateTime
  firstPublishedAt_not_in: [DateTime]
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  publishedAt: DateTime
  publishedAt_exists: Boolean
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  publishedAt_in: [DateTime]
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  publishedAt_not: DateTime
  publishedAt_not_in: [DateTime]
  publishedVersion: Float
  publishedVersion_exists: Boolean
  publishedVersion_gt: Float
  publishedVersion_gte: Float
  publishedVersion_in: [Float]
  publishedVersion_lt: Float
  publishedVersion_lte: Float
  publishedVersion_not: Float
  publishedVersion_not_in: [Float]
}

"""[See type definition](https://app.contentful.com/spaces/5v6w5j61tndm/content_types/teams)"""
type Teams implements Entry {
  contentfulMetadata: ContentfulMetadata!
  displayName(locale: String): String
  id(locale: String): String
  linkedFrom(allowedLocales: [String]): TeamsLinkingCollections
  outputsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): TeamsOutputsCollection
  sys: Sys!
}

type TeamsCollection {
  items: [Teams]!
  limit: Int!
  skip: Int!
  total: Int!
}

input TeamsFilter {
  AND: [TeamsFilter]
  OR: [TeamsFilter]
  contentfulMetadata: ContentfulMetadataFilter
  displayName: String
  displayName_contains: String
  displayName_exists: Boolean
  displayName_in: [String]
  displayName_not: String
  displayName_not_contains: String
  displayName_not_in: [String]
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  outputsCollection_exists: Boolean
  sys: SysFilter
}

type TeamsLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  externalAuthorsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ExternalAuthorsCollection
  userTeamCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): UserTeamCollection
  usersCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): UsersCollection
}

enum TeamsOrder {
  displayName_ASC
  displayName_DESC
  id_ASC
  id_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type TeamsOutputsCollection {
  items: [SharedOutputs]!
  limit: Int!
  skip: Int!
  total: Int!
}

"""[See type definition](https://app.contentful.com/spaces/5v6w5j61tndm/content_types/userTeam)"""
type UserTeam implements Entry {
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): UserTeamLinkingCollections
  sys: Sys!
  team(locale: String, preview: Boolean): Teams
  user(locale: String, preview: Boolean): Users
}

type UserTeamCollection {
  items: [UserTeam]!
  limit: Int!
  skip: Int!
  total: Int!
}

input UserTeamFilter {
  AND: [UserTeamFilter]
  OR: [UserTeamFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
  team: cfTeamsNestedFilter
  team_exists: Boolean
  user: cfUsersNestedFilter
  user_exists: Boolean
}

type UserTeamLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  usersCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): UsersCollection
}

enum UserTeamOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""[See type definition](https://app.contentful.com/spaces/5v6w5j61tndm/content_types/users)"""
type Users implements Entry {
  contentfulMetadata: ContentfulMetadata!
  email(locale: String): String
  firstName(locale: String): String
  id(locale: String): String
  labsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): UsersLabsCollection
  lastName(locale: String): String
  linkedFrom(allowedLocales: [String]): UsersLinkingCollections
  orcid(locale: String): String
  separatorBasicData(locale: String): UsersSeparatorBasicData
  sys: Sys!
  teamsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): UsersTeamsCollection
  type(locale: String): String
  userTeam(locale: String, preview: Boolean): UserTeam
}

type UsersCollection {
  items: [Users]!
  limit: Int!
  skip: Int!
  total: Int!
}

input UsersFilter {
  AND: [UsersFilter]
  OR: [UsersFilter]
  contentfulMetadata: ContentfulMetadataFilter
  email: String
  email_contains: String
  email_exists: Boolean
  email_in: [String]
  email_not: String
  email_not_contains: String
  email_not_in: [String]
  firstName: String
  firstName_contains: String
  firstName_exists: Boolean
  firstName_in: [String]
  firstName_not: String
  firstName_not_contains: String
  firstName_not_in: [String]
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  labsCollection_exists: Boolean
  lastName: String
  lastName_contains: String
  lastName_exists: Boolean
  lastName_in: [String]
  lastName_not: String
  lastName_not_contains: String
  lastName_not_in: [String]
  orcid: String
  orcid_contains: String
  orcid_exists: Boolean
  orcid_in: [String]
  orcid_not: String
  orcid_not_contains: String
  orcid_not_in: [String]
  separatorBasicData_contains: String
  separatorBasicData_exists: Boolean
  separatorBasicData_not_contains: String
  sys: SysFilter
  teamsCollection_exists: Boolean
  type: String
  type_contains: String
  type_exists: Boolean
  type_in: [String]
  type_not: String
  type_not_contains: String
  type_not_in: [String]
  userTeam: cfUserTeamNestedFilter
  userTeam_exists: Boolean
}

type UsersLabsCollection {
  items: [Labs]!
  limit: Int!
  skip: Int!
  total: Int!
}

type UsersLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  sharedOutputsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): SharedOutputsCollection
  userTeamCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): UserTeamCollection
}

enum UsersOrder {
  email_ASC
  email_DESC
  firstName_ASC
  firstName_DESC
  id_ASC
  id_DESC
  lastName_ASC
  lastName_DESC
  orcid_ASC
  orcid_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  type_ASC
  type_DESC
}

type UsersSeparatorBasicData {
  json: JSON!
  links: UsersSeparatorBasicDataLinks!
}

type UsersSeparatorBasicDataAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type UsersSeparatorBasicDataEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type UsersSeparatorBasicDataLinks {
  assets: UsersSeparatorBasicDataAssets!
  entries: UsersSeparatorBasicDataEntries!
}

type UsersTeamsCollection {
  items: [Teams]!
  limit: Int!
  skip: Int!
  total: Int!
}

input cfTeamsNestedFilter {
  AND: [cfTeamsNestedFilter]
  OR: [cfTeamsNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  displayName: String
  displayName_contains: String
  displayName_exists: Boolean
  displayName_in: [String]
  displayName_not: String
  displayName_not_contains: String
  displayName_not_in: [String]
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  outputsCollection_exists: Boolean
  sys: SysFilter
}

input cfUserTeamNestedFilter {
  AND: [cfUserTeamNestedFilter]
  OR: [cfUserTeamNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
  team_exists: Boolean
  user_exists: Boolean
}

input cfUsersNestedFilter {
  AND: [cfUsersNestedFilter]
  OR: [cfUsersNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  email: String
  email_contains: String
  email_exists: Boolean
  email_in: [String]
  email_not: String
  email_not_contains: String
  email_not_in: [String]
  firstName: String
  firstName_contains: String
  firstName_exists: Boolean
  firstName_in: [String]
  firstName_not: String
  firstName_not_contains: String
  firstName_not_in: [String]
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  labsCollection_exists: Boolean
  lastName: String
  lastName_contains: String
  lastName_exists: Boolean
  lastName_in: [String]
  lastName_not: String
  lastName_not_contains: String
  lastName_not_in: [String]
  orcid: String
  orcid_contains: String
  orcid_exists: Boolean
  orcid_in: [String]
  orcid_not: String
  orcid_not_contains: String
  orcid_not_in: [String]
  separatorBasicData_contains: String
  separatorBasicData_exists: Boolean
  separatorBasicData_not_contains: String
  sys: SysFilter
  teamsCollection_exists: Boolean
  type: String
  type_contains: String
  type_exists: Boolean
  type_in: [String]
  type_not: String
  type_not_contains: String
  type_not_in: [String]
  userTeam_exists: Boolean
}
