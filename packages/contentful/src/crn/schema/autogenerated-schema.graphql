schema {
  query: Query
}

"""Represents a binary file in a space. An asset can be any file type."""
type Asset {
  contentType(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  fileName(locale: String): String
  height(locale: String): Int
  linkedFrom(allowedLocales: [String]): AssetLinkingCollections
  size(locale: String): Int
  sys: Sys!
  title(locale: String): String
  url(locale: String, transform: ImageTransformOptions): String
  width(locale: String): Int
}

type AssetCollection {
  items: [Asset]!
  limit: Int!
  skip: Int!
  total: Int!
}

input AssetFilter {
  AND: [AssetFilter]
  OR: [AssetFilter]
  contentType: String
  contentType_contains: String
  contentType_exists: Boolean
  contentType_in: [String]
  contentType_not: String
  contentType_not_contains: String
  contentType_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  fileName: String
  fileName_contains: String
  fileName_exists: Boolean
  fileName_in: [String]
  fileName_not: String
  fileName_not_contains: String
  fileName_not_in: [String]
  height: Int
  height_exists: Boolean
  height_gt: Int
  height_gte: Int
  height_in: [Int]
  height_lt: Int
  height_lte: Int
  height_not: Int
  height_not_in: [Int]
  size: Int
  size_exists: Boolean
  size_gt: Int
  size_gte: Int
  size_in: [Int]
  size_lt: Int
  size_lte: Int
  size_not: Int
  size_not_in: [Int]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
  width: Int
  width_exists: Boolean
  width_gt: Int
  width_gte: Int
  width_in: [Int]
  width_lt: Int
  width_lte: Int
  width_not: Int
  width_not_in: [Int]
}

type AssetLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  newsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): NewsCollection
  usersCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): UsersCollection
}

enum AssetOrder {
  contentType_ASC
  contentType_DESC
  fileName_ASC
  fileName_DESC
  height_ASC
  height_DESC
  size_ASC
  size_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  url_ASC
  url_DESC
  width_ASC
  width_DESC
}

"""[See type definition](https://app.contentful.com/spaces/5v6w5j61tndm/content_types/calendars)"""
type Calendars implements Entry {
  color(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  expirationDate(locale: String): Float
  googleCalendarId(locale: String): String
  linkedFrom(allowedLocales: [String]): CalendarsLinkingCollections
  name(locale: String): String
  resourceId(locale: String): String
  syncToken(locale: String): String
  sys: Sys!
}

type CalendarsCollection {
  items: [Calendars]!
  limit: Int!
  skip: Int!
  total: Int!
}

input CalendarsFilter {
  AND: [CalendarsFilter]
  OR: [CalendarsFilter]
  color: String
  color_contains: String
  color_exists: Boolean
  color_in: [String]
  color_not: String
  color_not_contains: String
  color_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  expirationDate: Float
  expirationDate_exists: Boolean
  expirationDate_gt: Float
  expirationDate_gte: Float
  expirationDate_in: [Float]
  expirationDate_lt: Float
  expirationDate_lte: Float
  expirationDate_not: Float
  expirationDate_not_in: [Float]
  googleCalendarId: String
  googleCalendarId_contains: String
  googleCalendarId_exists: Boolean
  googleCalendarId_in: [String]
  googleCalendarId_not: String
  googleCalendarId_not_contains: String
  googleCalendarId_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  resourceId: String
  resourceId_contains: String
  resourceId_exists: Boolean
  resourceId_in: [String]
  resourceId_not: String
  resourceId_not_contains: String
  resourceId_not_in: [String]
  syncToken: String
  syncToken_contains: String
  syncToken_exists: Boolean
  syncToken_in: [String]
  syncToken_not: String
  syncToken_not_contains: String
  syncToken_not_in: [String]
  sys: SysFilter
}

type CalendarsLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum CalendarsOrder {
  color_ASC
  color_DESC
  expirationDate_ASC
  expirationDate_DESC
  googleCalendarId_ASC
  googleCalendarId_DESC
  name_ASC
  name_DESC
  resourceId_ASC
  resourceId_DESC
  syncToken_ASC
  syncToken_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type ContentfulMetadata {
  tags: [ContentfulTag]!
}

input ContentfulMetadataFilter {
  tags: ContentfulMetadataTagsFilter
  tags_exists: Boolean
}

input ContentfulMetadataTagsFilter {
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

"""
Represents a tag entity for finding and organizing content easily.
    Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags
"""
type ContentfulTag {
  id: String
  name: String
}

"""[See type definition](https://app.contentful.com/spaces/5v6w5j61tndm/content_types/dashboard)"""
type Dashboard implements Entry {
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): DashboardLinkingCollections
  newsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): DashboardNewsCollection
  pagesCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): DashboardPagesCollection
  sys: Sys!
}

type DashboardCollection {
  items: [Dashboard]!
  limit: Int!
  skip: Int!
  total: Int!
}

input DashboardFilter {
  AND: [DashboardFilter]
  OR: [DashboardFilter]
  contentfulMetadata: ContentfulMetadataFilter
  newsCollection_exists: Boolean
  pagesCollection_exists: Boolean
  sys: SysFilter
}

type DashboardLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

type DashboardNewsCollection {
  items: [News]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum DashboardOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type DashboardPagesCollection {
  items: [Pages]!
  limit: Int!
  skip: Int!
  total: Int!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z,
    compliant with the 'date-time' format outlined in section 5.6 of
    the RFC 3339 profile of the ISO 8601 standard for representation
    of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`."""
scalar Dimension

interface Entry {
  contentfulMetadata: ContentfulMetadata!
  sys: Sys!
}

type EntryCollection {
  items: [Entry]!
  limit: Int!
  skip: Int!
  total: Int!
}

input EntryFilter {
  AND: [EntryFilter]
  OR: [EntryFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

enum EntryOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""[See type definition](https://app.contentful.com/spaces/5v6w5j61tndm/content_types/externalAuthors)"""
type ExternalAuthors implements Entry {
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): ExternalAuthorsLinkingCollections
  name(locale: String): String
  orcid(locale: String): String
  sys: Sys!
}

type ExternalAuthorsCollection {
  items: [ExternalAuthors]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ExternalAuthorsFilter {
  AND: [ExternalAuthorsFilter]
  OR: [ExternalAuthorsFilter]
  contentfulMetadata: ContentfulMetadataFilter
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  orcid: String
  orcid_contains: String
  orcid_exists: Boolean
  orcid_in: [String]
  orcid_not: String
  orcid_not_contains: String
  orcid_not_in: [String]
  sys: SysFilter
}

type ExternalAuthorsLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ExternalAuthorsOrder {
  name_ASC
  name_DESC
  orcid_ASC
  orcid_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""Team's external tools [See type definition](https://app.contentful.com/spaces/5v6w5j61tndm/content_types/externalTools)"""
type ExternalTools implements Entry {
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  linkedFrom(allowedLocales: [String]): ExternalToolsLinkingCollections
  name(locale: String): String
  sys: Sys!
  url(locale: String): String
}

type ExternalToolsCollection {
  items: [ExternalTools]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ExternalToolsFilter {
  AND: [ExternalToolsFilter]
  OR: [ExternalToolsFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  sys: SysFilter
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
}

type ExternalToolsLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  teamsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): TeamsCollection
}

enum ExternalToolsOrder {
  description_ASC
  description_DESC
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  url_ASC
  url_DESC
}

"""The 'HexColor' type represents color in `rgb:ffffff` string format."""
scalar HexColor

enum ImageFormat {
  AVIF
  """JPG image format."""
  JPG
  """
  Progressive JPG format stores multiple passes of an image in progressively higher detail.
          When a progressive image is loading, the viewer will first see a lower quality pixelated version which
          will gradually improve in detail, until the image is fully downloaded. This is to display an image as
          early as possible to make the layout look as designed.
  """
  JPG_PROGRESSIVE
  """PNG image format"""
  PNG
  """
  8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
          The 8-bit PNG format is mostly used for simple images, such as icons or logos.
  """
  PNG8
  """WebP image format."""
  WEBP
}

enum ImageResizeFocus {
  """Focus the resizing on the bottom."""
  BOTTOM
  """Focus the resizing on the bottom left."""
  BOTTOM_LEFT
  """Focus the resizing on the bottom right."""
  BOTTOM_RIGHT
  """Focus the resizing on the center."""
  CENTER
  """Focus the resizing on the largest face."""
  FACE
  """Focus the resizing on the area containing all the faces."""
  FACES
  """Focus the resizing on the left."""
  LEFT
  """Focus the resizing on the right."""
  RIGHT
  """Focus the resizing on the top."""
  TOP
  """Focus the resizing on the top left."""
  TOP_LEFT
  """Focus the resizing on the top right."""
  TOP_RIGHT
}

enum ImageResizeStrategy {
  """Crops a part of the original image to fit into the specified dimensions."""
  CROP
  """Resizes the image to the specified dimensions, cropping the image if needed."""
  FILL
  """Resizes the image to fit into the specified dimensions."""
  FIT
  """
  Resizes the image to the specified dimensions, padding the image if needed.
          Uses desired background color as padding color.
  """
  PAD
  """Resizes the image to the specified dimensions, changing the original aspect ratio if needed."""
  SCALE
  """Creates a thumbnail from the image."""
  THUMB
}

input ImageTransformOptions {
  """
  Desired background color, used with corner radius or `PAD` resize strategy.
          Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
  """
  backgroundColor: HexColor
  """
  Desired corner radius in pixels.
          Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
          Defaults to `0`. Uses desired background color as padding color,
          unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
  """
  cornerRadius: Int
  """Desired image format. Defaults to the original image format."""
  format: ImageFormat
  """Desired height in pixels. Defaults to the original image height."""
  height: Dimension
  """
  Desired quality of the image in percents.
          Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
  """
  quality: Quality
  """Desired resize focus area. Defaults to `CENTER`."""
  resizeFocus: ImageResizeFocus
  """Desired resize strategy. Defaults to `FIT`."""
  resizeStrategy: ImageResizeStrategy
  """Desired width in pixels. Defaults to the original image width."""
  width: Dimension
}

"""The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."""
scalar JSON

"""[See type definition](https://app.contentful.com/spaces/5v6w5j61tndm/content_types/labs)"""
type Labs implements Entry {
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): LabsLinkingCollections
  name(locale: String): String
  sys: Sys!
}

type LabsCollection {
  items: [Labs]!
  limit: Int!
  skip: Int!
  total: Int!
}

input LabsFilter {
  AND: [LabsFilter]
  OR: [LabsFilter]
  contentfulMetadata: ContentfulMetadataFilter
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  sys: SysFilter
}

type LabsLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  usersCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): UsersCollection
}

enum LabsOrder {
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""Videos and PDFs [See type definition](https://app.contentful.com/spaces/5v6w5j61tndm/content_types/media)"""
type Media implements Entry {
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): MediaLinkingCollections
  sys: Sys!
  url(locale: String): String
}

type MediaCollection {
  items: [Media]!
  limit: Int!
  skip: Int!
  total: Int!
}

input MediaFilter {
  AND: [MediaFilter]
  OR: [MediaFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
}

type MediaLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum MediaOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  url_ASC
  url_DESC
}

"""Meta data to store the state of content model through migrations [See type definition](https://app.contentful.com/spaces/5v6w5j61tndm/content_types/migration)"""
type Migration implements Entry {
  contentTypeId(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): MigrationLinkingCollections
  state(locale: String): JSON
  sys: Sys!
}

type MigrationCollection {
  items: [Migration]!
  limit: Int!
  skip: Int!
  total: Int!
}

input MigrationFilter {
  AND: [MigrationFilter]
  OR: [MigrationFilter]
  contentTypeId: String
  contentTypeId_contains: String
  contentTypeId_exists: Boolean
  contentTypeId_in: [String]
  contentTypeId_not: String
  contentTypeId_not_contains: String
  contentTypeId_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  state_exists: Boolean
  sys: SysFilter
}

type MigrationLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum MigrationOrder {
  contentTypeId_ASC
  contentTypeId_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""ASAP Hub News [See type definition](https://app.contentful.com/spaces/5v6w5j61tndm/content_types/news)"""
type News implements Entry {
  contentfulMetadata: ContentfulMetadata!
  frequency(locale: String): String
  link(locale: String): String
  linkText(locale: String): String
  linkedFrom(allowedLocales: [String]): NewsLinkingCollections
  publishDate(locale: String): DateTime
  shortText(locale: String): String
  sys: Sys!
  text(locale: String): NewsText
  thumbnail(locale: String, preview: Boolean): Asset
  title(locale: String): String
}

type NewsCollection {
  items: [News]!
  limit: Int!
  skip: Int!
  total: Int!
}

input NewsFilter {
  AND: [NewsFilter]
  OR: [NewsFilter]
  contentfulMetadata: ContentfulMetadataFilter
  frequency: String
  frequency_contains: String
  frequency_exists: Boolean
  frequency_in: [String]
  frequency_not: String
  frequency_not_contains: String
  frequency_not_in: [String]
  link: String
  linkText: String
  linkText_contains: String
  linkText_exists: Boolean
  linkText_in: [String]
  linkText_not: String
  linkText_not_contains: String
  linkText_not_in: [String]
  link_contains: String
  link_exists: Boolean
  link_in: [String]
  link_not: String
  link_not_contains: String
  link_not_in: [String]
  publishDate: DateTime
  publishDate_exists: Boolean
  publishDate_gt: DateTime
  publishDate_gte: DateTime
  publishDate_in: [DateTime]
  publishDate_lt: DateTime
  publishDate_lte: DateTime
  publishDate_not: DateTime
  publishDate_not_in: [DateTime]
  shortText: String
  shortText_contains: String
  shortText_exists: Boolean
  shortText_in: [String]
  shortText_not: String
  shortText_not_contains: String
  shortText_not_in: [String]
  sys: SysFilter
  text_contains: String
  text_exists: Boolean
  text_not_contains: String
  thumbnail_exists: Boolean
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type NewsLinkingCollections {
  dashboardCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): DashboardCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum NewsOrder {
  frequency_ASC
  frequency_DESC
  linkText_ASC
  linkText_DESC
  link_ASC
  link_DESC
  publishDate_ASC
  publishDate_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type NewsText {
  json: JSON!
  links: NewsTextLinks!
}

type NewsTextAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type NewsTextEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type NewsTextLinks {
  assets: NewsTextAssets!
  entries: NewsTextEntries!
}

"""[See type definition](https://app.contentful.com/spaces/5v6w5j61tndm/content_types/pages)"""
type Pages implements Entry {
  contentfulMetadata: ContentfulMetadata!
  link(locale: String): String
  linkText(locale: String): String
  linkedFrom(allowedLocales: [String]): PagesLinkingCollections
  path(locale: String): String
  shortText(locale: String): String
  sys: Sys!
  text(locale: String): PagesText
  title(locale: String): String
}

type PagesCollection {
  items: [Pages]!
  limit: Int!
  skip: Int!
  total: Int!
}

input PagesFilter {
  AND: [PagesFilter]
  OR: [PagesFilter]
  contentfulMetadata: ContentfulMetadataFilter
  link: String
  linkText: String
  linkText_contains: String
  linkText_exists: Boolean
  linkText_in: [String]
  linkText_not: String
  linkText_not_contains: String
  linkText_not_in: [String]
  link_contains: String
  link_exists: Boolean
  link_in: [String]
  link_not: String
  link_not_contains: String
  link_not_in: [String]
  path: String
  path_contains: String
  path_exists: Boolean
  path_in: [String]
  path_not: String
  path_not_contains: String
  path_not_in: [String]
  shortText: String
  shortText_contains: String
  shortText_exists: Boolean
  shortText_in: [String]
  shortText_not: String
  shortText_not_contains: String
  shortText_not_in: [String]
  sys: SysFilter
  text_contains: String
  text_exists: Boolean
  text_not_contains: String
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type PagesLinkingCollections {
  dashboardCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): DashboardCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum PagesOrder {
  linkText_ASC
  linkText_DESC
  link_ASC
  link_DESC
  path_ASC
  path_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type PagesText {
  json: JSON!
  links: PagesTextLinks!
}

type PagesTextAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type PagesTextEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type PagesTextLinks {
  assets: PagesTextAssets!
  entries: PagesTextEntries!
}

"""The 'Quality' type represents quality as whole numeric values between `1` and `100`."""
scalar Quality

type Query {
  asset(id: String!, locale: String, preview: Boolean): Asset
  assetCollection(limit: Int = 100, locale: String, order: [AssetOrder], preview: Boolean, skip: Int = 0, where: AssetFilter): AssetCollection
  calendars(id: String!, locale: String, preview: Boolean): Calendars
  calendarsCollection(limit: Int = 100, locale: String, order: [CalendarsOrder], preview: Boolean, skip: Int = 0, where: CalendarsFilter): CalendarsCollection
  dashboard(id: String!, locale: String, preview: Boolean): Dashboard
  dashboardCollection(limit: Int = 100, locale: String, order: [DashboardOrder], preview: Boolean, skip: Int = 0, where: DashboardFilter): DashboardCollection
  entryCollection(limit: Int = 100, locale: String, order: [EntryOrder], preview: Boolean, skip: Int = 0, where: EntryFilter): EntryCollection
  externalAuthors(id: String!, locale: String, preview: Boolean): ExternalAuthors
  externalAuthorsCollection(limit: Int = 100, locale: String, order: [ExternalAuthorsOrder], preview: Boolean, skip: Int = 0, where: ExternalAuthorsFilter): ExternalAuthorsCollection
  externalTools(id: String!, locale: String, preview: Boolean): ExternalTools
  externalToolsCollection(limit: Int = 100, locale: String, order: [ExternalToolsOrder], preview: Boolean, skip: Int = 0, where: ExternalToolsFilter): ExternalToolsCollection
  labs(id: String!, locale: String, preview: Boolean): Labs
  labsCollection(limit: Int = 100, locale: String, order: [LabsOrder], preview: Boolean, skip: Int = 0, where: LabsFilter): LabsCollection
  media(id: String!, locale: String, preview: Boolean): Media
  mediaCollection(limit: Int = 100, locale: String, order: [MediaOrder], preview: Boolean, skip: Int = 0, where: MediaFilter): MediaCollection
  migration(id: String!, locale: String, preview: Boolean): Migration
  migrationCollection(limit: Int = 100, locale: String, order: [MigrationOrder], preview: Boolean, skip: Int = 0, where: MigrationFilter): MigrationCollection
  news(id: String!, locale: String, preview: Boolean): News
  newsCollection(limit: Int = 100, locale: String, order: [NewsOrder], preview: Boolean, skip: Int = 0, where: NewsFilter): NewsCollection
  pages(id: String!, locale: String, preview: Boolean): Pages
  pagesCollection(limit: Int = 100, locale: String, order: [PagesOrder], preview: Boolean, skip: Int = 0, where: PagesFilter): PagesCollection
  teamMembership(id: String!, locale: String, preview: Boolean): TeamMembership
  teamMembershipCollection(limit: Int = 100, locale: String, order: [TeamMembershipOrder], preview: Boolean, skip: Int = 0, where: TeamMembershipFilter): TeamMembershipCollection
  teams(id: String!, locale: String, preview: Boolean): Teams
  teamsCollection(limit: Int = 100, locale: String, order: [TeamsOrder], preview: Boolean, skip: Int = 0, where: TeamsFilter): TeamsCollection
  users(id: String!, locale: String, preview: Boolean): Users
  usersCollection(limit: Int = 100, locale: String, order: [UsersOrder], preview: Boolean, skip: Int = 0, where: UsersFilter): UsersCollection
}

type Sys {
  environmentId: String!
  firstPublishedAt: DateTime
  id: String!
  publishedAt: DateTime
  publishedVersion: Int
  spaceId: String!
}

input SysFilter {
  firstPublishedAt: DateTime
  firstPublishedAt_exists: Boolean
  firstPublishedAt_gt: DateTime
  firstPublishedAt_gte: DateTime
  firstPublishedAt_in: [DateTime]
  firstPublishedAt_lt: DateTime
  firstPublishedAt_lte: DateTime
  firstPublishedAt_not: DateTime
  firstPublishedAt_not_in: [DateTime]
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  publishedAt: DateTime
  publishedAt_exists: Boolean
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  publishedAt_in: [DateTime]
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  publishedAt_not: DateTime
  publishedAt_not_in: [DateTime]
  publishedVersion: Float
  publishedVersion_exists: Boolean
  publishedVersion_gt: Float
  publishedVersion_gte: Float
  publishedVersion_in: [Float]
  publishedVersion_lt: Float
  publishedVersion_lte: Float
  publishedVersion_not: Float
  publishedVersion_not_in: [Float]
}

"""[See type definition](https://app.contentful.com/spaces/5v6w5j61tndm/content_types/teamMembership)"""
type TeamMembership implements Entry {
  contentfulMetadata: ContentfulMetadata!
  inactiveSinceDate(locale: String): DateTime
  linkedFrom(allowedLocales: [String]): TeamMembershipLinkingCollections
  role(locale: String): String
  sys: Sys!
  team(locale: String, preview: Boolean): Teams
}

type TeamMembershipCollection {
  items: [TeamMembership]!
  limit: Int!
  skip: Int!
  total: Int!
}

input TeamMembershipFilter {
  AND: [TeamMembershipFilter]
  OR: [TeamMembershipFilter]
  contentfulMetadata: ContentfulMetadataFilter
  inactiveSinceDate: DateTime
  inactiveSinceDate_exists: Boolean
  inactiveSinceDate_gt: DateTime
  inactiveSinceDate_gte: DateTime
  inactiveSinceDate_in: [DateTime]
  inactiveSinceDate_lt: DateTime
  inactiveSinceDate_lte: DateTime
  inactiveSinceDate_not: DateTime
  inactiveSinceDate_not_in: [DateTime]
  role: String
  role_contains: String
  role_exists: Boolean
  role_in: [String]
  role_not: String
  role_not_contains: String
  role_not_in: [String]
  sys: SysFilter
  team: cfTeamsNestedFilter
  team_exists: Boolean
}

type TeamMembershipLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  usersCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): UsersCollection
}

enum TeamMembershipOrder {
  inactiveSinceDate_ASC
  inactiveSinceDate_DESC
  role_ASC
  role_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""[See type definition](https://app.contentful.com/spaces/5v6w5j61tndm/content_types/teams)"""
type Teams implements Entry {
  applicationNumber(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  displayName(locale: String): String
  expertiseAndResourceTags(locale: String): [String]
  inactiveSince(locale: String): DateTime
  linkedFrom(allowedLocales: [String]): TeamsLinkingCollections
  projectSummary(locale: String): String
  projectTitle(locale: String): String
  sys: Sys!
  toolsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): TeamsToolsCollection
}

type TeamsCollection {
  items: [Teams]!
  limit: Int!
  skip: Int!
  total: Int!
}

input TeamsFilter {
  AND: [TeamsFilter]
  OR: [TeamsFilter]
  applicationNumber: String
  applicationNumber_contains: String
  applicationNumber_exists: Boolean
  applicationNumber_in: [String]
  applicationNumber_not: String
  applicationNumber_not_contains: String
  applicationNumber_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  displayName: String
  displayName_contains: String
  displayName_exists: Boolean
  displayName_in: [String]
  displayName_not: String
  displayName_not_contains: String
  displayName_not_in: [String]
  expertiseAndResourceTags_contains_all: [String]
  expertiseAndResourceTags_contains_none: [String]
  expertiseAndResourceTags_contains_some: [String]
  expertiseAndResourceTags_exists: Boolean
  inactiveSince: DateTime
  inactiveSince_exists: Boolean
  inactiveSince_gt: DateTime
  inactiveSince_gte: DateTime
  inactiveSince_in: [DateTime]
  inactiveSince_lt: DateTime
  inactiveSince_lte: DateTime
  inactiveSince_not: DateTime
  inactiveSince_not_in: [DateTime]
  projectSummary: String
  projectSummary_contains: String
  projectSummary_exists: Boolean
  projectSummary_in: [String]
  projectSummary_not: String
  projectSummary_not_contains: String
  projectSummary_not_in: [String]
  projectTitle: String
  projectTitle_contains: String
  projectTitle_exists: Boolean
  projectTitle_in: [String]
  projectTitle_not: String
  projectTitle_not_contains: String
  projectTitle_not_in: [String]
  sys: SysFilter
  toolsCollection_exists: Boolean
}

type TeamsLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  teamMembershipCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): TeamMembershipCollection
}

enum TeamsOrder {
  applicationNumber_ASC
  applicationNumber_DESC
  displayName_ASC
  displayName_DESC
  inactiveSince_ASC
  inactiveSince_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type TeamsToolsCollection {
  items: [ExternalTools]!
  limit: Int!
  skip: Int!
  total: Int!
}

"""[See type definition](https://app.contentful.com/spaces/5v6w5j61tndm/content_types/users)"""
type Users implements Entry {
  adminNotes(locale: String): String
  alumniLocation(locale: String): String
  alumniSinceDate(locale: String): DateTime
  avatar(locale: String, preview: Boolean): Asset
  biography(locale: String): String
  city(locale: String): String
  connections(locale: String): [String]
  contactEmail(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  country(locale: String): String
  degree(locale: String): String
  dismissedGettingStarted(locale: String): Boolean
  email(locale: String): String
  expertiseAndResourceDescription(locale: String): String
  expertiseAndResourceTags(locale: String): [String]
  firstName(locale: String): String
  github(locale: String): String
  googleScholar(locale: String): String
  institution(locale: String): String
  jobTitle(locale: String): String
  labsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): UsersLabsCollection
  lastName(locale: String): String
  linkedFrom(allowedLocales: [String]): UsersLinkingCollections
  linkedIn(locale: String): String
  onboarded(locale: String): Boolean
  orcid(locale: String): String
  orcidLastModifiedDate(locale: String): DateTime
  orcidLastSyncDate(locale: String): DateTime
  questions(locale: String): [String]
  reachOut(locale: String): String
  researchGate(locale: String): String
  researchInterests(locale: String): String
  researcherId(locale: String): String
  responsibilities(locale: String): String
  role(locale: String): String
  sys: Sys!
  teamsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): UsersTeamsCollection
  twitter(locale: String): String
  website1(locale: String): String
  website2(locale: String): String
}

type UsersCollection {
  items: [Users]!
  limit: Int!
  skip: Int!
  total: Int!
}

input UsersFilter {
  AND: [UsersFilter]
  OR: [UsersFilter]
  adminNotes: String
  adminNotes_contains: String
  adminNotes_exists: Boolean
  adminNotes_in: [String]
  adminNotes_not: String
  adminNotes_not_contains: String
  adminNotes_not_in: [String]
  alumniLocation: String
  alumniLocation_contains: String
  alumniLocation_exists: Boolean
  alumniLocation_in: [String]
  alumniLocation_not: String
  alumniLocation_not_contains: String
  alumniLocation_not_in: [String]
  alumniSinceDate: DateTime
  alumniSinceDate_exists: Boolean
  alumniSinceDate_gt: DateTime
  alumniSinceDate_gte: DateTime
  alumniSinceDate_in: [DateTime]
  alumniSinceDate_lt: DateTime
  alumniSinceDate_lte: DateTime
  alumniSinceDate_not: DateTime
  alumniSinceDate_not_in: [DateTime]
  avatar_exists: Boolean
  biography: String
  biography_contains: String
  biography_exists: Boolean
  biography_in: [String]
  biography_not: String
  biography_not_contains: String
  biography_not_in: [String]
  city: String
  city_contains: String
  city_exists: Boolean
  city_in: [String]
  city_not: String
  city_not_contains: String
  city_not_in: [String]
  connections_contains_all: [String]
  connections_contains_none: [String]
  connections_contains_some: [String]
  connections_exists: Boolean
  contactEmail: String
  contactEmail_contains: String
  contactEmail_exists: Boolean
  contactEmail_in: [String]
  contactEmail_not: String
  contactEmail_not_contains: String
  contactEmail_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  country: String
  country_contains: String
  country_exists: Boolean
  country_in: [String]
  country_not: String
  country_not_contains: String
  country_not_in: [String]
  degree: String
  degree_contains: String
  degree_exists: Boolean
  degree_in: [String]
  degree_not: String
  degree_not_contains: String
  degree_not_in: [String]
  dismissedGettingStarted: Boolean
  dismissedGettingStarted_exists: Boolean
  dismissedGettingStarted_not: Boolean
  email: String
  email_contains: String
  email_exists: Boolean
  email_in: [String]
  email_not: String
  email_not_contains: String
  email_not_in: [String]
  expertiseAndResourceDescription: String
  expertiseAndResourceDescription_contains: String
  expertiseAndResourceDescription_exists: Boolean
  expertiseAndResourceDescription_in: [String]
  expertiseAndResourceDescription_not: String
  expertiseAndResourceDescription_not_contains: String
  expertiseAndResourceDescription_not_in: [String]
  expertiseAndResourceTags_contains_all: [String]
  expertiseAndResourceTags_contains_none: [String]
  expertiseAndResourceTags_contains_some: [String]
  expertiseAndResourceTags_exists: Boolean
  firstName: String
  firstName_contains: String
  firstName_exists: Boolean
  firstName_in: [String]
  firstName_not: String
  firstName_not_contains: String
  firstName_not_in: [String]
  github: String
  github_contains: String
  github_exists: Boolean
  github_in: [String]
  github_not: String
  github_not_contains: String
  github_not_in: [String]
  googleScholar: String
  googleScholar_contains: String
  googleScholar_exists: Boolean
  googleScholar_in: [String]
  googleScholar_not: String
  googleScholar_not_contains: String
  googleScholar_not_in: [String]
  institution: String
  institution_contains: String
  institution_exists: Boolean
  institution_in: [String]
  institution_not: String
  institution_not_contains: String
  institution_not_in: [String]
  jobTitle: String
  jobTitle_contains: String
  jobTitle_exists: Boolean
  jobTitle_in: [String]
  jobTitle_not: String
  jobTitle_not_contains: String
  jobTitle_not_in: [String]
  labsCollection_exists: Boolean
  lastName: String
  lastName_contains: String
  lastName_exists: Boolean
  lastName_in: [String]
  lastName_not: String
  lastName_not_contains: String
  lastName_not_in: [String]
  linkedIn: String
  linkedIn_contains: String
  linkedIn_exists: Boolean
  linkedIn_in: [String]
  linkedIn_not: String
  linkedIn_not_contains: String
  linkedIn_not_in: [String]
  onboarded: Boolean
  onboarded_exists: Boolean
  onboarded_not: Boolean
  orcid: String
  orcidLastModifiedDate: DateTime
  orcidLastModifiedDate_exists: Boolean
  orcidLastModifiedDate_gt: DateTime
  orcidLastModifiedDate_gte: DateTime
  orcidLastModifiedDate_in: [DateTime]
  orcidLastModifiedDate_lt: DateTime
  orcidLastModifiedDate_lte: DateTime
  orcidLastModifiedDate_not: DateTime
  orcidLastModifiedDate_not_in: [DateTime]
  orcidLastSyncDate: DateTime
  orcidLastSyncDate_exists: Boolean
  orcidLastSyncDate_gt: DateTime
  orcidLastSyncDate_gte: DateTime
  orcidLastSyncDate_in: [DateTime]
  orcidLastSyncDate_lt: DateTime
  orcidLastSyncDate_lte: DateTime
  orcidLastSyncDate_not: DateTime
  orcidLastSyncDate_not_in: [DateTime]
  orcid_contains: String
  orcid_exists: Boolean
  orcid_in: [String]
  orcid_not: String
  orcid_not_contains: String
  orcid_not_in: [String]
  questions_contains_all: [String]
  questions_contains_none: [String]
  questions_contains_some: [String]
  questions_exists: Boolean
  reachOut: String
  reachOut_contains: String
  reachOut_exists: Boolean
  reachOut_in: [String]
  reachOut_not: String
  reachOut_not_contains: String
  reachOut_not_in: [String]
  researchGate: String
  researchGate_contains: String
  researchGate_exists: Boolean
  researchGate_in: [String]
  researchGate_not: String
  researchGate_not_contains: String
  researchGate_not_in: [String]
  researchInterests: String
  researchInterests_contains: String
  researchInterests_exists: Boolean
  researchInterests_in: [String]
  researchInterests_not: String
  researchInterests_not_contains: String
  researchInterests_not_in: [String]
  researcherId: String
  researcherId_contains: String
  researcherId_exists: Boolean
  researcherId_in: [String]
  researcherId_not: String
  researcherId_not_contains: String
  researcherId_not_in: [String]
  responsibilities: String
  responsibilities_contains: String
  responsibilities_exists: Boolean
  responsibilities_in: [String]
  responsibilities_not: String
  responsibilities_not_contains: String
  responsibilities_not_in: [String]
  role: String
  role_contains: String
  role_exists: Boolean
  role_in: [String]
  role_not: String
  role_not_contains: String
  role_not_in: [String]
  sys: SysFilter
  teamsCollection_exists: Boolean
  twitter: String
  twitter_contains: String
  twitter_exists: Boolean
  twitter_in: [String]
  twitter_not: String
  twitter_not_contains: String
  twitter_not_in: [String]
  website1: String
  website1_contains: String
  website1_exists: Boolean
  website1_in: [String]
  website1_not: String
  website1_not_contains: String
  website1_not_in: [String]
  website2: String
  website2_contains: String
  website2_exists: Boolean
  website2_in: [String]
  website2_not: String
  website2_not_contains: String
  website2_not_in: [String]
}

type UsersLabsCollection {
  items: [Labs]!
  limit: Int!
  skip: Int!
  total: Int!
}

type UsersLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum UsersOrder {
  alumniLocation_ASC
  alumniLocation_DESC
  alumniSinceDate_ASC
  alumniSinceDate_DESC
  city_ASC
  city_DESC
  contactEmail_ASC
  contactEmail_DESC
  country_ASC
  country_DESC
  degree_ASC
  degree_DESC
  dismissedGettingStarted_ASC
  dismissedGettingStarted_DESC
  email_ASC
  email_DESC
  firstName_ASC
  firstName_DESC
  github_ASC
  github_DESC
  googleScholar_ASC
  googleScholar_DESC
  institution_ASC
  institution_DESC
  jobTitle_ASC
  jobTitle_DESC
  lastName_ASC
  lastName_DESC
  linkedIn_ASC
  linkedIn_DESC
  onboarded_ASC
  onboarded_DESC
  orcidLastModifiedDate_ASC
  orcidLastModifiedDate_DESC
  orcidLastSyncDate_ASC
  orcidLastSyncDate_DESC
  orcid_ASC
  orcid_DESC
  reachOut_ASC
  reachOut_DESC
  researchGate_ASC
  researchGate_DESC
  researcherId_ASC
  researcherId_DESC
  role_ASC
  role_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  twitter_ASC
  twitter_DESC
  website1_ASC
  website1_DESC
  website2_ASC
  website2_DESC
}

type UsersTeamsCollection {
  items: [TeamMembership]!
  limit: Int!
  skip: Int!
  total: Int!
}

input cfTeamsNestedFilter {
  AND: [cfTeamsNestedFilter]
  OR: [cfTeamsNestedFilter]
  applicationNumber: String
  applicationNumber_contains: String
  applicationNumber_exists: Boolean
  applicationNumber_in: [String]
  applicationNumber_not: String
  applicationNumber_not_contains: String
  applicationNumber_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  displayName: String
  displayName_contains: String
  displayName_exists: Boolean
  displayName_in: [String]
  displayName_not: String
  displayName_not_contains: String
  displayName_not_in: [String]
  expertiseAndResourceTags_contains_all: [String]
  expertiseAndResourceTags_contains_none: [String]
  expertiseAndResourceTags_contains_some: [String]
  expertiseAndResourceTags_exists: Boolean
  inactiveSince: DateTime
  inactiveSince_exists: Boolean
  inactiveSince_gt: DateTime
  inactiveSince_gte: DateTime
  inactiveSince_in: [DateTime]
  inactiveSince_lt: DateTime
  inactiveSince_lte: DateTime
  inactiveSince_not: DateTime
  inactiveSince_not_in: [DateTime]
  projectSummary: String
  projectSummary_contains: String
  projectSummary_exists: Boolean
  projectSummary_in: [String]
  projectSummary_not: String
  projectSummary_not_contains: String
  projectSummary_not_in: [String]
  projectTitle: String
  projectTitle_contains: String
  projectTitle_exists: Boolean
  projectTitle_in: [String]
  projectTitle_not: String
  projectTitle_not_contains: String
  projectTitle_not_in: [String]
  sys: SysFilter
  toolsCollection_exists: Boolean
}
